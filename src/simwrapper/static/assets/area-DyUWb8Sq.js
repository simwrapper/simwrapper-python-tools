import{d as u,S as c,B as h,U as m,g as f,n as g}from"./index-BX7jQcoh.js";import{V as p}from"./VuePlotly-CfpY3a51.js";import{b as y}from"./ErrorPanel-Bv11F2tj.js";import{a as b}from"./ColorsAndWidths-CaSMrknU.js";import"./HTTPFileSystem-D9FfZC5j.js";import"./fxp-DjoqftHf.js";import"./index-DFKcNkqO.js";import"./index-lhh_utkZ.js";import"./SW_logo_white-Db4Yi2rP.js";import"./TopSheet-BbB-TdnX.js";import"./DashboardDataManager-DOwC_6nC.js";import"./group-hI8ly2Wr.js";import"./index-_doEQLKC.js";import"./cubehelix-BzW-tINw.js";import"./threshold-CrWFx_nu.js";import"./rainbow-DNS2KC2A.js";const x=u({name:"AreaChartPanel",components:{VuePlotly:p},props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},files:{type:Array,required:!0},config:{type:Object,required:!0},cardTitle:{type:String,required:!0},cardId:String,datamanager:{type:Object,required:!0}},data:()=>({globalState:f.state,dataSet:{},id:"area-"+Math.floor(1e12*Math.random()),colorMap:{},YAMLrequirementsArea:{dataset:"",x:""},data:[],layout:{height:300,margin:{t:8,b:0,l:0,r:0,pad:2},font:{color:"#444444",family:m},xaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:16},animate:!0,showgrid:!1},legend:{orientation:"v",x:1,y:1}},options:{displaylogo:!1,responsive:!0,automargin:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"area-chart",width:null,height:null}}}),async mounted(){this.updateLayout(),this.updateTheme(),this.options.toImageButtonOptions.filename=y(this.cardTitle,this.subfolder),this.dataSet=await this.loadData(),this.updateChart(),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions}),this.$emit("isLoaded")},beforeDestroy(){this.datamanager?.removeFilterListener({...this.config,subfolder:this.subfolder},this.handleFilterChanged)},watch:{"globalState.isDarkMode"(){this.updateTheme()}},methods:{changeDimensions(t){this.layout=Object.assign({},this.layout,t)},updateLayout(){this.layout.xaxis.title.text=this.config.xAxisTitle||this.config.xAxisName||"",this.layout.yaxis.title.text=this.config.yAxisTitle||this.config.yAxisName||""},updateTheme(){const t={paper_bgcolor:h[this.globalState.colorScheme],plot_bgcolor:h[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},handleFilterChanged(){if(!this.datamanager)return;const{filteredRows:t}=this.datamanager.getFilteredDataset(this.config);if(!t||!t.length)this.dataSet={allRows:{}};else{const e={},a=Object.keys(t[0]);a.forEach(i=>e[i]={name:i,values:[]}),t.forEach(i=>{a.forEach(s=>e[s].values.push(i[s]))}),this.dataSet={allRows:e}}this.updateChart()},async loadData(){if(!this.datamanager)return{};try{this.validateYAML();let t=await this.datamanager.getDataset(this.config,{subfolder:this.subfolder});if(!this.config.filters)return t;this.datamanager.addFilterListener({...this.config,subfolder:this.subfolder},this.handleFilterChanged);for(const[e,a]of Object.entries(this.config.filters)){const i={dataset:this.config.dataset,column:e,value:a,range:Array.isArray(a)};this.datamanager.setFilter(i)}return{allRows:{}}}catch(t){this.$emit("error",`Error loading: ${this.subfolder}/${this.config.dataset}`),console.error(""+t)}return{allRows:{}}},validateYAML(){for(const t in this.YAMLrequirementsArea)t in this.config||this.$emit("error",{type:c.ERROR,msg:`Area chart missing required key: ${t}`,desc:`Required keys: ${Object.keys(this.YAMLrequirementsArea)}`})},updateChart(){try{this.config.groupBy?this.updateChartWithGroupBy():this.updateChartSimple()}catch(t){const e=""+t;this.$emit("error",{type:c.ERROR,msg:e})}},updateChartWithGroupBy(){},updateChartSimple(){const t=this.dataSet.allRows||{},e=Object.keys(t);let a=!1,i=[];if(!e.length)return;let s=this.config.columns||this.config.usedCol;if(!s&&e.length&&(s=e.filter(o=>o!==this.config.x).sort()),this.colorMap=b(s,this.config.colorRamp),this.config.legendName&&(this.config.legendTitles=this.config.legendName),this.config.legendTitles?.length&&(a=!0),!t[this.config.x]){this.$emit("error",`${this.cardTitle}: "${this.config.dataset}" x column "${this.config.x}" missing`);return}const l={};i=t[this.config.x].values||[],this.config.skipFirstRow&&(i=i.slice(1));for(let o=0;o<s.length;o++){const r=s[o],d=a?this.config.legendTitles[o]??r:r;let n=t[r].values;this.config.skipFirstRow&&(n=n.slice(1)),this.config.convertToSeconds&&(n=this.convertToSeconds(n)),l[r]={name:d,x:i,y:n,stackgroup:"one",mode:"none",marker:{color:this.colorMap[r]}}}this.data=Object.values(l)},convertToSeconds(t){t=t.map(e=>{try{return e.split(":").reduce((s,l)=>parseInt(l,10)+s*60,0)}catch{return 0}})}}});var S=function(){var e=this,a=e._self._c;return e._self._setupProxy,a("VuePlotly",{staticClass:"myplot",attrs:{data:e.data,layout:e.layout,options:e.options}})},v=[],C=g(x,S,v,!1,null,"a33ad474");const I=C.exports;export{I as default};
