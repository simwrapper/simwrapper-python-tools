import{d as _,n as M,g as R,m as L,S as w,V as N,C as B}from"./index-CHe7BiNX.js";import{G as H}from"./lil-gui.esm-D2cLj-mk.js";import{d as G}from"./index-CVL_6l40.js";import{Y as k}from"./index-DFKcNkqO.js";import{c as $}from"./index-B0QPu2l3.js";import{a as j,D as q}from"./DashboardDataManager-DadBWrpd.js";import{u as U,H as Y}from"./HTTPFileSystem-Cf8G_bcW.js";import{g as W,h as A}from"./ColorsAndWidths-DQGojr_h.js";import{C as V}from"./Coords-In7NRIX8.js";import{B as X}from"./BackgroundMapOnTop-84v7Y9j_.js";import{C as Z}from"./CollapsiblePanel-GuobHpcZ.js";import{D as J}from"./DrawingTool-CaOc8yNx.js";import{Z as K}from"./ZoomButtons-B7tt6RkT.js";import{M as Q}from"./mapbox-overlay-BWTNBTi1.js";import{C as tt}from"./column-layer-BEEIazOy.js";import{G as et,u as it,U as st}from"./layer-GQvgsG1_.js";import"./group-hI8ly2Wr.js";import"./index-_doEQLKC.js";import"./fxp-DjoqftHf.js";import"./color-CBfzWUsH.js";import"./bisect-CYcslDjR.js";import"./threshold-BCEk2Ck_.js";import"./init-DZFJxo1o.js";import"./viridis-Dsxo9Ge-.js";import"./rainbow-DYLOPEGn.js";import"./geojson-layer-ClBV_VpI.js";import"./text-layer-Cpq7KRgR.js";import"./path-layer-BllYebBs.js";class at extends et{constructor(t={}){const{id:i=it("cube-geometry"),indices:s=!0}=t;super(s?{...t,id:i,topology:"triangle-list",indices:{size:1,value:ot},attributes:{...ct,...t.attributes}}:{...t,id:i,topology:"triangle-list",indices:void 0,attributes:{...dt,...t.attributes}})}}const ot=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),lt=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),nt=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),rt=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),ht=new Float32Array([1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,1,1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1]),mt=new Float32Array([1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,1,0,0]),ut=new Float32Array([1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,0,1]),ct={POSITION:{size:3,value:lt},NORMAL:{size:3,value:nt},TEXCOORD_0:{size:2,value:rt}},dt={POSITION:{size:3,value:ht},TEXCOORD_0:{size:2,value:mt},COLOR_0:{size:3,value:ut}},pt={cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}};class F extends tt{_updateGeometry(){const t=new at;this.state.fillModel.setGeometry(t)}draw({uniforms:t}){const{elevationScale:i,extruded:s,offset:o,coverage:h,cellSize:r,angle:m,radiusUnits:g}=this.props,u=this.state.fillModel,d={radius:r/2,radiusUnits:st[g],angle:m,offset:o,extruded:s,stroked:!1,coverage:h,elevationScale:i,edgeDistance:1,isStroke:!1,widthUnits:0,widthScale:0,widthMinPixels:0,widthMaxPixels:0};u.shaderInputs.setProps({column:d}),u.draw(this.context.renderPass)}}F.layerName="GridCellLayer";F.defaultProps=pt;const gt=_({name:"clickThroughTimes",props:{range:{type:Array,required:!0},allTimes:[]},data:()=>({state:{datasetRange:[0,86400],label:"",timeFilter:[0,3599],timeLabel:[0],currentTime:0,allTimesIndex:0},id:"id-"+Math.floor(1e12*Math.random())}),computed:{fullDatasetTimeSpan(){return console.log(this.state.datasetRange),this.state.datasetRange[1]-this.state.datasetRange[0]},hasNonZeroTimeRange(){return!!this.fullDatasetTimeSpan}},mounted(){this.setupInitialValues()},watch:{"state.allTimesIndex"(){this.emitValues()}},methods:{setupInitialValues(){this.state.label=this.convertSecondsToClockTimeMinutes(this.$props.allTimes[0]),this.state.timeFilter=this.allTimes[this.state.allTimesIndex],this.emitValues()},getPreviousHour(){this.state.allTimesIndex>0?(this.state.allTimesIndex--,this.state.label=this.convertSecondsToClockTimeMinutes(this.$props.allTimes[this.state.allTimesIndex])):this.state.label=this.convertSecondsToClockTimeMinutes(this.$props.allTimes[0]),this.state.timeFilter=this.allTimes[this.state.allTimesIndex]},getNextHour(){this.state.allTimesIndex<this.$props.allTimes.length-1?(this.state.allTimesIndex++,this.state.label=this.convertSecondsToClockTimeMinutes(this.$props.allTimes[this.state.allTimesIndex])):this.state.label=this.convertSecondsToClockTimeMinutes(this.$props.allTimes[this.state.allTimesIndex]),this.state.timeFilter=this.allTimes[this.state.allTimesIndex]},emitValues(){this.$emit("timeUpdate",{extent:this.state.timeFilter,index:this.state.allTimesIndex})},convertSecondsToClockTimeMinutes(e){const t=Math.floor(e/3600),i=Math.floor((e-t*3600)/60),s={h:`${t}`,m:`${i}`.padStart(2,"0")};return`${s.h}:${s.m}`},updateData(){this.state.timeLabel=[this.convertSecondsToClockTimeMinutes(this.allTimes[0])],this.state.timeFilter=[this.allTimes[0]]}}});var ft=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"click-through-times-component"},[i("div",{staticClass:"label-area"},[i("div",{staticClass:"label"},[t._v(t._s(t.state.label))]),i("div",{staticClass:"buttons-row"},[i("button",{staticClass:"button play-button",attrs:{size:"is-small",type:"is-link"},on:{click:t.getPreviousHour}},[t._v(t._s("<"))]),i("button",{staticClass:"button play-button2",attrs:{size:"is-small",type:"is-link"},on:{click:t.getNextHour}},[t._v(t._s(">"))])])])])},vt=[],Tt=M(gt,ft,vt,!1,null,"71a236e1");const Ct=Tt.exports,I=6,yt=_({name:"TimeSliderV2",props:{range:{type:Array,required:!0},allTimes:[]},data:()=>({state:{componentWidth:0,dragStartX:0,dragType:0,isDragging:!1,isSetupComplete:!1,leftPosition:0,rightPosition:1,datasetRange:[0,86400],labels:["",""],animationElapsedTime:0,startTime:0,timeFilter:[0,3599],animator:null,timeLabels:[0,1],currentTime:0},id:"id-"+Math.floor(1e12*Math.random()),resizer:null,ANIMATE_SPEED:5,isAnimating:!1}),computed:{fullDatasetTimeSpan(){return this.state.datasetRange[1]-this.state.datasetRange[0]+this.allTimes[0]},extentLeftToRight(){return this.state.rightPosition-this.state.leftPosition},hasNonZeroTimeRange(){return!!this.fullDatasetTimeSpan},calculateActiveMargins(){const e=this.state.componentWidth-2*I,t=Math.floor(e*this.state.leftPosition),i=Math.floor(e*(1-this.state.rightPosition));return{marginLeft:`${t}px`,marginRight:`${i}px`}}},mounted(){this.allTimes.unshift(0),this.range[0]=0,this.getDimensions(),this.setupInitialValues(),this.setupResizer(),window.addEventListener("mouseup",this.dragEnd),window.addEventListener("mousemove",this.dragging)},beforeDestroy(){this.resizer?.disconnect(),window.removeEventListener("mouseup",this.dragEnd),window.removeEventListener("mousemove",this.dragging),this.state.animator&&window.cancelAnimationFrame(this.state.animator)},watch:{"state.currentTime"(){this.updateExtent()},labels(){this.updateLabels()},"state.leftPosition"(){this.emitValues()},"state.rightPosition"(){this.emitValues()}},methods:{updateAnimation(){this.isAnimating=!this.isAnimating,this.isAnimating&&(this.state.animationElapsedTime=this.state.timeFilter[0]-this.range[0],this.state.startTime=Date.now()-this.state.animationElapsedTime/this.ANIMATE_SPEED,this.animate())},findIndexLessThanOrEqualTo(e){let t=0,i=this.allTimes.length-1,s=0;for(;t<=i;){const o=Math.floor((t+i)/2);if(this.allTimes[o]===e)return o;this.allTimes[o]<=e?(s=o,t=o+1):i=o-1}return s},animate(){if(!this.isAnimating)return;this.state.animationElapsedTime=this.ANIMATE_SPEED*(Date.now()-this.state.startTime);const e=this.state.animationElapsedTime+this.range[0];this.state.currentTime=this.findIndexLessThanOrEqualTo(e),e>this.range[1]+this.allTimes[0]&&(this.state.startTime=Date.now(),this.state.animationElapsedTime=0),this.state.timeFilter=[this.allTimes[this.state.currentTime],this.allTimes[this.state.currentTime+1]==null?0:this.allTimes[this.state.currentTime+1]],this.state.animator=window.requestAnimationFrame(this.animate)},setupResizer(){try{this.resizer=new ResizeObserver(this.getDimensions);const e=document.getElementById(`id-${this.id}`);this.resizer.observe(e)}catch(e){console.error(""+e)}},setupInitialValues(){try{this.range&&(this.state.datasetRange=this.range,this.state.timeFilter=[this.allTimes[0],this.allTimes[1]]),this.fullDatasetTimeSpan===0?(this.state.leftPosition=0,this.state.rightPosition=1):this.updateExtent()}catch(e){console.error(""+e)}finally{this.state.isSetupComplete=!0}},updateExtent(){this.state.timeFilter&&(this.state.leftPosition=1/this.fullDatasetTimeSpan*(this.allTimes[this.state.currentTime]-this.allTimes[0]),this.state.rightPosition=1/this.fullDatasetTimeSpan*(this.allTimes[this.state.currentTime+1]==null?this.allTimes[this.state.currentTime]+this.allTimes[0]:this.allTimes[this.state.currentTime+1]-this.allTimes[0]),this.state.timeLabels=[this.convertSecondsToClockTimeMinutes(this.allTimes[this.state.currentTime]),this.convertSecondsToClockTimeMinutes(this.allTimes[this.state.currentTime+1]==null?this.allTimes[this.state.currentTime]+this.allTimes[0]:this.allTimes[this.state.currentTime+1])],this.updateLabels())},updateLabels(){this.state.timeLabels&&(this.state.labels=this.state.timeLabels)},emitValues(){this.state.isSetupComplete&&this.$emit("timeExtent",this.state.timeFilter)},convertSecondsToClockTimeMinutes(e){const t=Math.floor(e/3600),i=Math.floor((e-t*3600)/60),s={h:`${t}`,m:`${i}`.padStart(2,"0")};return`${s.h}:${s.m}`},getDimensions(){this.state.componentWidth=this.$refs.slider?.clientWidth||0},dragStart(e){this.state.isDragging=!0,this.state.dragStartX=e.clientX;const t=this.state.componentWidth-2*I,i=Math.floor(t*this.state.leftPosition),s=Math.floor(t*(1-this.state.rightPosition)),o=this.state.componentWidth-s-i-2*I;e.offsetX>=0&&e.offsetX<o?this.state.dragType=0:e.offsetX<0?this.state.dragType=1:e.offsetX>o&&(this.state.dragType=2)},dragging(e){if(!this.state.isDragging)return;const t=e.clientX-this.state.dragStartX,i=this.state.componentWidth-2*I;if(this.state.dragType==0){const s=this.extentLeftToRight;let o=(i*this.state.leftPosition+t)/i,h=o+s;o<0&&(o=0,h=s),h>1&&(h=1,o=h-s),this.state.leftPosition=o,this.state.rightPosition=h,this.updateLabels(),this.updateData(),this.state.dragStartX=e.clientX;return}},dragEnd(e){const t=this.findIndexLessThanOrEqualTo(this.state.leftPosition*this.fullDatasetTimeSpan+this.allTimes[0]);this.state.leftPosition=1/this.fullDatasetTimeSpan*(this.allTimes[t]-this.allTimes[0]),this.state.rightPosition=1/this.fullDatasetTimeSpan*(this.allTimes[t+1]==null?this.allTimes[t]+this.allTimes[0]:this.allTimes[t+1]-this.allTimes[0]),this.state.timeFilter=[this.allTimes[t]-this.allTimes[0],this.allTimes[t+1]==null?this.allTimes[t]+this.allTimes[0]:this.allTimes[t+1]-this.allTimes[0]],this.state.isDragging=!1},updateData(){const e=this.findIndexLessThanOrEqualTo(this.state.leftPosition*this.fullDatasetTimeSpan+this.allTimes[0]),t=this.findIndexLessThanOrEqualTo(this.state.leftPosition*this.fullDatasetTimeSpan+this.allTimes[0])+1;this.state.timeLabels=[this.convertSecondsToClockTimeMinutes(this.allTimes[e]),this.convertSecondsToClockTimeMinutes(this.allTimes[t])],this.state.timeFilter=[this.allTimes[e],this.allTimes[t]]}}});var bt=function(){var t=this,i=t._self._c;return t._self._setupProxy,t.hasNonZeroTimeRange?i("div",{staticClass:"time-slider-component",attrs:{id:`id-${t.id}`}},[i("div",{staticClass:"label-area"},[i("p",{staticClass:"p1"},[t._v(t._s(t.state.labels[0]))]),i("p",{directives:[{name:"show",rawName:"v-show",value:t.state.labels[1]!==void 0,expression:"state.labels[1] !== undefined"}],staticClass:"p2"},[t._v(" - "+t._s(t.state.labels[1]))])]),i("div",{staticClass:"slider-area"},[i("button",{staticClass:"button play-button",attrs:{size:"is-small",type:"is-link"},on:{click:t.updateAnimation}},[t._v(t._s(t.isAnimating?"| |":">"))]),i("div",{ref:"slider",staticClass:"time-slider-dragger",on:{mousemove:t.dragging}},[i("div",{staticClass:"active-region",style:t.calculateActiveMargins,on:{mousedown:t.dragStart,mouseup:function(s){return s.stopPropagation(),t.dragEnd.apply(null,arguments)},mousemove:function(s){return s.stopPropagation(),t.dragging.apply(null,arguments)}}})])])]):t._e()},Dt=[],xt=M(yt,bt,Dt,!1,null,"c898e554");const St=xt.exports,zt=_({name:"MyDeckComponent",props:{viewId:{type:Number,required:!0},dark:{type:Boolean,required:!0},data:{type:Object,required:!0},mapIsIndependent:{type:Boolean,required:!0},colorRamp:{type:String,required:!0},colorDataDigits:{type:Number,required:!0},negativeValues:{type:Boolean,required:!0},currentTimeIndex:{type:Number,required:!0},maxHeight:{type:Number,required:!0},cellSize:{type:Number,required:!0},opacity:{type:Number,required:!0},upperPercentile:{type:Number,required:!0},cbTooltip:{type:Function,required:!0},onClick:{type:Function,required:!1}},data(){return{mymap:null,deckOverlay:null,globalState:R.state,tooltipHTML:"",tooltipStyle:{position:"absolute",padding:"4px 8px",display:"block",top:0,left:0,color:this.dark?"#ccc":"#223",backgroundColor:this.dark?"#2a3c4f":"white",zIndex:2e4}}},watch:{layers(){this.deckOverlay.setProps({layers:this.layers})},dark(){const e=`https://tiles.openfreemap.org/styles/${this.globalState.isDarkMode?"dark":"positron"}`;this.mymap?.setStyle(e)},"globalState.viewState"(){if(this.mapIsIndependent)return;const e=this.globalState.viewState,t=this.mymap?.getCenter();(e.longitude!==t.lng||e.latitude!==t.lat||e.zoom!==this.mymap?.getZoom()||e.pitch!==this.mymap?.getPitch()||e.bearing!==this.mymap?.getBearing())&&this.mymap?.jumpTo(Object.assign({center:{lng:e.longitude,lat:e.latitude}},e))}},computed:{colors(){return $({colormap:this.colorRamp,nshades:10,format:"rba",alpha:1}).map(t=>[t[0],t[1],t[2]])},rowData(){return this.data},layers(){return[new F({id:"gridlayer",data:{length:this.data.mapData[this.currentTimeIndex].length,attributes:{getPosition:{value:this.data.mapData[this.currentTimeIndex].centroid,size:2},getFillColor:{value:this.data.mapData[this.currentTimeIndex].colorData,size:this.colorDataDigits},getElevation:this.negativeValues?{value:null}:{value:this.data.mapData[this.currentTimeIndex].values,size:1}}},beforeId:this.maxHeight?void 0:"water",colorRange:this.dark?this.colors.slice(1):this.colors.reverse().slice(1),coverage:1,autoHighlight:!0,elevationRange:[0,this.maxHeight],elevationScale:this.maxHeight,pickable:!0,opacity:this.opacity,cellSize:this.cellSize,upperPercentile:this.upperPercentile,material:!1,transitions:{elevationScale:{type:"interpolation",duration:50}},parameters:{}})]}},mounted(){const e=`https://tiles.openfreemap.org/styles/${this.globalState.isDarkMode?"dark":"positron"}`,t=`map-${this.viewId}`,i=this.globalState.viewState.center;this.mymap=new L.Map({center:i,zoom:7,container:t,style:e}),this.mymap.on("move",this.handleMove),this.mymap.on("style.load",()=>{this.deckOverlay=new Q({interleaved:!0,layers:this.layers,onClick:this.handleClick}),this.mymap?.addControl(this.deckOverlay)})},beforeDestroy(){this.mymap?.removeControl(this.deckOverlay),this.mymap?.remove()},methods:{getTooltip(e){if(!e?.coordinate)return this.cbTooltip&&this.cbTooltip(),null;const t=this.data.mapData[this.currentTimeIndex]?.values;if(!t||!t[e.index])return null;const[i,s]=e.coordinate,h=t[e.index]/this.data.scaledFactor,r=Number(h.toFixed(6)),m=this.data.unit,g=Number.isFinite(s)?s.toFixed(4):"",u=Number.isFinite(i)?i.toFixed(4):"",d=`<b>${r} ${m}</b><br/>${g} / ${u}<br/>
    time value: ${this.data.mapData[this.currentTimeIndex].time}<br/>
    metric value: ${this.data.mapData[this.currentTimeIndex].values[e.index]}<br/>
    opacity value: ${this.data.mapData[this.currentTimeIndex].opacityValues[e.index]}
    `,f=this.dark?{color:"#ccc",backgroundColor:"#2a3c4f"}:{color:"#223",backgroundColor:"white"},v={html:d,style:f};if(this.cbTooltip)this.cbTooltip(v,e);else return v},handleMove(){if(this.mapIsIndependent)return;const e=this.mymap?.getCenter(),t={latitude:e.lat,longitude:e.lng,zoom:this.mymap?.getZoom(),bearing:this.mymap?.getBearing(),pitch:this.mymap?.getPitch(),jump:!0};R.commit("setMapCamera",t)},handleClick(e,t){this.tooltipStyle.display="none",this.onClick&&this.onClick(e,t)}}});var wt=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"deck-map flex-col"},[i("div",{staticClass:"map-container",attrs:{id:`map-${t.viewId}`}}),i("div",{staticClass:"deck-tooltip",style:t.tooltipStyle,domProps:{innerHTML:t._s(t.tooltipHTML)}})])},It=[],Rt=M(zt,wt,It,!1,null,null);const _t=Rt.exports,Mt={messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count"},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D Höhe",showDetails:"Details anzeigen",selection:"Ausgewählt",areas:"Orte",count:"Anzahl"}}},Et=_({name:"GridMapPlugin",i18n:Mt,components:{BackgroundMapOnTop:X,CollapsiblePanel:Z,DrawingTool:J,MapComponent:_t,ToggleButton:G.ToggleButton,ZoomButtons:K,ClickThroughTimes:Ct,TimeSlider:St},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){const e=["Inferno","Magma","Viridis","Greens","Reds","RdYlGn (div)","greenRed (div)","RdBu"];return{id:Math.floor(1e12*Math.random()),standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",cellSize:250,opacity:.7,maxHeight:0,userColorRamp:"Viridis",center:null,zoom:9,mapIsIndependent:!1},colorRamps:e,columnLookup:[],gzipWorker:null,colorRamp:e[0],globalState:R.state,globalMaxValue:Number.POSITIVE_INFINITY,globalMinValue:Number.NEGATIVE_INFINITY,valuesIncludeNeg:!1,tooltip:null,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",cellSize:250,opacity:.7,maxHeight:0,userColorRamp:"viridis",center:null,zoom:9,breakpoints:null,opacityColumn:"",valueColumn:"value",secondValueColumn:"",diff:!1,unit:"",timeSelector:null},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},data:null,colorDataDigits:3,selectedTimeData:[],allTimePeriodes:[],csv:{},colors:$({colormap:"Viridis",nshades:10,format:"rba",alpha:1}).map(t=>[t[0],t[1],t[2],255]),currentTime:[0,0],timeToIndex:new Map,guiConfig:{buckets:10,exponent:4,radius:150,opacity:1,height:100,"color ramp":"Viridis","upper bound":100,"lower bound":-100,"bounds enabled":!0,colorRamps:e,flip:!1,steps:10,opacityColumn:"none",valueColumn:"",secondValueColumn:"",diff:!1},configId:`gui-config-${Math.floor(1e12*Math.random())}`,guiController:null,minRadius:50,maxRadius:500,radiusStep:5,isLoaded:!1,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",timeRange:[1/0,-1/0],allTimes:[],myDataManager:this.datamanager||new q(this.root,this.subfolder),availableColumns:[]}},computed:{fileApi(){return new Y(this.fileSystem,R)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},urlThumbnail(){return this.thumbnailUrl},mapProps(){return window.__testdata__=this.data,{viewId:this.id,colorRamp:this.colorRamp,coverage:.65,dark:this.$store.state.isDarkMode,data:this.data,currentTimeIndex:this.timeToIndex.get(this.currentTime[0]),mapIsIndependent:this.vizDetails.mapIsIndependent||!1,maxHeight:this.guiConfig.height,colorDataDigits:this.colorDataDigits,userColorRamp:this.guiConfig["color ramp"],cellSize:this.guiConfig.radius,opacity:this.guiConfig.opacity,upperPercentile:100,cbTooltip:this.cbTooltip}},textColor(){const e={text:"#3498db",bg:"#eeeef480"},t={text:"white",bg:"#181518aa"};return this.$store.state.colorScheme===B.DarkMode?t:e}},watch:{},methods:{cbTooltip(e,t){if(!t){this.tooltip=null;return}e.style.left=`${16+t.devicePixel[0]}px`,e.style.bottom=`${16+t.devicePixel[1]}px`,this.tooltip=e},pickColor(e,t,i,s,o,h){if(this.guiConfig["bounds enabled"]){const r=this.guiConfig["upper bound"],m=this.guiConfig["lower bound"];r!==1/0&&m!==-1/0&&(e=Math.max(Math.min(e,r),m),e=(e-m)/(r-m)*100)}else if(h){let r;r=Math.max(Math.abs(t),Math.abs(i)),e=(e/r+1)*50}else if(isNaN(e)||e<0||e>100)return[0,0,0,0];if(this.vizDetails.colorRamp.breakpoints&&this.vizDetails.colorRamp.breakpoints.length==this.vizDetails.colorRamp.fixedColors.length-1){for(let r=0;r<this.vizDetails.colorRamp.breakpoints.length-1;r++)if(e>this.vizDetails.colorRamp.breakpoints[r]&&e<=this.vizDetails.colorRamp.breakpoints[r+1])return A(this.vizDetails.colorRamp.fixedColors[r+1]);return e<this.vizDetails.colorRamp.breakpoints[0]?A(this.vizDetails.colorRamp.fixedColors[0]):e>=this.vizDetails.colorRamp.breakpoints[this.vizDetails.colorRamp.breakpoints.length-1]?A(this.vizDetails.colorRamp.fixedColors[this.vizDetails.colorRamp.fixedColors.length-1]):new Uint8Array([255,255,255,255])}else{const r=Math.floor(e/100*(this.colors.length-1));return this.colors[r]}},async solveProjection(){if(console.log("solveProjection"),!this.thumbnail){console.log("WHAT PROJECTION:");try{const e=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=k.parse(e)}catch(e){console.error(e)}}},async getVizDetails(){if(this.config){this.validateYAML(),this.vizDetails=Object.assign({colorRamp:""},this.config),this.setRadiusAndHeight(),this.setCustomGuiConfig();return}new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.loadOutputTripsConfig()},loadOutputTripsConfig(){let e="";this.myState.thumbnail||(e=prompt('Enter projection: e.g. "EPSG:31468"')||"EPSG:31468",parseInt(e,10)&&(e="EPSG:"+e)),this.vizDetails={title:"Output Trips",description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:e,cellSize:this.vizDetails.cellSize,colorRamp:this.vizDetails.colorRamp,opacity:this.vizDetails.opacity,maxHeight:this.vizDetails.maxHeight,userColorRamp:this.vizDetails.userColorRamp,center:this.vizDetails.center,zoom:this.vizDetails.zoom,opacityColumn:this.vizDetails.opacityColumn,valueColumn:this.vizDetails.valueColumn,secondValueColumn:this.vizDetails.secondValueColumn,diff:this.vizDetails.diff,unit:this.vizDetails.unit,timeSelector:this.vizDetails.timeSelector},this.$emit("title",this.vizDetails.title),this.solveProjection()},setRadiusAndHeight(){this.vizDetails.cellSize||N.set(this.vizDetails,"cellSize",250),this.vizDetails.maxHeight||N.set(this.vizDetails,"maxHeight",0),this.vizDetails.opacity||N.set(this.vizDetails,"opacity",.7)},async loadStandaloneYAMLConfig(){try{const e=this.myState.yamlConfig.includes("/")?this.myState.yamlConfig:`${this.myState.subfolder}/${this.myState.yamlConfig}`,t=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=k.parse(t),this.validateYAML(),this.setVizDetails()}catch{const t=`File not found: ${this.myState.subfolder}/${this.myState.yamlConfig}`;this.$emit("error",t)}},validateYAML(){const e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let t={};e?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config),t.cellSize==0&&this.$store.commit("setStatus",{type:w.WARNING,msg:"Radius is out of the recommended range",desc:"Radius can not be zero, preset value used instead. "}),(t.opacity<=0||t.opacity>1)&&this.$store.commit("setStatus",{type:w.WARNING,msg:"Opacity set to zero",desc:"Opacity levels should be between 0 and 1. "}),(t.zoom<5||t.zoom>20)&&this.$store.commit("setStatus",{type:w.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "}),t.maxHeight<0&&this.$store.commit("setStatus",{type:w.WARNING,msg:"maxHeight is out of the recommended range ",desc:"maxHeight should be greater than 0"})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig),this.setRadiusAndHeight();const e=this.vizDetails.title?this.vizDetails.title:"Grid Map";this.$emit("title",e)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await(await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail)).arrayBuffer(),i=U.arrayBufferToBase64(t);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(e){console.error(e)}},setMapCenter(){if(this.vizDetails.center){typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number));const e={longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:10,pitch:0,zoom:this.vizDetails.zoom||10,jump:!0,center:[this.vizDetails.center[0],this.vizDetails.center[1]]};this.$store.commit("setMapCamera",e)}},async loadAndPrepareData(){return this.vizDetails.file.indexOf(".avro")>-1?await this.loadAndPrepareAvroData():await this.loadAndPrepareCSVData()},async loadAndPrepareAvroData(){const e=`${this.subfolder}/${this.vizDetails.file}`,t=await this.fileApi.getFileBlob(e),i=await new Promise((l,c)=>{const a=[];j.createBlobDecoder(t).on("metadata",n=>{}).on("data",n=>{a.push(n)}).on("end",()=>{l(a)})});let s=Number.NEGATIVE_INFINITY;const o=i[0];this.allTimes=o.timestamps,this.allTimes=this.allTimes.sort((l,c)=>l-c),this.timeRange[0]=this.allTimes[0],this.timeRange[1]=this.allTimes[this.allTimes.length-1];const h=Object.keys(o.data)[0],r=o.data[h];for(const l of r)s=Math.max(s,l);const m=s>0?100/s:0;this.vizDetails.unit==null&&(this.vizDetails.unit="");const g={mapData:[],scaledFactor:m,unit:this.vizDetails.unit},u=o.xCoords,d=o.yCoords,f=u.length*d.length;o.crs&&(this.vizDetails.projection=o.crs),this.vizDetails.projection||this.$emit("error",'No coordinate projection. Add "projection: EPSG:xxxx" to config');const v=new Float32Array(f*2);let p=0;for(let l=0;l<u.length;l++)for(let c=0;c<d.length;c++){let a=[u[l],d[c]];a=V.toLngLat(this.vizDetails.projection,a),v[p]=a[0],v[p+1]=a[1],p+=2}this.allTimes.forEach((l,c)=>{this.timeToIndex.set(l,c),g.mapData.push({length:f,time:l,centroid:v,values:new Float32Array(f),opacityValues:new Float32Array(f),colorData:new Uint8Array(f*3)})});for(let l=0;l<this.allTimes.length;l++){console.log("time",l);for(let c=0;c<f;c++){const a=l*f+c,n=m*r[a];g.mapData[l].values[c]=n}}return this.myState.statusMessage="",g},async loadAndPrepareCSVData(){this.allTimes=[],this.timeToIndex.clear();const e={dataset:this.vizDetails.file};let t={};try{t=await this.myDataManager.getDataset(e,{subfolder:this.subfolder})}catch(a){this.$emit("error",""+a)}t.comments&&t.comments.length&&t.comments.forEach(a=>{if(a.includes("EPSG")){const n=a.substring(a.lastIndexOf("EPSG")).trim();n&&(this.vizDetails.projection=n)}});let i=this.vizDetails.valueColumn||"";if(!t.allRows[i]){const a=Object.keys(t.allRows).filter(C=>!["x","y","time"].includes(C)),n=a.filter(C=>Array.from(t.allRows[C].values).every(x=>typeof x=="number"));i=(n.length?n[0]:a[0])||"",this.vizDetails.valueColumn=i}const s=t.allRows[this.vizDetails.valueColumn].values;let o;this.vizDetails.diff&&this.vizDetails.secondValueColumn&&(o=t.allRows[this.vizDetails.secondValueColumn].values);const h=t.allRows.time.values;this.availableColumns=Object.keys(t.allRows).filter(a=>!["x","y","time"].includes(a)),this.guiConfig.valueColumn=this.vizDetails.valueColumn,this.guiConfig.secondValueColumn=this.vizDetails.secondValueColumn||"";let r=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY;for(let a=0;a<s.length;a++){if(o){const C=o&&this.vizDetails.diff?s[a]-o[a]:s[a];C<r&&(r=C),C>m&&(m=C),(s[a]||o[a])&&(this.valuesIncludeNeg=!0)}else s[a]>m&&(m=s[a]),s[a]<r&&(r=s[a]),s[a]&&(this.valuesIncludeNeg=!0);const n=h[a];this.allTimes.includes(n)||this.allTimes.push(n)}this.allTimes=this.allTimes.sort((a,n)=>a-n),this.timeRange[0]=Math.min.apply(Math,this.allTimes),this.timeRange[1]=Math.max.apply(Math,this.allTimes);const g=Math.ceil(s.length/this.allTimes.length);let u=r,d=m,f=0,v=100;this.valuesIncludeNeg&&(m=(m-u)*v/(d-u)),this.globalMinValue=u,this.globalMaxValue=d;const p=m!==0?100/m:0,l={mapData:[],scaledFactor:p,unit:this.vizDetails.unit||""};if(this.guiConfig.opacityColumn!="none"?this.colorDataDigits=4:this.colorDataDigits=3,this.allTimes.forEach((a,n)=>{this.timeToIndex.set(a,n),l.mapData.push({time:a,values:new Float32Array(g),opacityValues:new Float32Array(g),centroid:new Float32Array(g*2),colorData:new Uint8Array(g*this.colorDataDigits),numberOfFilledValues:0,numberOfFilledCentroids:0,numberOfFilledColors:0,length:g})}),!this.vizDetails.projection){const a='No coordinate projection. Add "projection: EPSG:xxxx" to config';throw this.$emit("error",a),Error(a)}for(let a=0;a<s.length;a++){const n=this.timeToIndex.get(h[a]);let C=s[a];o&&this.vizDetails.diff&&(C=C-o[a]);const x=p*C,O=this.pickColor(x,u,d,f,v,this.valuesIncludeNeg),y=l.mapData[n].numberOfFilledValues,D=l.mapData[n].numberOfFilledColors,E=l.mapData[n].numberOfFilledCentroids;if(l.mapData[n].values[y]=x,this.guiConfig.opacityColumn!="none"){var c;let b=this.vizDetails.opacityColumn||"";if(!t.allRows[b])console.error("column for opacity values not found, defaulting to standard opacity funcitonality with slider.");else{c=t.allRows[this.vizDetails.opacityColumn].values;let z=Number.POSITIVE_INFINITY,P=Number.NEGATIVE_INFINITY;for(let T=0;T<c.length;T++)c[T]<z&&(z=c[T]),c[T]>P&&(P=c[T]);l.mapData[n].opacityValues[y]=Math.round((c[a]-z)/(P-z)*100)/100,l.mapData[n].opacityValues[y]==0&&(l.mapData[n].opacityValues[y]=.01);for(let T=0;T<4;T++)T==3?l.mapData[n].colorData[D+T]=Math.round(l.mapData[n].opacityValues[y]*255):l.mapData[n].colorData[D+T]=O[T]}}else for(let b=0;b<3;b++)l.mapData[n].colorData[D+b]=O[b];let S=[t.allRows.x.values[a],t.allRows.y.values[a]];this.vizDetails.projection!=="EPSG:4326"&&(S=V.toLngLat(this.vizDetails.projection,S)),l.mapData[n].centroid[E]=S[0],l.mapData[n].centroid[E+1]=S[1],l.mapData[n].numberOfFilledValues=y+1,l.mapData[n].numberOfFilledCentroids=E+2,this.guiConfig.opacityColumn!="none"?l.mapData[n].numberOfFilledColors=D+4:l.mapData[n].numberOfFilledColors=D+3}return Array.from(this.allTimes.keys()).forEach(a=>{delete l.mapData[a].numberOfFilledValues,delete l.mapData[a].numberOfFilledCentroids,delete l.mapData[a].numberOfFilledColors}),this.myState.statusMessage="",l},resolveProjection(){if(this.vizDetails.projection!=="EPSG:4326")for(let e=0;e<this.data.length;e++){const t=V.toLngLat(this.vizDetails.projection,this.data[e].centroid);this.data[e].centroid=t}},handleDiscreteTimeValues(e){this.currentTime[0]=e.extent,this.mapProps.currentTimeIndex=e.index,this.selectedTimeData=[];for(let t=0;t<this.data.mapData.length;t++)String(this.data.mapData[t].time)==String(e.extent)&&this.selectedTimeData.push(this.data.mapData[t].values);this.setColors()},handleTimeSliderValues(e){this.currentTime=e,this.selectedTimeData=[];for(let t=0;t<this.data.length;t++)this.data[t].time==e[0]&&this.selectedTimeData.push(this.data[t])},setupGui(){this.guiController=new H({title:"Settings",injectStyles:!0,width:200,container:document.getElementById(this.configId)||void 0});const e=this.guiController;e.add(this.guiConfig,"radius",this.minRadius,this.maxRadius,this.radiusStep),e.add(this.guiConfig,"opacity",0,1,.1),e.add(this.guiConfig,"height",0,250,5),e.add(this.guiConfig,"diff").name("Diff").onChange(s=>{s?i.show():i.hide(),this.handleDiffChange(s)});let t=["none"].concat(this.availableColumns);t.length>0&&e.add(this.guiConfig,"opacityColumn",t).name("Opacity column").onChange(s=>{this.handleOpacityColumnChange(s)}),this.availableColumns.length>0&&e.add(this.guiConfig,"valueColumn",this.availableColumns).name("1st column").onChange(s=>{this.handleColumnChange(s)});const i=e.add(this.guiConfig,"secondValueColumn",["",...this.availableColumns]).name("2nd column").onChange(s=>this.handleSecondColumnChange(s));if(this.guiConfig.diff?i.show():i.hide(),!this.vizDetails.colorRamp||!this.vizDetails.colorRamp.breakpoints){const s=e.addFolder("Colors");s.add(this.guiConfig,"color ramp",this.guiConfig.colorRamps).onChange(h=>{const m=h.endsWith(" (div)")?"diverging":"sequential";this.computeBounds(m),this.setColors()}),s.add(this.guiConfig,"flip").onChange(this.setColors),s.add(this.guiConfig,"steps",2,50,1).onChange(this.setColors);const o=e.addFolder("Color Bounds");o.add(this.guiConfig,"bounds enabled").name("Enable Bounds").onChange(this.setColors),o.add(this.guiConfig,"lower bound").name("Lower Bound").onChange(this.setColors).listen().onChange(h=>{this.guiConfig["lower bound"]=Number(h.toFixed(2)),this.setColors()}),o.add(this.guiConfig,"upper bound").name("Upper Bound").onChange(this.setColors).listen().onChange(h=>{this.guiConfig["upper bound"]=Number(h.toFixed(2)),this.setColors()}),this.setColors()}},computeBounds(e){const t=this.globalMinValue,i=this.globalMaxValue;if(e==="diverging"){const s=Math.max(Math.abs(t),Math.abs(i));this.guiConfig["upper bound"]=Number(s.toFixed(2)),this.guiConfig["lower bound"]=Number((-s).toFixed(2)),console.log("Diverging bounds set:",{upper:this.guiConfig["upper bound"],lower:this.guiConfig["lower bound"]})}else this.guiConfig["upper bound"]=Number(i.toFixed(2)),this.guiConfig["lower bound"]=Number(t.toFixed(2)),console.log("Sequential bounds set:",{upper:this.guiConfig["upper bound"],lower:this.guiConfig["lower bound"]})},async handleOpacityColumnChange(e){this.vizDetails.opacityColumn=e,this.data=await this.loadAndPrepareData(),this.setColors()},async handleColumnChange(e){this.vizDetails.valueColumn=e,this.data=await this.loadAndPrepareData(),this.setColors()},async handleDiffChange(e){this.vizDetails.diff=e,this.data=await this.loadAndPrepareData(),this.setColors();const t=this.allTimes[this.allTimes.length-1];this.currentTime=[t,t]},async handleSecondColumnChange(e){this.vizDetails.secondValueColumn=e,this.data=await this.loadAndPrepareData(),this.setColors();const t=this.allTimes[this.allTimes.length-1];this.currentTime=[t,t]},setColors(){if(!this.data)return;const e=this.guiConfig["color ramp"],i={ramp:e.replace(/\s*\(div\)$/,"")},s=W(i,this.guiConfig.steps),o=e.endsWith(" (div)")?"diverging":"sequential";console.log("Color ramp type:",o),s.length&&(this.colors=[]),this.colors=this.hexArrayToRgbArray(s);let h=this.globalMinValue,r=this.globalMaxValue,m=0,g=100;this.guiConfig.flip&&(this.colors=this.colors.reverse());for(let u=0;u<this.data.mapData.length;u++)for(let d=0;d<this.data.mapData[u].values.length;d++){const f=this.data.mapData[u].values[d],v=this.pickColor(f,h,r,m,g,this.valuesIncludeNeg);if(v==null)break;if(this.guiConfig.opacityColumn=="none")for(let p=d*3;p<=d*3+2;p++)this.data.mapData[u].colorData[p]=v[p%3];else try{for(let p=d*4;p<=d*4+3;p++)(p+1)%4==0?this.data.mapData[u].colorData[p]=Math.round(this.data.mapData[u].opacityValues[d]*255):this.data.mapData[u].colorData[p]=v[p%4]}catch(p){this.$emit("error",""+p)}}this.currentTime=[...this.currentTime]},hexArrayToRgbArray(e){const t=[];for(let i=0;i<e.length;i++){const s=e[i].replace(/^#/,""),o=parseInt(s.substring(0,2),16),h=parseInt(s.substring(2,4),16),r=parseInt(s.substring(4,6),16);t.push([o,h,r,255])}return t},setCustomGuiConfig(){this.config&&(this.config.colorRamp&&(this.config.colorRamp.ramp!=null&&(this.guiConfig["color ramp"]=this.config.colorRamp.ramp),this.config.colorRamp.reverse!=null&&(this.guiConfig.flip=this.config.colorRamp.reverse),this.config.colorRamp.steps!=null&&(this.guiConfig.steps=this.config.colorRamp.steps),this.config.colorRamp.upperBound!=null&&(this.guiConfig["upper bound"]=this.config.colorRamp.upperBound),this.config.colorRamp.lowerBound!=null&&(this.guiConfig["lower bound"]=this.config.colorRamp.lowerBound),this.config.colorRamp.boundsEnabled!=null&&(this.guiConfig["bounds enabled"]=this.config.colorRamp.boundsEnabled)),this.config.cellSize>=this.minRadius&&this.config.cellSize<=this.maxRadius&&(this.guiConfig.radius=this.config.cellSize),this.config.maxHeight!==void 0&&(this.guiConfig.height=this.config.maxHeight),this.config.opacity&&(this.guiConfig.opacity=this.config.opacity),typeof this.config.diff=="boolean"&&(this.guiConfig.diff=this.config.diff,this.vizDetails.diff=this.config.diff),typeof this.config.secondValueColumn=="string"&&(this.guiConfig.secondValueColumn=this.config.secondValueColumn,this.vizDetails.secondValueColumn=this.config.secondValueColumn))}},async mounted(){if(this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),this.thumbnail)return;this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.data=await this.loadAndPrepareData();const t=this.guiConfig["color ramp"].endsWith(" (div)")?"diverging":"sequential";(!this.config?.colorRamp||this.config.colorRamp.boundsEnabled===void 0)&&this.computeBounds(t),this.setupGui(),this.setColors(),this.isLoaded=!0,this.setMapCenter()},beforeDestroy(){delete window.__testdata__,this.data=null,this.$store.commit("setFullScreen",!1)}});var Pt=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"xy-hexagons",class:{"hide-thumbnail":!t.thumbnail},attrs:{oncontextmenu:"return false",id:`id-${t.id}`}},[!t.thumbnail&&t.isLoaded?i("MapComponent",t._b({attrs:{negativeValues:t.valuesIncludeNeg}},"MapComponent",t.mapProps,!1)):t._e(),!t.thumbnail&&t.isLoaded?i("zoom-buttons",{attrs:{corner:"top-left"}}):t._e(),i("div",{staticClass:"top-right"},[i("div",{staticClass:"gui-config",attrs:{id:t.configId}})]),t.isLoaded&&this.vizDetails.timeSelector&&this.vizDetails.timeSelector.enum=="discrete"?i("click-through-times",{staticClass:"time-slider-area",attrs:{allTimes:t.allTimes,range:t.timeRange},on:{timeUpdate:t.handleDiscreteTimeValues}}):t._e(),t.isLoaded&&(!this.vizDetails.timeSelector||this.vizDetails.timeSelector.enum=="slider")?i("time-slider",{staticClass:"time-slider-area",attrs:{range:t.timeRange,allTimes:t.allTimes},on:{timeExtent:t.handleTimeSliderValues}}):t._e(),!t.thumbnail&&t.myState.statusMessage?i("div",{staticClass:"message"},[i("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e(),t.tooltip?i("div",{staticClass:"tooltip",style:t.tooltip.style,domProps:{innerHTML:t._s(t.tooltip.html)}}):t._e()],1)},Nt=[],At=M(Et,Pt,Nt,!1,null,"f4a485bb");const he=At.exports;export{he as default};
