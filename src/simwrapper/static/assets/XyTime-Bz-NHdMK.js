import{d as c,g as h,m as g,n as m,S as l}from"./index-CHe7BiNX.js";import{G as d}from"./lil-gui.esm-D2cLj-mk.js";import{Y as u}from"./index-DFKcNkqO.js";import{c as f}from"./index-B0QPu2l3.js";import{u as b,H as k}from"./HTTPFileSystem-Cf8G_bcW.js";import{C as y}from"./CollapsiblePanel-GuobHpcZ.js";import{D as C}from"./DrawingTool-CaOc8yNx.js";import{L as v}from"./LegendBox-DCW8O5g7.js";import{L as S}from"./LegendStore-CGgeb9zL.js";import{T as z}from"./TimeSlider-B0kaD6Uf.js";import{S as D}from"./text-layer-Cpq7KRgR.js";import{t as M}from"./index-CM0svw02.js";import{M as A}from"./mapbox-overlay-BWTNBTi1.js";import{D as T}from"./data-filter-extension-CLr7Gtu_.js";import{Z as w}from"./ZoomButtons-B7tt6RkT.js";import"./fxp-DjoqftHf.js";import"./geojson-layer-ClBV_VpI.js";import"./path-layer-BllYebBs.js";import"./layer-GQvgsG1_.js";import"./layer-extension-CCnGoUTU.js";const P=`uniform highlightUniforms {
  uniform vec4 numBreakpoints;
  uniform vec4 colors[21];
} highlight;
`,L={name:"highlight",vs:P,uniformTypes:{numBreakpoints:"vec4<f32>",colors:"vec4<f32>"}};class p extends D{MAX_COLORS=21;uniformColors=new Float32Array(this.MAX_COLORS*4);initializeState(t){super.initializeState(t),this.getAttributeManager().addInstanced({instanceValue:{accessor:"getValue",size:1,defaultValue:0,transition:!0}})}getShaders(){const t=super.getShaders();return t.inject={"vs:#decl":`
            #define MAX_COLORS 21
            #define MAX_BREAKPOINTS 20
            in float instanceValue;
            float breakpoints[MAX_BREAKPOINTS];
            `,"vs:DECKGL_FILTER_COLOR":`
            picking_setPickingColor(geometry.pickingColor);

            for(int i=0; i < MAX_BREAKPOINTS; ++i) {
              breakpoints[i] = highlight.colors[i].w;
            }

            int numBreakpoints = int(highlight.numBreakpoints.x);

            for(int i=0; i < MAX_BREAKPOINTS; ++i) {
              if (instanceValue < breakpoints[i]) {
                color = vec4(highlight.colors[i].x, highlight.colors[i].y, highlight.colors[i].z, 1.0);
                return;
              }
              if (i == numBreakpoints) {
                color = vec4(highlight.colors[i].x, highlight.colors[i].y, highlight.colors[i].z, 1.0);
                return;
              }
            }
            color = vec4(1.0, 0.0, 0.0, 1.0);
            return;
          `},t.modules=[...t.modules,L],t}updateState(t){const{props:i,oldProps:s,changeFlags:o}=t;super.updateState({props:i,oldProps:s,changeFlags:o}),i.colors.forEach((r,n)=>{this.uniformColors[n*4]=r[0]/255,this.uniformColors[n*4+1]=r[1]/255,this.uniformColors[n*4+2]=r[2]/255,n<i.breakpoints.length&&(this.uniformColors[n*4+3]=i.breakpoints[n])});const a={numBreakpoints:new Float32Array(4).fill(i.breakpoints.length),colors:this.uniformColors};for(const r of this.getModels())r.shaderInputs.setProps({highlight:a})}}p.layerName="ScatterplotColorBinsLayer";p.defaultProps={colors:[[128,128,128],[128,128,128]],breakpoints:[0]};const R=new T({filterSize:1}),$=c({name:"MyDeckComponent",props:{viewId:{type:String,required:!0},dark:{type:Boolean,required:!0},mapIsIndependent:{type:Boolean,required:!0},onClick:{type:Function,required:!1},timeFilter:{type:Array,required:!0},colors:{type:Array,required:!0},breakpoints:{type:Array,required:!0},radius:{type:Number,required:!0},pointLayers:{type:Array,required:!0}},data(){return{mymap:null,deckOverlay:null,globalState:h.state,tooltipHTML:"",tooltipStyle:{position:"absolute",padding:"4px 8px",display:"block",top:0,left:0,color:this.dark?"#ccc":"#223",backgroundColor:this.dark?"#2a3c4f":"white",zIndex:2e4}}},watch:{layers(){this.deckOverlay.setProps({layers:this.layers})},dark(){const e=`https://tiles.openfreemap.org/styles/${this.globalState.isDarkMode?"dark":"positron"}`;this.mymap?.setStyle(e)}},computed:{layers(){return this.pointLayers.map((t,i)=>{const s=t.timeRange[0]>this.timeFilter[1]||t.timeRange[1]<this.timeFilter[0];return new p({data:{length:t.time.length,attributes:{getPosition:{value:t.coordinates,size:2},getFilterValue:{value:t.time,size:1},getValue:{value:t.value,size:1}}},autoHighlight:!0,breakpoints:this.breakpoints,colors:this.colors,extensions:[R],id:`scatterplot-${i}`,filled:!0,filterRange:this.timeFilter.length?this.timeFilter:null,getRadius:this.radius,highlightColor:[255,255,255,192],opacity:1,parameters:{depthTest:!1},pickable:!0,radiusScale:1,stroked:!1,updateTriggers:{getPosition:this.pointLayers,getFillColor:this.pointLayers,getFilterValue:this.timeFilter,getValue:[this.colors]},visible:!s})})},"globalState.viewState"(){if(this.mapIsIndependent)return;const e=this.globalState.viewState,t=this.mymap?.getCenter();(e.longitude!==t.lng||e.latitude!==t.lat||e.zoom!==this.mymap?.getZoom()||e.pitch!==this.mymap?.getPitch()||e.bearing!==this.mymap?.getBearing())&&this.mymap?.jumpTo(Object.assign({center:{lng:e.longitude,lat:e.latitude}},e))}},async mounted(){const e=`https://tiles.openfreemap.org/styles/${this.globalState.isDarkMode?"dark":"positron"}`,t=this.viewId,i=this.globalState.viewState.center;this.mymap=new g.Map({center:i,zoom:7,container:t,style:e}),this.mymap.on("move",this.handleMove),this.mymap.on("style.load",()=>{this.deckOverlay=new A({interleaved:!0,layers:this.layers,onClick:this.handleClick}),this.mymap?.addControl(this.deckOverlay)})},beforeDestroy(){this.mymap?.removeControl(this.deckOverlay),this.mymap?.remove()},methods:{convertSecondsToClockTimeMinutes(e){const t=e;try{const i=M(t),s=("00"+i.minutes).slice(-2);return`${i.hours}:${s}`}catch{return"00:00"}},handleMove(){if(this.mapIsIndependent)return;const e=this.mymap?.getCenter(),t={latitude:e.lat,longitude:e.lng,zoom:this.mymap?.getZoom(),bearing:this.mymap?.getBearing(),pitch:this.mymap?.getPitch(),jump:!0};h.commit("setMapCamera",t)},getTooltip(e,t){if(e.index<0)return null;const i=e?.layer?.id;if(i===void 0)return null;const s=this.pointLayers[i].time[e.index],o=this.convertSecondsToClockTimeMinutes(s),a=this.pointLayers[i].value[e.index];return{html:`        <table style="font-size: 0.9rem">
        <tr>
          <td>Value</td>
          <td style="padding-left: 0.5rem;"><b>${Math.round(1e6*a)/1e6}</b></td>
        </tr><tr>
          <td style="text-align: right;">Time</td>
          <td style="padding-left: 0.5rem;"><b>${o}</b></td>
        </tr>
        </table>
      `,style:this.dark?{color:"#ccc",backgroundColor:"#2a3c4f"}:{color:"#223",backgroundColor:"white"}}},handleClick(e,t){this.tooltipStyle.display="none",this.onClick&&this.onClick(e,t)}}});var _=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"deck-map flex-col"},[i("div",{staticClass:"map-container",attrs:{id:t.viewId}}),i("div",{staticClass:"deck-tooltip",style:t.tooltipStyle,domProps:{innerHTML:t._s(t.tooltipHTML)}})])},B=[],E=m($,_,B,!1,null,null);const I=E.exports;function x(e){return new Worker("/assets/XytDataParser.worker-DDEc0p2H.js",{name:e?.name})}const F=c({name:"ModalDialogCustomColorbreakpoint",props:{breakpointsProp:{type:Array,required:!0},colorsProp:{type:Array,required:!0}},data(){return{breakpoints:[],incorrectBreakpoints:[],colors:[]}},mounted(){this.colors=this.colorsProp,this.breakpoints=this.breakpointsProp,this.checkIfBreakpointsAreCorrect()},watch:{breakpointsProp(){this.breakpoints=this.breakpointsProp;for(let e=0;e<this.breakpointsProp.length;e++)this.breakpoints[e]=this.roundToDecimalPlaces(this.breakpoints[e],6),this.breakpointsProp[e]=this.roundToDecimalPlaces(this.breakpointsProp[e],6)},colorsProp(){this.colors=this.colorsProp}},methods:{addColor(){this.breakpointsProp.push(this.breakpointsProp[this.breakpointsProp.length-1]),this.colorsProp.push(this.colorsProp[this.colorsProp.length-1]),this.$emit("addOrRemoveBreakpoint",this.colors,this.breakpoints)},intArrayToHexColor(e){if(e.length!==3)throw new Error("The array must contain exactly 3 elements.");return`#${e.map(s=>{const o=s.toString(16);return o.length===1?"0"+o:o}).join("")}`},hexColorToIntArray(e){if(e=e.replace(/^#/,""),e.length!==6)throw new Error("The hex color string must be 6 characters long.");const t=parseInt(e.slice(0,2),16),i=parseInt(e.slice(2,4),16),s=parseInt(e.slice(4,6),16);return[t,i,s]},roundToDecimalPlaces(e,t){if(t<0)throw new Error("The number of decimal places cannot be negative.");const i=Math.pow(10,t);return Math.round(e*i)/i},addBreakpoint(e){if(e==0)return;const t=this.colorsProp[e],i=this.colorsProp[e+1],s=this.breakpoints[e-1],o=this.breakpoints[e],a=this.calculateAverageColor(t,i),r=(s+o)/2;this.colorsProp.splice(e+1,0,a),this.breakpoints.splice(e,0,r),this.$emit("addOrRemoveBreakpoint",this.colors,this.breakpoints)},calculateAverageColor(e,t){if(e.length!==3||t.length!==3)throw new Error("Colors must be in the format [r, g, b]");return[Math.round((e[0]+t[0])/2),Math.round((e[1]+t[1])/2),Math.round((e[2]+t[2])/2)]},removeBreakpoint(e){this.breakpointsProp.splice(e-1,1),this.colorsProp.splice(e,1),this.$emit("addOrRemoveBreakpoint",this.colors,this.breakpoints),this.checkIfBreakpointsAreCorrect()},closeModalDialog(){this.$emit("close")},colorChange(e,t){const i=this.hexColorToIntArray(e.target.value);this.colors[t]=i,this.$emit("updateColor",this.colors)},changeBreakpoint(e,t){this.breakpoints[t]=e.target.value;for(let i=0;i<this.breakpointsProp.length;i++)this.breakpoints[i]===void 0&&(this.breakpoints[i]=this.roundToDecimalPlaces(this.breakpointsProp[i],6));this.$emit("updateBreakpoint",this.breakpoints),this.checkIfBreakpointsAreCorrect()},checkIfBreakpointsAreCorrect(){let e=Number.NEGATIVE_INFINITY;this.incorrectBreakpoints=[];let t=!0;for(let i=0;i<this.breakpoints.length;i++)this.incorrectBreakpoints[i]=!1,e=this.breakpoints[i]>e?this.breakpoints[i]:e,this.breakpoints[i]<e&&(this.incorrectBreakpoints[i]=!0,t=!1);return t}}});var O=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"modal-dialog"},[i("h2",{staticClass:"modal-dialog-heading"},[t._v("Custom Breakpoints")]),i("div",{staticClass:"color-table"},t._l(t.colors,function(s,o){return i("div",{staticClass:"color"},[i("i",{staticClass:"remove-button fas fa-xs fa-trash",on:{click:function(a){return t.removeBreakpoint(o)}}}),i("input",{staticClass:"color-picker",attrs:{type:"color"},domProps:{value:t.intArrayToHexColor(s)},on:{change:function(a){return t.colorChange(a,o)}}}),o===0?i("p",{staticClass:"comperator",domProps:{innerHTML:t._s("<p>&lt;</p>")}}):i("p",{staticClass:"comperator",domProps:{innerHTML:t._s("<p>&gE;</p>")}}),o!==0?i("input",{staticClass:"breakpoint-picker",class:{"incorrect-number-indicator":t.incorrectBreakpoints[o-1]},attrs:{type:"number",step:".01",placeholder:t.roundToDecimalPlaces(t.breakpointsProp[o-1],6)},on:{change:function(a){return t.changeBreakpoint(a,o-1)}}}):i("input",{staticClass:"breakpoint-picker",class:{"incorrect-number-indicator":t.incorrectBreakpoints[o-1]},attrs:{type:"number",step:".01",placeholder:t.roundToDecimalPlaces(t.breakpointsProp[o],6)},on:{change:function(a){return t.changeBreakpoint(a,o)}}}),i("div",{staticClass:"add-button-container"},[o!=t.colors.length-1&&o!=0?i("i",{staticClass:"remove-button fas fa-sm fa-plus",on:{click:function(a){return t.addBreakpoint(o)}}}):t._e()])])}),0),i("div",{staticClass:"button-holder"},[i("button",{staticClass:"button is-success is-small is-outlined",on:{click:t.addColor}},[t._v("Add Color")]),i("button",{staticClass:"button is-danger is-small is-outlined",on:{click:t.closeModalDialog}},[t._v("Close")])])])},j=[],V=m(F,O,j,!1,null,"7b970b47");const N=V.exports,Y={messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count",promptCRS:`Enter the coordinate reference system, e.g. EPSG:25832

These coordinates are not in long/lat format. To fix this permanently, convert them to long/lat or add "# EPSG:xxxx" to your CSV header`},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D Höhe",showDetails:"Details anzeigen",selection:"Ausgewählt",areas:"Orte",count:"Anzahl"}}},q=c({name:"XYTime",i18n:Y,components:{CollapsiblePanel:y,DrawingTool:C,LegendBox:v,TimeSlider:z,ZoomButtons:w,XyTimeDeckMap:I,ModalDialogCustomColorbreakpoint:N},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean},data(){return{globalState:h.state,guiConfig:{buckets:7,exponent:4,radius:5,"clip max":100,"color ramp":"viridis",colorRamps:["bathymetry","electric","inferno","jet","magma","par","viridis"],flip:!1,"Custom breakpoints...":this.toggleModalDialog,"manual breaks":""},minRadius:5,maxRadius:50,showCustomBreakpoints:!1,viewId:`xyt-id-${Math.floor(1e12*Math.random())}`,configId:`gui-config-${Math.floor(1e12*Math.random())}`,timeLabels:[0,1],startTime:0,isAnimating:!1,timeFilter:[0,3599],colors:[[128,128,128],[128,128,128]],breakpoints:[0],range:[1/0,-1/0],timeRange:[1/0,-1/0],legendStore:null,standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",radius:250,maxHeight:0,center:null,zoom:9},YAMLrequirementsXY:{file:""},columnLookup:[],gzipWorker:null,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",center:null,zoom:9,buckets:5,exponent:4,clipMax:100,radius:5,colorRamp:"viridis",flip:!1,breakpoints:null},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},pointLayers:[],isLoaded:!1,animator:null,guiController:null,resizer:null,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",ANIMATE_SPEED:4,animationElapsedTime:0}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),await this.buildThumbnail(),!this.thumbnail&&(this.setupGui(),this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.isLoaded||await this.loadFiles())},beforeDestroy(){this.resizer?.disconnect();try{this.gzipWorker&&(this.gzipWorker.postMessage({terminate:!0}),this.gzipWorker.terminate()),this.guiController&&this.guiController.destroy()}catch(e){console.warn(e)}this.animator&&window.cancelAnimationFrame(this.animator),this.$store.commit("setFullScreen",!1)},computed:{fileApi(){return new k(this.fileSystem,h)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},urlThumbnail(){return this.thumbnailUrl}},watch:{},methods:{toggleModalDialog(){this.showCustomBreakpoints=!this.showCustomBreakpoints},handleTimeSliderValues(e){this.animationElapsedTime=e[0],this.timeFilter=e,this.timeLabels=[this.convertSecondsToClockTimeMinutes(e[0]),this.convertSecondsToClockTimeMinutes(e[1])]},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const e=document.getElementById(`id-${this.viewId}`);this.resizer.observe(e)},moveLogo(){const e=document.getElementById(`${this.viewId}`),t=e?.querySelector(".mapboxgl-ctrl-bottom-left");if(t){const i=e.clientWidth>640?"280px":"36px";t.style.right=i}},setupGui(){this.guiController=new d({title:"Settings",injectStyles:!0,width:200,container:document.getElementById(this.configId)||void 0});const e=this.guiController;e.add(this.guiConfig,"radius",this.minRadius,this.maxRadius,1);const t=e.addFolder("colors");t.add(this.guiConfig,"color ramp",this.guiConfig.colorRamps).onChange(this.setColors),t.add(this.guiConfig,"flip").onChange(this.setColors);const i=e.addFolder("breakpoints");i.add(this.guiConfig,"buckets",2,19,1).onChange(this.setColors),i.add(this.guiConfig,"clip max",0,100,1).onChange(this.setColors),i.add(this.guiConfig,"exponent",1,10,1).onChange(this.setColors),i.add(this.guiConfig,"Custom breakpoints...",1,100,1)},async solveProjection(){if(!this.thumbnail){console.log("WHAT PROJECTION:");try{const e=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=u.parse(e)}catch(e){console.error(e),this.$emit("error",""+e)}}},async getVizDetails(){if(this.config){this.validateYAML(),this.vizDetails=Object.assign({},this.config),this.setCustomGuiConfig();return}new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.setConfigForRawCSV()},setCustomGuiConfig(){this.config&&(this.config.radius>=this.minRadius&&this.config.radius<=this.maxRadius&&(this.guiConfig.radius=this.config.radius),Object.prototype.toString.call(this.config.breakpoints)==="[object Array]"?this.setManualBreakpoints(this.config.breakpoints):this.config.breakpoints&&(this.config.breakpoints.values.length+1!=this.config.breakpoints.colors.length?this.$emit("error",{type:l.ERROR,msg:"Wrong number of colors and values for the breakpoints.",desc:`Number of colors: ${this.config.breakpoints.colors.length}, Number of values: ${this.config.breakpoints.values.length}, Must apply: Number of colors = number of values plus one.`}):(this.guiConfig.buckets=this.config.breakpoints.colors.length,this.breakpoints=this.config.breakpoints.values,this.colors=this.config.breakpoints.colors)))},setManualBreakpoints(e){this.breakpoints=e,this.guiConfig.buckets=1+e.length},setConfigForRawCSV(){let e="EPSG:4326";this.vizDetails=Object.assign(this.vizDetails,{title:"Point Data: "+this.myState.yamlConfig,description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:e,center:this.vizDetails.center,zoom:this.vizDetails.zoom}),this.$emit("title",this.vizDetails.title||this.vizDetails.file)},async loadStandaloneYAMLConfig(){try{const e=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,t=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=Object.assign({},u.parse(t)),this.validateYAML(),this.setVizDetails()}catch(e){console.log("failed"+e),this.$emit("error",`File not found: ${this.myState.subfolder}/${this.myState.yamlConfig}`)}},validateYAML(){const e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let t={};e?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config);for(const i in this.YAMLrequirementsXY)i in t||this.$emit("error",{type:l.ERROR,msg:`XYTime missing required key: ${i}`,desc:`XYTime requires keys: ${Object.keys(this.YAMLrequirementsXY)}`});t.radius==0&&this.$emit("error",{type:l.WARNING,msg:"Radius set to zero",desc:"Radius can not be zero, preset value used instead. "}),(t.zoom<5||t.zoom>50)&&this.$emit("error",{type:l.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 50. "})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig);const e=this.vizDetails.title?this.vizDetails.title:"Point Data: "+this.vizDetails.file;this.$emit("title",e),this.vizDetails.buckets&&(this.guiConfig.buckets=this.vizDetails.buckets),this.vizDetails.exponent&&(this.guiConfig.exponent=this.vizDetails.exponent),this.vizDetails.radius&&(this.guiConfig.radius=this.vizDetails.radius),this.vizDetails.clipMax&&(this.guiConfig["clip max"]=this.vizDetails.clipMax),this.vizDetails.colorRamp&&(this.guiConfig["color ramp"]=this.vizDetails.colorRamp)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await(await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail)).arrayBuffer(),i=b.arrayBufferToBase64(t);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(e){console.error(e)}},async parseCSVFile(e){this.myState.statusMessage="Loading file...";let t=0;this.gzipWorker=new x,this.gzipWorker.onmessage=async i=>{if(i.data.status)this.myState.statusMessage=i.data.status;else if(i.data.error)this.myState.statusMessage=i.data.error,this.$emit("error",{type:l.ERROR,msg:"XYT Loading Error",desc:`Error loading: ${this.myState.subfolder}/${this.vizDetails.file}`});else if(i.data.finished)this.finishedLoadingData(t,i.data);else if(i.data.needCRS){this.gzipWorker&&this.gzipWorker.terminate();let s=prompt(""+this.$t("promptCRS"))||"EPSG:25833";Number.isFinite(parseInt(s))&&(s=`EPSG:${s}`),this.vizDetails.projection=s.toUpperCase(),this.parseCSVFile(e)}else{const s=i.data.time.length;t||this.setFirstZoom(i.data.coordinates,s),t+=s,this.timeRange=[Math.min(this.timeRange[0],i.data.time[0]),Math.max(this.timeRange[1],i.data.time[s-1])],this.pointLayers.push(i.data)}},this.gzipWorker.postMessage({filepath:e,fileSystem:this.fileSystem,projection:this.vizDetails.projection})},setFirstZoom(e,t){const i=.5*(e[0]+e[t*2-2]),s=.5*(e[1]+e[t*2-1]);Number.isFinite(i)&&Number.isFinite(s)&&h.commit("setMapCamera",Object.assign({},h.state.viewState,{longitude:i,latitude:s,zoom:10}))},finishedLoadingData(e,t){console.log("ALL DONE",{totalRows:e,data:t.range,time:this.timeRange}),this.myState.statusMessage="",this.timeFilter=[this.timeRange[0],this.timeRange[0]+3599],this.range=t.range,this.gzipWorker&&this.gzipWorker.terminate(),this.setColors();const i=this.pointLayers[0].coordinates,s=i[0]+i[i.length-2],o=i[1]+i[i.length-1];this.$store.commit("setMapCamera",{center:[.5*s,.5*o],zoom:6,bearing:0,pitch:0}),this.isLoaded=!0},animate(){if(!this.isAnimating)return;this.animationElapsedTime=this.ANIMATE_SPEED*(Date.now()-this.startTime);const e=this.animationElapsedTime+this.timeRange[0];e>this.timeRange[1]&&(this.startTime=Date.now(),this.animationElapsedTime=0);const t=this.timeFilter[1]-this.timeFilter[0];this.timeFilter=[e,e+t],this.animator=window.requestAnimationFrame(this.animate)},toggleAnimation(){this.isAnimating=!this.isAnimating,this.isAnimating&&(this.animationElapsedTime=this.timeFilter[0]-this.timeRange[0],this.startTime=Date.now()-this.animationElapsedTime/this.ANIMATE_SPEED,this.animate())},setColors(){const e=this.guiConfig.exponent;if(this.vizDetails.breakpoints&&typeof this.vizDetails.breakpoints=="object"&&!Array.isArray(this.vizDetails.breakpoints)&&"colors"in this.vizDetails.breakpoints)if(typeof this.vizDetails.breakpoints.colors[0]=="string"){let t=this.vizDetails.breakpoints.colors.map(i=>{const s=i.match(/[A-Za-z0-9]{2}/g),o=s?s.map(a=>parseInt(a,16)):[0,0,0];return[o[0],o[1],o[2]]});this.colors=[...t]}else this.colors=[...this.vizDetails.breakpoints.colors];else if(this.config&&this.config.breakpoints&&typeof this.config.breakpoints=="object"&&!Array.isArray(this.config.breakpoints)&&"colors"in this.config.breakpoints)this.colors=this.config.breakpoints.colors;else{const t=this.guiConfig["color ramp"];let i=f({colormap:t,nshades:256,format:"rba",alpha:1}).map(a=>[a[0],a[1],a[2]]);this.guiConfig.flip&&(i=i.reverse());const s=256/(this.guiConfig.buckets-1),o=[];for(let a=0;a<this.guiConfig.buckets-1;a++)o.push(i[Math.round(s*a)]);o.push(i[255]),this.colors=o}if(this.vizDetails.breakpoints)Array.isArray(this.vizDetails.breakpoints)&&this.vizDetails.breakpoints.length>0?this.breakpoints=this.vizDetails.breakpoints:typeof this.vizDetails.breakpoints=="object"&&!Array.isArray(this.vizDetails.breakpoints)&&"values"in this.vizDetails.breakpoints&&(this.breakpoints=this.vizDetails.breakpoints.values,"colors"in this.vizDetails.breakpoints&&(this.guiConfig.buckets=this.vizDetails.breakpoints.colors.length));else if(this.config&&this.config.breakpoints)Array.isArray(this.config.breakpoints)?this.breakpoints=this.config.breakpoints:typeof this.config.breakpoints=="object"&&!Array.isArray(this.config.breakpoints)&&"values"in this.config.breakpoints&&(this.breakpoints=this.config.breakpoints.values,"colors"in this.config.breakpoints&&(this.guiConfig.buckets=this.config.breakpoints.colors.length));else{const i=Math.pow(this.range[1],1/e)*this.guiConfig["clip max"]/100,s=[];for(let o=1;o<this.guiConfig.buckets;o++){const a=i*o/this.guiConfig.buckets,r=Math.pow(a,e);s.push(r)}this.breakpoints=s}this.setLegend(this.colors,this.breakpoints)},setLegend(e,t){this.range[1]-this.range[0]!==0&&(this.legendStore=new S,this.legendStore.setLegendSection({section:"Legend",column:"Legend",values:e.map((i,s)=>{const o=t[s==0?s:s-1];let a=""+Math.round(1e6*o)/1e6;return s==0&&(a="< "+a),s==e.length-1&&(a="> "+a),{label:a,value:i}})}),this.breakpoints=t)},async loadFiles(){await this.fileApi.getChromePermission(this.fileSystem.handle);try{let e=`${this.myState.subfolder}/${this.vizDetails.file}`;await this.parseCSVFile(e),this.$emit("isLoaded")}catch(e){console.error(e),this.myState.statusMessage=""+e,this.$emit("error",{type:l.ERROR,msg:"Loading/Parsing Error",desc:"Error loading/parsing: ${this.myState.subfolder}/${this.vizDetails.file}"})}},convertSecondsToClockTimeMinutes(e){const t=Math.floor(e/3600),i=Math.floor((e-t*3600)/60),s={h:`${t}`,m:`${i}`.padStart(2,"0")};return`${s.h}:${s.m}`}}});var W=function(){var t=this,i=t._self._c;return t._self._setupProxy,i("div",{staticClass:"viz-plugin",class:{"hide-thumbnail":!t.thumbnail},attrs:{oncontextmenu:"return false",id:`id-${t.viewId}`}},[t.isLoaded&&!t.thumbnail?i("xy-time-deck-map",{staticClass:"map-layer",attrs:{viewId:t.viewId,pointLayers:t.pointLayers,timeFilter:t.timeFilter,dark:t.globalState.isDarkMode,colors:t.colors,breakpoints:t.breakpoints,radius:t.guiConfig.radius,mapIsIndependent:!1}}):t._e(),t.thumbnail?t._e():i("zoom-buttons",{attrs:{corner:"top-left"}}),i("div",{staticClass:"top-right"},[i("div",{staticClass:"gui-config",attrs:{id:t.configId}})]),i("div",{staticClass:"bottom-left"},[t.legendStore?i("div",{staticClass:"legend-area"},[i("legend-box",{attrs:{legendStore:t.legendStore}})],1):t._e()]),t.isLoaded?i("time-slider",{staticClass:"time-slider-area",attrs:{range:t.timeRange,activeTimeExtent:t.timeFilter,labels:t.timeLabels,isAnimating:t.isAnimating},on:{timeExtent:t.handleTimeSliderValues,toggleAnimation:t.toggleAnimation,drag:function(s){t.isAnimating=!1}}}):t._e(),!t.thumbnail&&t.myState.statusMessage?i("div",{staticClass:"message"},[i("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e(),t.showCustomBreakpoints?i("modal-dialog-custom-colorbreakpoint",{attrs:{breakpointsProp:t.breakpoints,colorsProp:t.colors},on:{close:function(s){t.showCustomBreakpoints=!1},updateColor:s=>t.setLegend(s,t.breakpoints),updateBreakpoint:s=>t.setLegend(t.colors,s),addOrRemoveBreakpoint:(s,o)=>t.setLegend(s,o)}}):t._e()],1)},X=[],H=m(q,W,X,!1,null,"940c8cad");const gt=H.exports;export{gt as default};
