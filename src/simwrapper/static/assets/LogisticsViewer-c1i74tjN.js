import{d as $,n as L,g as m,m as H,C as _}from"./index-BX7jQcoh.js";import{d as A}from"./index-CVL_6l40.js";import{Y as D}from"./index-DFKcNkqO.js";import{f as x,g as z,p as P,n as v,t as E,H as M}from"./HTTPFileSystem-D9FfZC5j.js";import{c as F}from"./index-BkOEJz5G.js";import{P as O,L as j}from"./LegendColors-Lm7wrC8N.js";import{Z as N}from"./ZoomButtons-PxSjzru1.js";import{W as R,a as B,D as W}from"./DashboardDataManager-DOwC_6nC.js";import{b as X}from"./ColorsAndWidths-CaSMrknU.js";import{T as S,P as k,S as b}from"./geojson-layer-uU2lasyR.js";import{A as T}from"./arc-layer-utQsdbjp.js";import{M as U}from"./mapbox-overlay-HS93bZkL.js";import{B as Y}from"./BackgroundLayers-CUd5LA7y.js";import"./fxp-DjoqftHf.js";import"./layer-extension-LbH36Bf-.js";import"./layer-T9N9JmIf.js";import"./group-hI8ly2Wr.js";import"./index-_doEQLKC.js";import"./cubehelix-BzW-tINw.js";import"./threshold-CrWFx_nu.js";import"./rainbow-DNS2KC2A.js";import"./Coords-C-Mhj230.js";import"./turf.es-BzqbG201.js";import"./geo-utils-CCVst3B0.js";import"./sequential-pySAYR1V.js";import"./pow-RbZoge3Z.js";import"./precisionRound-CRsIqO1V.js";const q=$({name:"MapTooltip",components:{},props:{hoverInfo:{type:Object,required:!0},totalShipmentsPerHub:{type:Array,required:!0}},data(){return{tooltipType:0,activity:"",stop:{},hubInfo:{}}},watch:{hoverInfo(){this.renderTooltip(this.hoverInfo)}},methods:{renderTooltip(s){this.tooltipType=0;const{object:t}=s;if(!t)return null;if(t?.type=="pickup")return this.renderActivityTooltip(s,"pickup");if(t?.type=="delivery")return this.renderActivityTooltip(s,"delivery");if(t?.type=="leg")return this.renderTourTooltip(s);if(t?.color)return this.renderLegTooltip(s);if(t?.label=="Depot"||t?.locationX&&t?.locationY)return this.renderHubInfo(s);if(t?.tour)return this.renderStopTooltip(s)},renderActivityTooltip(s,t){this.tooltipType=1,this.activity=t},renderServicesTooltip(s,t){this.tooltipType=2},renderLegTooltip(s){this.tooltipType=3},renderTourTooltip(s){this.tooltipType=5},renderHubInfo(s){this.tooltipType=6;const{object:t,x:e,y:i}=s;this.hubInfo=this.totalShipmentsPerHub.find(r=>r.hubId===t?.id)},renderStopTooltip(s){this.tooltipType=2;const{object:t,x:e,y:i}=s,r=t.visits.length,n=t.visits.reduce((l,a)=>l+a.pickup.length,0),o=t.visits.reduce((l,a)=>l+a.delivery.length,0);this.stop={numPickupsAndDeliveries:n+o,overview:{visits:r,pickups:n,deliveries:o}}}}});var G=function(){var t=this,e=t._self._c;return t._self._setupProxy,t.tooltipType?e("div",{staticClass:"flex-col"},[t.tooltipType==1?e("div",{staticClass:"tooltip"},[e("table",{staticStyle:{"max-width":"30rem","font-size":"0.8rem"}},[e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"right","padding-right":"0.5rem","padding-top":"0.2rem"}},[t._v(t._s(t.activity)+":")]),e("td",{staticStyle:{"padding-top":"0.2rem"}},[t._v(t._s(t.hoverInfo.object.shipmentIds.join(", ")))])])])])]):t._e(),t.tooltipType==2?e("div",{staticClass:"tooltip flex-col"},[e("b",[t._v(t._s(t.hoverInfo.object?.$id))]),e("h5",{staticStyle:{"padding-top":"0.2rem"}},[t._v("Capacity Demand: "+t._s(t.hoverInfo.object.$capacityDemand))])]):t._e(),t.tooltipType==3?e("div",{staticClass:"tooltip flex-col"},[e("b",[t._v(t._s(t.hoverInfo.object?.tour?.vehicleId))]),e("p",[t._v("Leg # "+t._s(1+t.hoverInfo.object?.count))]),e("p",[t._v("Shipments on board: "+t._s(t.hoverInfo.object?.shipmentsOnBoard?.length))]),e("p",[t._v("Total size: "+t._s(t.hoverInfo.object?.totalSize))])]):t._e(),t.tooltipType==4?e("div",{staticClass:"tooltip flex-col"},[e("table",{staticStyle:{"font-size":"0.8rem"}},[e("tbody",[t._l(Object.keys(t.stop.overview),function(i){return e("tr",{key:i},[e("td",{staticStyle:{"text-align":"right","padding-right":"0.5rem"}},[t._v(t._s(i)+":")]),e("td",[e("b",[t._v(t._s(t.stop.overview[i]))])])])}),t._l(Object.keys(t.stop.numPickupsAndDeliveries==1?t.hoverInfo.object.details:[]),function(i){return e("tr",{key:i},[e("td",{staticStyle:{"text-align":"right","padding-right":"0.5rem","padding-top":"0.2rem"}},[t._v(t._s(i.slice(1))+":")]),e("td",{staticStyle:{"padding-top":"0.2rem"}},[t._v(t._s(t.hoverInfo.object.details[t.a]))])])})],2)])]):t._e(),t.tooltipType==5?e("div",{staticClass:"tooltip flex-col"},[e("b",[t._v("Vehicle Id: "+t._s(t.hoverInfo.object?.tour.vehicleId))]),e("p",[t._v("Tour Id: "+t._s(t.hoverInfo.object?.tour.tourId))])]):t._e(),t.tooltipType==6?e("div",{staticClass:"tooltip flex-col"},[e("b",[t._v("Hub Id: "+t._s(t.hubInfo?.hubId))]),e("p",[t._v("Total Shipments: "+t._s(t.hubInfo?.shipmentTotal))])]):t._e()]):t._e()},V=[],J=L(q,G,V,!1,null,null);const Z=J.exports,I="/",g={pickup:[0,150,255],delivery:[240,0,60]},K=$({name:"LogisticsDeckComponent",components:{MapTooltip:Z},props:{activeTab:{type:String,required:!0},bgLayers:{type:Object},carrierServices:{type:Set},center:{type:Array},colors:{type:Object,required:!0},dark:{type:Boolean,required:!0},depots:{type:Array},hubLocation:{type:Array,required:!0},hubName:{type:String,required:!0},legs:{type:Array,required:!0},lspShipmentChains:{type:Array,required:!0},numSelectedTours:{type:Number,required:!0},onClick:{type:Function,required:!0},projection:{type:String,required:!0},settings:{type:Object,required:!0},shipments:{type:Array,required:!0},showHub:{type:Boolean,required:!0},stopActivities:{type:Array,required:!0},tourHubs:{type:Array,required:!0},viewId:{type:Number,required:!0}},data(){return{mymap:null,deckOverlay:null,globalState:m.state,prevHubChains:this.lspShipmentChains,totalShipmentsPerHub:[],tip:null,tooltipStyle:{position:"absolute",padding:"4px 8px",display:"block",top:0,left:0,zIndex:2e4}}},watch:{layers(){this.deckOverlay&&this.deckOverlay.setProps({layers:this.layers})},dark(){let s;this.projection&&this.projection!=="Atlantis"?s=`${I}map-styles/${this.globalState.isDarkMode?"dark":"positron"}.json`:s={version:8,sources:{},layers:[]},this.mymap?.setStyle(s)},"globalState.viewState"(){const s=this.globalState.viewState,t=this.mymap?.getCenter();(s.longitude!==t.lng||s.latitude!==t.lat||s.zoom!==this.mymap?.getZoom()||s.pitch!==this.mymap?.getPitch()||s.bearing!==this.mymap?.getBearing())&&this.mymap?.jumpTo(Object.assign({center:{lng:s.longitude,lat:s.latitude}},s))}},computed:{pickupsAndDeliveries(){const s={},t={};return this.shipments.forEach(e=>{let i=`${e.fromX}-${e.fromY}`;s[i]||(s[i]={type:"pickup",shipmentIds:[],coord:[e.fromX,e.fromY]}),s[i].shipmentIds.push(e.$id),i=`${e.toX}-${e.toY}`,t[i]||(t[i]={type:"delivery",shipmentIds:[],coord:[e.toX,e.toY]}),t[i].shipmentIds.push(e.$id)}),{type:"activity",pickups:Object.values(s),deliveries:Object.values(t)}},widthScale(){return this.settings.scaleFactor==0?1e-6:1/Math.pow(2,(100-this.settings.scaleFactor)/5-6)},widthScaleShipments(){return this.settings.scaleFactorShipments==0?1e-6:1/Math.pow(2,(100-this.settings.scaleFactorShipments)/5-6)},layers(){const s=[],t=this.bgLayers?.layers();return t&&s.push(...t.layersBelow),this.activeTab=="lspTours"&&s.push(...this.getLspTourLayers()),this.activeTab=="shipments"&&this.settings.scaleFactorShipments===0&&s.push(...this.setShipments()),this.activeTab==="lspShipmentChains"&&this.showHub&&this.hubLocation.length>0&&s.push(new S({id:"lspHubs2",data:this.hubLocation,getPosition:[this.hubLocation[0],this.hubLocation[1]],getText:()=>this.hubName,getRadius:2,opacity:.9,background:!0,backgroundPadding:this.numSelectedTours!==1?[2,1,2,1]:[3,2,3,1],getBackgroundColor:()=>[240,130,0],getColor:[255,255,255],parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels",getSize:e=>11,getTextAnchor:"middle",getAlignmentBaseline:"center",noAlloc:!1,billboard:!0,sizeScale:1,autoHighlight:!0})),this.activeTab=="lspShipmentChains"&&!this.showHub&&this.hubLocation.length==0&&s.push(...this.getLspShipmentChainLayers()),t&&s.push(...t.layersOnTop),s}},mounted(){let s;this.projection&&this.projection!=="Atlantis"?s=`${I}map-styles/${this.globalState.isDarkMode?"dark":"positron"}.json`:s={version:8,sources:{},layers:[]};const t=`map-${this.viewId}`,e=this.globalState.viewState.center,i=this.globalState.viewState.zoom;this.mymap=new H.Map({container:t,style:s,center:e,zoom:i}),this.mymap.on("move",this.handleMove),this.mymap.on("style.load",()=>{this.deckOverlay=new U({interleaved:!0,layers:this.layers,onClick:this.handleClick,onHover:this.getTooltip}),this.mymap?.addControl(this.deckOverlay)})},beforeDestroy(){this.deckOverlay&&this.mymap?.removeControl(this.deckOverlay),this.mymap?.remove()},methods:{getLineWidth(s,t){return s+1==Number(t.route.length-1)?1*(this.settings.scaleFactor/2):3*(this.settings.scaleFactor/2)},getSourceColor(s,t){const e=this.shipments.length>1?32:255;return s+1==Number(t.route.length-1)?[0,228,255,e]:[255,140,0]},getTargetColor(s,t){return s+1==Number(t.route.length-1)?[240,0,60,224]:[255,140,0]},getLspShipmentChainLayers(){const s=[],t=this.shipments.length>1?32:255;if(this.lspShipmentChains[0].hubsChains.length===0)s.push(new T({id:"shipmentdirectchains",data:this.lspShipmentChains[0].directChains,getSourcePosition:e=>[e.fromX,e.fromY],getTargetPosition:e=>[e.toX,e.toY],getSourceColor:[0,228,255,t],getTargetColor:[240,0,60,224],getWidth:this.settings.scaleFactor?e=>parseInt(e.$size)||1:1,widthUnits:"pixels",getHeight:.5,opacity:.9,parameters:{depthTest:!1},widthScale:this.settings.widthScale,widthMinPixels:1,widthMaxPixels:100,updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:200}})),s.push(new b({id:"deliveriesHubChain",data:this.lspShipmentChains[0].directChains,getPosition:e=>[e.toX,e.toY],getColor:g.delivery,getRadius:3,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels"})),s.push(new b({id:"pickupsHubChain",data:this.lspShipmentChains[0].directChains,getPosition:e=>[e.fromX,e.fromY],getColor:g.pickup,getRadius:2,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels"}));else{const e=this.lspShipmentChains[0].hubsChains.flatMap(r=>r.hubs);let i=e.reduce((r,n)=>(r.find(l=>JSON.stringify(l)===JSON.stringify(n))||r.push(n),r),[]);i.forEach(r=>{let n={hubId:r.id,shipmentTotal:0};this.totalShipmentsPerHub.push(n)}),this.totalShipmentsPerHub.forEach(r=>{r.shipmentTotal=0}),this.lspShipmentChains[0].hubsChains.forEach(r=>{r.hubs.forEach(o=>{if(i.some(a=>a.id===o.id)){let a=this.totalShipmentsPerHub.find(c=>c.hubId===o.id);a&&a.shipmentTotal++}}),console.log("Adding 3x",r.route.length,"layers");const n=r.route.map((o,l)=>l?[o,r.route[l-1]]:null).slice(1);s.push(new T({id:"shipmenthubchains_"+r.shipmentId,data:n,getSourcePosition:o=>o[0],getTargetPosition:o=>o[1],getSourceColor:(o,l)=>this.getSourceColor(l,r),getTargetColor:(o,l)=>this.getTargetColor(l,r),getWidthColor:(o,l)=>this.getLineWidth(l,r),widthUnits:"pixels",getHeight:.5,opacity:.9,parameters:{depthTest:!1},widthMinPixels:1,widthMaxPixels:100,transitions:{getWidth:200}})),s.push(new b({id:"HubChainMarker_"+r.shipmentId,data:[r],getPosition:()=>[r.route[r.route.length-1][0],r.route[r.route.length-1][1]],getFillColor:g.pickup,getRadius:3,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels"})),s.push(new b({id:"pickupsHubChain",data:[{}],getPosition:o=>[r.route[0][0],r.route[0][1]],getColor:g.pickup,getRadius:2,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels"}))}),s.push(new S({id:"HubChain",data:e,getPosition:r=>[r.locationX,r.locationY],getText:r=>r.id,getAlignmentBaseline:"center",getColor:[255,255,255],getBackgroundColor:[240,130,0],background:!0,backgroundPadding:[2,2,2,2],fontWeight:"normal",getSize:10,getTextAnchor:"middle",pickable:!0}))}return s},setShipments(){const s=[];s.push(new b({id:"deliveries",data:this.pickupsAndDeliveries.deliveries,getPosition:e=>e.coord,getFillColor:g.delivery,getRadius:3,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels"})),s.push(new b({id:"pickups",data:this.pickupsAndDeliveries.pickups,getPosition:e=>e.coord,getFillColor:g.pickup,getRadius:2,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels"}));const t=this.shipments.length>1?32:255;return s.push(new T({id:"shipments",data:this.shipments,getSourcePosition:e=>[e.fromX,e.fromY],getTargetPosition:e=>[e.toX,e.toY],getSourceColor:[0,228,255,t],getTargetColor:[240,0,60,224],getWidth:this.settings.scaleFactorShipments?e=>parseInt(e.$size)||1:1,widthUnits:"pixels",getHeight:.5,opacity:.9,parameters:{depthTest:!1},widthScale:this.settings.widthScaleShipments,widthMinPixels:1,widthMaxPixels:100,updateTriggers:{getWidth:[this.settings.scaleFactorShipments]},transitions:{getWidth:200}})),s},getLspTourLayers(){const s=[];return this.showHub===!0&&this.hubLocation.length>0?s.push(new S({id:"pickupsHubChain",data:this.hubLocation,getPosition:[this.hubLocation[0],this.hubLocation[1]],getText:()=>this.hubName,getRadius:2,opacity:.9,background:!0,backgroundPadding:this.numSelectedTours!==1?[2,1,2,1]:[3,2,3,1],getBackgroundColor:()=>[240,130,0],getColor:[255,255,255],parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels",getSize:t=>11,getTextAnchor:"middle",getAlignmentBaseline:"center",noAlloc:!1,billboard:!0,sizeScale:1,autoHighlight:!0})):(s.push(new k({id:"shipmentLocationDashedLine",data:this.stopActivities,getPath:t=>[t.ptFrom,t.ptTo],getColor:[128,128,128],getOffset:2,opacity:1,widthMinPixels:3,jointRounded:!0,shadowEnabled:!1,pickable:!1,autoHighlight:!1,highlightColor:[255,255,255],parameters:{depthTest:!1},getDashArray:[3,2],dashJustified:!0,extensions:[new O({dash:!0})]})),this.settings.simplifyTours&&!this.settings.showEachCarrierTour?s.push(new T({id:"leg-arcs",data:this.legs,getSourcePosition:t=>t.points[0],getTargetPosition:t=>t.points[t.points.length-1],getSourceColor:t=>this.getLspTourColor(t.tour),getTargetColor:t=>this.getLspTourColor(t.tour),getWidth:this.settings.scaleFactor?t=>t.totalSize/2:3,getHeight:.5,widthMinPixels:2,widthMaxPixels:200,widthUnits:"pixels",opacity:.9,parameters:{depthTest:!1},updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:150},pickable:!0,autoHighlight:!0,highlightColor:[255,255,255]})):this.settings.showEachCarrierTour&&!this.settings.simplifyTours?s.push(new k({id:"deliveryroutes2",data:this.legs,getPath:t=>t.points,getColor:t=>this.getCarrierToursColors(t),getWidth:this.settings.scaleFactor?t=>t.totalSize:3,getOffset:2,opacity:1,widthMinPixels:3,widthMaxPixels:200,widthUnits:"pixels",jointRounded:!0,shadowEnabled:!1,pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],parameters:{depthTest:!1},updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:150}})):this.settings.simplifyTours&&this.settings.showEachCarrierTour?s.push(new T({id:"leg-arcs-showAll",data:this.legs,getSourcePosition:t=>t.points[0],getTargetPosition:t=>t.points[t.points.length-1],getSourceColor:t=>this.getCarrierToursColors(t),getTargetColor:t=>this.getCarrierToursColors(t),getWidth:this.settings.scaleFactor?t=>t.totalSize/2:3,getHeight:.5,widthMinPixels:2,widthMaxPixels:200,widthUnits:"pixels",opacity:.9,parameters:{depthTest:!1},updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:150},pickable:!0,autoHighlight:!0,highlightColor:[255,255,255,160]})):s.push(new k({id:"deliveryroutes1",data:this.legs,getPath:t=>t.points,getColor:t=>this.getLspTourColor(t.tour),getWidth:this.settings.scaleFactor?t=>t.totalSize:3,getOffset:2,opacity:1,widthMinPixels:3,widthMaxPixels:200,widthUnits:"pixels",jointRounded:!0,shadowEnabled:!1,pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],parameters:{depthTest:!1},updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:150}})),s.push(new S({id:"dest-labels",data:this.stopActivities,background:!0,backgroundPadding:this.numSelectedTours!==1?[2,1,2,1]:[3,2,3,1],getColor:[255,255,255],getBackgroundColor:t=>{const e=t.visits.reduce((n,o)=>n+o.pickup.length,0),i=t.visits.reduce((n,o)=>n+o.delivery.length,0),r=t.visits.reduce((n,o)=>n+o.service.length,0);return e&&i&&!t.depot?[0,0,255]:e&&!t.depot?g.pickup:i&&!t.depot||r&&!t.depot?g.delivery:t.depot?[240,130,0]:[240,130,0]},getPosition:t=>t.midpoint,getText:t=>t.label=="Hub"?t.label:this.numSelectedTours!==1?" ":`${t.label}`,getSize:t=>t.label=="Hub"?11:this.numSelectedTours!==1?4:11,getTextAnchor:"middle",getAlignmentBaseline:"center",opacity:1,noAlloc:!1,billboard:!0,sizeScale:1,pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],visible:this.settings.shipmentDotsOnTourMap})),s.push(new S({id:"HubChain",data:this.tourHubs,getPosition:t=>[t.Xcoord,t.Ycoord],getText:t=>t.hubId,getAlignmentBaseline:"center",getColor:[255,255,255],getBackgroundColor:[240,130,0],background:!0,backgroundPadding:[2,2,2,2],fontWeight:"normal",getSize:10,getTextAnchor:"middle",pickable:!0}))),s},getLspTourColor(s){const t=this.colors[s.carrier];try{if(t){const o=X([t]);if(o)return o[0]}}catch{}let e=0;for(let o=0;o<s.vehicleId.length;o++)e=s.vehicleId.charCodeAt(o)+((e<<5)-e);const i=(e&16711680)>>16,r=(e&65280)>>8,n=e&255;return[i,r,n]},getCarrierToursColors(s){let t=0;for(let n=0;n<s.tour.tourId.length;n++)t=s.tour.tourId.charCodeAt(n)+((t<<5)-t);t*=s.tour.tourNumber;const e=(t%360+360)%360;return this.hslToRgb(e,70,50)},hslToRgb(s,t,e){t/=100,e/=100;const i=o=>(o+s/30)%12,r=t*Math.min(e,1-e),n=o=>e-r*Math.max(-1,Math.min(i(o)-3,Math.min(9-i(o),1)));return[Math.round(n(0)*255),Math.round(n(8)*255),Math.round(n(4)*255)]},handleMove(){const s=this.mymap?.getCenter(),t={latitude:s.lat,longitude:s.lng,zoom:this.mymap?.getZoom(),bearing:this.mymap?.getBearing(),pitch:this.mymap?.getPitch(),jump:!0};m.commit("setMapCamera",t)},getTooltip(s){const{x:t,y:e,object:i}=s;if(!i){this.tooltipStyle.display="none",this.tip=null;return}this.tip={...s},this.tooltipStyle.display="block",this.tooltipStyle.top=`${e+12}px`,this.tooltipStyle.left=`${t+12}px`},oldgetTooltip(s){const{x:t,y:e,object:i}=s;if(!i||!i.position||!i.position.length){this.tooltipStyle.display="none";return}this.tooltipStyle.display="block",this.tooltipStyle.top=`${e+12}px`,this.tooltipStyle.left=`${t+12}px`},handleClick(s){s.object?this.onClick(s.object):this.onClick(null)}}});var Q=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("div",{staticClass:"deck-map flex-col"},[e("div",{staticClass:"map-container",attrs:{id:`map-${t.viewId}`}}),t.tip?e("MapTooltip",{staticClass:"deck-tooltip",style:t.tooltipStyle,attrs:{hoverInfo:t.tip,totalShipmentsPerHub:t.totalShipmentsPerHub}}):t._e()],1)},tt=[],et=L(K,Q,tt,!1,null,null);const st=et.exports,it={messages:{en:{carriers:"Carriers",vehicles:"VEHICLES",services:"SERVICES",shipments:"SHIPMENTS",tours:"TOURS",pickup:"Pickup",service:"service",delivery:"Delivery",flatten:"Simple&nbsp;tours",shipmentDots:"Show shipments",scaleSize:"Widths",scaleFactor:"Width",scaleFactorShipments:"Width","Shipment Chains":"Shipment Chains",Shipments:"Shipments","LSP Tours":"LSP Tours",lspShipmentChains:"lspShipmentChains","Lsp Shipments":"Lsp Shipments","Carrier Tours":"Carrier Tours",Tours:"Tours"},de:{carriers:"Unternehmen",vehicles:"FAHRZEUGE",services:"BETRIEBE",shipments:"LIEFERUNGEN",Shipments:"Lieferungen",service:"service",tours:"TOUREN",pickup:"Abholung",delivery:"Lieferung","Shipment Chains":"Lieferungketten",Tours:"Tours",scaleSize:"Widths",scaleFactor:"Width",scaleFactorShipments:"Width",lspShipmentChains:"lspShipmentChains","LSP Tours":"LSP Touren","Lsp Shipments":"Lsp Lieferungen","Carrier Tours":"Carrier Touren",shipmentDots:"Lieferungen anzeigen",flatten:"Einfache Touren"}}};v.insensitive=!0;const rt=$({name:"LogisticsPlugin",i18n:it,components:{LegendColors:j,ToggleButton:A.ToggleButton,DeckMap:st,ZoomButtons:N},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){return{linkLayerId:Math.floor(1e12*Math.random()),vizSettings:{simplifyTours:!1,showEachCarrierTour:!1,scaleShipmentSizes:!0,shipmentDotsOnTourMap:!0,selectedTours:!1,scaleFactor:0,scaleFactorShipments:0},isDraggingDivider:0,dragStartWidth:250,legendSectionWidth:275,vizDetails:{network:"",carriers:"",lsps:"",projection:"",title:"",description:"",thumbnail:"",center:null,colors:{}},myState:{statusMessage:"",isRunning:!1,subfolder:"",yamlConfig:"",thumbnail:!0,data:[]},myDataManager:this.datamanager||new W(this.root,this.subfolder),searchTerm:"",searchEnabled:!1,globalState:m.state,isLoaded:!0,showHelp:!1,activeTab:"",legendBits:[],links:null,toggleTours:!0,toggleVehicles:!0,toggleShipments:!0,toggleServices:!0,backgroundLayers:null,detailContent:"",linksCsvData:null,data:null,darkMode:null,lightMode:null,avroNetwork:null,lsps:[],lspPlan:{},resources:[],lspShipmentChains:[],lspShipmentDirectChains:[],lspShipmentHubChains:[],lspChainTours:[],lspChainToursAll:[],lspDirectToursAll:[],lspToursAll:[],lspCarriers:[],lspHubChainCarriers:[],lspHubCarriers:[],lspDirectCarriers:[],lspCarrier:{},globalHubChainBoolean:!1,tourHubs:[],allHubChains:[],allCarrierHubIds:[],hubLocation:[],showHub:!1,hubName:"",carriers:[],carrierTours:[],carrierServicesAll:new Set,showCompleteHubChain:!1,showCarrierTours:!1,showCarrierToursList:!1,vehicles:[],shipments:[],shipmentLookup:{},services:[],stopActivities:[],tours:[],plans:[],shownShipments:[],shipmentIdsInTour:[],depots:[],shownDepots:[],shownLegs:[],selectedLsp:"",selectedCarrier:"",lspHubChainTours:"Hub Chain0",selectedLspHubChainTours:"",selectedTours:[],selectedPlan:null,selectedPlanIndex:null,selectedShipment:null,selectedLSPChain:null,thumbnailUrl:"",vehicleLookup:[],vehicleLookupString:{},rgb:F({colormap:"phase",nshades:9,format:"rba"}).map(s=>s.slice(0,3)).reverse(),dropdownIsActive:!1}},computed:{fileApi(){return new M(this.fileSystem,m)},fileSystem(){const s=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(s.length===0)throw console.log("no such project"),Error;return s[0]},textColor(){const s={text:"#3498db",bg:"#eeeef480"},t={text:"white",bg:"#181518aa"};return this.globalState.isDarkMode?t:s}},watch:{"globalState.isDarkMode"(){this.updateLegendColors()},async"globalState.authAttempts"(){console.log("AUTH CHANGED - Reload"),this.yamlConfig||this.buildRouteFromUrl(),await this.getVizDetails()}},methods:{dividerDragStart(s){this.isDraggingDivider=s.clientX,this.dragStartWidth=this.legendSectionWidth},dividerDragEnd(s){this.isDraggingDivider=0},dividerDragging(s){if(!this.isDraggingDivider)return;const t=this.isDraggingDivider-s.clientX;this.legendSectionWidth=Math.max(0,this.dragStartWidth+t)},checkIfHubChain(){return this.lspShipmentHubChains.length>0},checkIfDirectChain(){return this.globalHubChainBoolean=!1,this.lspShipmentDirectChains.length>0&&this.lspShipmentHubChains.length==0},handleSelectShipment(s){if(this.selectedShipment===s){if(this.selectedShipment=null,this.shownShipments=[],!this.selectedTours.length){const t=this.carriers.filter(e=>e.$id==this.selectedCarrier);this.selectedCarrier="",this.handleSelectCarrier(t[0],!0,"")}return}this.shownShipments=this.shipments.filter(t=>t.$id===s.$id),this.selectedShipment=s},handleSelectShipmentChain(s){if(this.selectedLSPChain===s){if(this.selectedLSPChain=null,this.shownShipments=[],this.selectedLSPChain==null){const e=this.lsps.filter(r=>r.$id==this.selectedLsp);let i;e[0].resources.carrier.forEach(r=>{r.$id==this.selectedCarrier&&(i=r)}),this.shipments=this.processShipments(i),this.lspShipmentChains=[],this.lspShipmentChains.push(this.processLogisticChains(this.shipments)),this.shownShipments=this.shipments}return}let t={hubsChains:this.lspShipmentHubChains,directChains:this.lspShipmentDirectChains};t.hubsChains=this.lspShipmentHubChains.filter(e=>e.shipmentId===s.shipmentId),t.directChains=[],this.lspShipmentChains=[],this.lspShipmentChains.push(t),this.selectedLSPChain=s},processActivitiesInTour(s){const t=[];let e=0;const i={};let r=[],n="";if(this.lspShipmentHubChains.length>0)for(let l=0;l<this.lspShipmentHubChains[0].hubs.length;l++){const a=this.links[this.lspShipmentHubChains[0].hubs[l].location];r=[.5*(a[0]+a[2]),.5*(a[1]+a[3])],n=this.lspShipmentHubChains[0].hubs[l].location,i[`L${this.lspShipmentHubChains[0].hubs[l].location}`]={link:this.lspShipmentHubChains[0].hubs[l].location,midpoint:r,visits:[{pickup:[],delivery:[],service:[]}],label:"",tour:s,hub:!0,depot:!1,details:{},ptFrom:[a[0],a[1]],ptTo:[a[2],a[3]]}}else if(this.lspShipmentDirectChains.length>0&&!this.globalHubChainBoolean){const l=this.links[this.lspShipmentDirectChains[0].from];r=[.5*(l[0]+l[2]),.5*(l[1]+l[3])],n=this.lspShipmentDirectChains[0].from,i[`L${this.lspShipmentDirectChains[0].from}`]={link:this.lspShipmentDirectChains[0].from,midpoint:r,visits:[{pickup:[],delivery:[],service:[]}],label:"",tour:s,hub:!1,depot:!0,details:{},ptFrom:[l[0],l[1]],ptTo:[l[2],l[3]]}}else for(let l=0;l<this.lspShipmentHubChains[0].hubs.length;l++){const a=this.links[this.lspShipmentHubChains[0].hubs[l].location];r=[.5*(a[0]+a[2]),.5*(a[1]+a[3])],n=this.lspShipmentHubChains[0].hubs[l].location,i[`L${this.lspShipmentHubChains[0].hubs[l].location}`]={link:this.lspShipmentHubChains[0].hubs[l].location,midpoint:r,visits:[{pickup:[],delivery:[],service:[]}],label:"",tour:s,hub:!0,depot:!1,details:{},ptFrom:[a[0],a[1]],ptTo:[a[2],a[3]]}}s.plan.forEach(l=>{if(!(!l.$serviceId&&!l.$shipmentId))if(l.$serviceId&&t.push(l.$serviceId),l.$shipmentId&&t.push(l.$shipmentId),s.vehicleId=="mainTruck"){const a=s.legs[0].links[0],c=[this.links[a][0],this.links[a][1]],p=[this.links[a][2],this.links[a][3]],h=[.5*(c[0]+p[0]),.5*(c[1]+p[1])],u=this.$t(String(l.$type)),d={id:s.id,type:u,count:e++,link:a,midpoint:h,label:"",tour:s,ptFrom:c,ptTo:p};if(a==n)i[`L${a}`].visits[i[`L${a}`].visits.length-1][l.$type].push(d);else if(`L${a}`in i){const f={pickup:[],delivery:[],service:[]};f[l.$type].push(d),i[`L${a}`].visits.push(f)}else{const f={pickup:[],delivery:[],service:[]};f[l.$type].push(d),i[`L${a}`]={link:a,midpoint:h,label:"",tour:s,hub:!1,depot:!0,ptFrom:c,ptTo:p,visits:[f]}}n=a}else{const a=this.shipmentLookup[l.$serviceId]||this.shipmentLookup[l.$shipmentId];if(!a)return;const c=l.$type==="pickup"?a.$from:a.$to,p=[this.links[c][0],this.links[c][1]],h=[this.links[c][2],this.links[c][3]],u=[.5*(p[0]+h[0]),.5*(p[1]+h[1])],d=this.$t(l.$type),{from:f,fromX:at,fromY:ht,to:ct,toX:pt,toY:ut,id:dt,...w}=a,y={id:a.$id,type:d,count:e++,link:c,midpoint:u,label:"",tour:s,details:w,ptFrom:p,ptTo:h};if(c==n)i[`L${c}`].visits[i[`L${c}`].visits.length-1][l.$type].push(y);else if(`L${c}`in i){const C={pickup:[],delivery:[],service:[]};C[l.$type].push(y),i[`L${c}`].visits.push(C)}else{const C={pickup:[],delivery:[],service:[]};C[l.$type].push(y),i[`L${c}`]={link:c,midpoint:u,label:"",tour:s,hub:!1,depot:!1,details:w,ptFrom:p,ptTo:h,visits:[C]}}n=c}});const o=Object.values(i);for(let l=0;l<o.length;l++)o[l].hub?o[l].label="hub":o[l].depot?o[l].label="depot":o[l].label=`${l}`;return{shipmentIdsInTour:t,stopActivities:o}},setupDepots(){const s={};this.vehicles.forEach(t=>{const e=t.$depotLinkId;let i=this.links[e];i&&(s[e]||(s[e]={type:"depot",link:t.$depotLinkId,midpoint:[.5*(i[0]+i[2]),.5*(i[1]+i[3])],coords:this.links[t.$depotLinkId],vehicles:{}}),s[e].vehicles[t.$id]=t)}),this.depots=Object.values(s),this.shownDepots=this.depots.slice(0)},selectAllLspTours(){this.selectedTours=[],this.shownLegs=[],this.stopActivities=[],this.shownDepots=[],this.shownShipments=this.shipments.slice(0);let s=this.lsps.find(t=>t.$id===this.selectedLsp);if(this.tourHubs=[],s.resources.hub&&s.resources.hub.forEach(t=>{let e={Xcoord:(this.links[t.$location][0]+this.links[t.$location][2])/2,Ycoord:(this.links[t.$location][1]+this.links[t.$location][3])/2,hubId:t.$id};this.tourHubs.push(e)}),this.globalHubChainBoolean)for(const t of this.lspChainToursAll){t.legs.forEach((i,r)=>this.addRouteToMap(t,i,r++));const e=this.processActivitiesInTour(t);this.stopActivities=this.stopActivities.concat(e.stopActivities),this.setupDepots()}else if(this.selectedCarrier)for(const t of this.lspChainToursAll)for(const e of t){e.legs.forEach((r,n)=>this.addRouteToMap(e,r,n++));const i=this.processActivitiesInTour(e);this.stopActivities=this.stopActivities.concat(i.stopActivities),this.setupDepots()}else if(!this.selectedCarrier&&!this.globalHubChainBoolean)for(const t of this.lspChainToursAll)for(const e of t){e.legs.forEach((r,n)=>this.addRouteToMap(e,r,n++));const i=this.processActivitiesInTour(e);this.stopActivities=this.stopActivities.concat(i.stopActivities),this.setupDepots()}else for(const t of this.lspChainToursAll){t.legs.forEach((i,r)=>this.addRouteToMap(t,i,r++));const e=this.processActivitiesInTour(t);this.stopActivities=this.stopActivities.concat(e.stopActivities),this.setupDepots()}},selectAllTours(){if(this.selectedTours=[],this.shownLegs=[],this.stopActivities=[],this.shownDepots=[],this.shownShipments=this.shipments.slice(0),this.carrierTours.length>0)for(const s of this.carrierTours[0]){s.legs.forEach((e,i)=>this.addRouteToMap(s,e,i++));const t=this.processActivitiesInTour(s);this.stopActivities=this.stopActivities.concat(t.stopActivities),this.setupDepots()}else if(this.lspChainToursAll)for(const s of this.lspChainToursAll){s.legs.forEach((e,i)=>this.addRouteToMap(s,e,i++));const t=this.processActivitiesInTour(s);this.stopActivities=this.stopActivities.concat(t.stopActivities),this.setupDepots()}},hslToRgb(s,t,e){t/=100,e/=100;const i=o=>(o+s/30)%12,r=t*Math.min(e,1-e),n=o=>e-r*Math.max(-1,Math.min(i(o)-3,Math.min(9-i(o),1)));return[Math.round(n(0)*255),Math.round(n(8)*255),Math.round(n(4)*255)]},getTourColor(s,t){let e=0;for(let l=0;l<s.length;l++)e=s.charCodeAt(l)+((e<<5)-e);e*=t;const i=(e%360+360)%360;let o=this.hslToRgb(i,70,50);return`rgb(${o[0]}, ${o[1]}, ${o[2]})`},getLspTourColor(s){const t=this.vizDetails.colors&&this.vizDetails.colors[s.carrier];if(t)return t;s.vehicleId||this.$emit("error","WARN: tour has no vehicleId: "+s);const e=s.vehicleId||"unknown";let i=0;for(let l=0;l<e.length;l++)i=e.charCodeAt(l)+((i<<5)-i);const r=(i&16711680)>>16,n=(i&65280)>>8,o=i&255;return`rgb(${r}, ${n}, ${o})`},async handleSelectTour(s){if(this.vizSettings.selectedTours=!0,!s.legs.length){console.log("No Route.");for(let r=0;r<s.plan.length;r++)if(s.plan[r].$shipmentId){const n=s.plan[r].$shipmentId,o=[this.shipmentLookup[n].$from,this.shipmentLookup[n].$to];s.legs.push({links:o})}this.vizSettings.simplifyTours=!0}if(this.selectedTours.includes(s)){this.selectedTours=this.selectedTours.filter(r=>r!==s),this.shownLegs=this.shownLegs.filter(r=>r.tour!==s),this.stopActivities=this.stopActivities.filter(r=>r.tour!==s),!this.selectedTours.length&&!this.selectedCarrier?(this.selectAllLspTours(),this.vizSettings.selectedTours=!1):!this.selectedCarrier&&this.selectedTours.length?this.vizSettings.selectedTours=!1:(this.selectAllTours(),this.vizSettings.selectedTours=!1);return}this.selectedTours.length||(this.selectedTours=[],this.shownLegs=[],this.stopActivities=[],this.shownDepots=[]),this.selectedTours.push(s);const{shipmentIdsInTour:t,stopActivities:e}=this.processActivitiesInTour(s);this.shipmentIdsInTour=t;let i=0;for(const r of s.legs)this.addRouteToMap(s,r,i++);this.stopActivities=this.stopActivities.concat(e)},addRouteToMap(s,t,e){const i=[[this.links[t.links[0]][0],this.links[t.links[0]][1]]];for(const r of t.links){const n=i[i.length-1],o=[this.links[r][0],this.links[r][1]];(o[0]!==n[0]||o[1]!==n[1])&&i.push(o),i.push([this.links[r][2],this.links[r][3]])}this.shownLegs=this.shownLegs.concat([{tour:s,shipmentsOnBoard:t.shipmentsOnBoard,totalSize:t.totalSize,count:e,points:i,color:this.rgb[(3+i.length)%this.rgb.length],type:"leg"}])},handleSelectLspButton(s){this.showCarrierToursList=!1,this.activeTab="lspTours",this.selectedCarrier="",this.handleSelectLsp(s,!1,null)},handleSelectLspFromList(s){this.showCarrierToursList=!1,this.lspShipmentDirectChains.length==0&&this.lspShipmentHubChains.length==0?this.activeTab="lspShipmentChains":this.activeTab="shipments",this.selectedCarrier=this.getFirstCarrierFromSelectedLsp(s),this.vizSettings.showEachCarrierTour=!1,this.handleSelectLsp(s,!1,null)},handleSelectLsp(s,t,e){this.globalHubChainBoolean=t,typeof s=="string"&&(s=this.lsps.find(o=>o.$id===s)),this.lspToursAll=[],this.lspCarriers=[],this.lspHubChainCarriers=[],this.allHubChains=[];const i=s.LspPlans.LspPlan.find(o=>o.$selected=="true");i.logisticChains.logisticChain.forEach(o=>{if(o.$id.includes("direct")||o.$id.includes("Direct"))this.lspCarriers.push(o.logisticChainElement[0].$resourceId);else if(o.$id.includes("hub")||o.$id.includes("Hub")){let l=[];l.push(o);let a=0;l.forEach(c=>{let p={chainIds:[],chainIndex:a};c.logisticChainElement.forEach(h=>{p.chainIds.push(h.$resourceId),this.allCarrierHubIds.push(h.$resourceId)}),this.allHubChains.push(p),a++})}}),this.lspHubChainCarriers=this.allHubChains;const r=s.$id;this.selectedLsp=r,this.lspCarrier=this.carriers.filter(o=>o.$id==i.logisticChains.logisticChain[0].logisticChainElement[0].$resourceId)[0],this.lspCarrier==null&&console.error("no logistic chain elements for lsp Plan."),this.shipments=this.processShipments(this.lspCarrier),this.lspShipmentChains=[],this.lspShipmentChains.push(this.processLogisticChains(this.shipments)),this.shownShipments=[],this.shownShipments=this.shipments;let n=s.LspPlans.LspPlan.find(o=>o.$selected==="true");this.lspChainToursAll=[],n.logisticChains.logisticChain.forEach(o=>{e!=null&&t?JSON.stringify(this.allHubChains[e].chainIds)==JSON.stringify(o.logisticChainElement.flatMap(l=>l.$resourceId))&&(this.allHubChains[e].chainIds.forEach(l=>{this.handleSelectCarrier(l,!0,"")}),this.selectedCarrier="",this.lspToursAll=this.lspChainToursAll):e==null&&!t&&(this.lspHubChainTours="",this.selectedLspHubChainTours="Hub_Chain_0",o.logisticChainElement.forEach(l=>{let a=this.processTours(l);a.length>0&&this.lspChainToursAll.push(a)}),this.lspToursAll=[...this.lspChainToursAll].flat())}),this.selectAllLspTours()},getCarrierServicesForHubChain(s,t){if(this.activeTab=="lspTours"||this.activeTab=="tours"){if(this.lspHubChainTours===this.selectedLspHubChainTours){this.lspHubChainTours="Hub Chain0",this.selectedLspHubChainTours="",this.selectedCarrier="",console.log("carriers unselected - TRIGGER THE LSP!"),this.handleSelectLsp(this.lsps.find(e=>e.$id==this.selectedLsp),!1,null);return}this.lspHubChainTours="Hub_Chain_"+t,this.selectedLspHubChainTours="Hub_Chain_"+t,this.showCompleteHubChain=!0,this.handleSelectLsp(s,!0,t)}},handleSelectCarrier(s,t,e){console.log("---handleSelectCarrier");let i={};if(E(s)=="string"?i=this.carriers.find(h=>h.$id===s):i=this.carriers.find(h=>h.$id===s.$id),this.showHub=!1,this.hubLocation=[],i==null){this.shipments=[],this.hubLocation=[],this.lspShipmentChains=[];let u=this.lsps.find(d=>d.$id==this.selectedLsp).resources.hub.find(d=>d.$id==s);this.hubLocation.push(.5*(this.links[u.$location][0]+this.links[u.$location][2])),this.hubLocation.push(.5*(this.links[u.$location][1]+this.links[u.$location][3])),this.hubName=s,this.showHub=!0,this.globalHubChainBoolean||(this.selectedCarrier=s,this.lspHubChainTours="",this.selectedLspHubChainTours="Hub_Chain_0");return}if(this.dropdownIsActive=!1,!this.links)return;const r=i.$id;if(this.vehicles=[],this.shipments=[],this.services=[],this.plans=[],this.shownShipments=[],this.shownDepots=[],this.selectedShipment=null,this.shipmentIdsInTour=[],this.stopActivities=[],this.shownLegs=[],this.selectedCarrier===r&&t&&!this.globalHubChainBoolean){this.selectedCarrier="",console.log("--- carriers unselected - TRIGGER THE LSP!"),this.handleSelectLsp(this.lsps.find(h=>h.$id==this.selectedLsp),!1,null);return}e=="direct"&&(this.lspHubChainTours="",this.selectedLspHubChainTours="Hub_Chain_0"),this.globalHubChainBoolean||(this.selectedCarrier=r),this.setupDepots(),this.shipments=this.processShipments(i),this.lspShipmentChains=[],this.lspShipmentChains.push(this.processLogisticChains(this.shipments)),i.services?.service?.length&&(this.services=i?.services.service.map(h=>h.$).sort((h,u)=>v(h.$id,u.$id))),this.shownShipments=this.shipments,this.lspChainTours=[],this.lspChainToursAll=[];let n={};this.lsps.forEach(h=>{h.resources.carrier.find(u=>u.$id==i.$id)&&(n=h)});let o={};n.LspPlans.LspPlan.forEach(h=>{h.$selected==="true"&&(o=h)}),this.carrierTours=[];let l=o.logisticChains.logisticChain.find(h=>h.$id.includes("Direct")||h.$id.includes("direct")),a=o.logisticChains.logisticChain.find(h=>h.$id.includes("Hub")||h.$id.includes("hub")),c=[],p=[];l&&l.logisticChainElement.forEach(h=>{c.push(h.$resourceId)}),a&&a.logisticChainElement.forEach(h=>{p.push(h.$resourceId)}),c.find(h=>h===i.$id)?l.logisticChainElement.forEach(h=>{h.$resourceId===i.$id&&this.carrierTours.push(this.processTours(h))}):p.find(h=>h===i.$id)&&a.logisticChainElement.forEach(h=>{h.$resourceId===i.$id&&this.carrierTours.push(this.processTours(h)),this.lspChainTours.push(this.processTours(h))}),this.lspChainTours.forEach(h=>{this.lspChainToursAll=this.lspChainToursAll.concat(h)}),this.lspChainToursAll.length==0?this.lspChainToursAll.push(this.carrierTours):this.lspChainToursAll.concat(this.carrierTours),this.activeTab!="lspTours"&&this.activeTab!="tours"&&!this.allCarrierHubIds.includes(s)&&(this.activeTab="shipments"),this.activeTab!="lspTours"&&this.activeTab!="tours"&&this.allCarrierHubIds.includes(s)&&(this.activeTab="lspShipmentChains"),this.selectAllTours()},getAllPlans(s){if(s.plan!=null){this.plans.push(s.plan),this.selectedPlan=s.plan;return}if(s.plans!=null){if(s.plans.plan.length==null){this.plans.push(s.plans.plan),this.selectedPlan=s.plans.plan;return}this.plans=s.plans.plan;for(let t=0;t<s.plans.plan.length;t++){if(s.plans.plan[t].selected=="true"){this.selectedPlan=s.plans.plan[t];break}this.selectedPlan=s.plans.plan[t]}}},processTours(s){let t=this.carriers.find(e=>e.$id===s.$resourceId);if(t!=null){this.getAllPlans(t),Array.isArray(this.selectedPlan.tour)||(this.selectedPlan.tour=[this.selectedPlan.tour]);const e=this.selectedPlan.tour.map((i,r)=>{const n=[i.act[0]],o=new Set;for(let c=1;c<i.act.length;c++)i.leg[c-1].shipmentsOnBoard=[...o],n.push(i.leg[c-1]),n.push(i.act[c]),i.act[c].$type=="pickup"&&i.act[c].$shipmentId&&o.add(i.act[c].$shipmentId),i.act[c].$type=="delivery"&&i.act[c].$shipmentId&&o.delete(i.act[c].$shipmentId);const l=i.leg.filter(c=>c.route&&c.route.length).map(c=>{const p=c.shipmentsOnBoard.map(u=>this.shipmentLookup[u]),h=p.reduce((u,d)=>u+parseFloat(d?.$size||0),0);return{shipmentsOnBoard:p,totalSize:h,links:c.route?c.route.split(" "):[]}});return{vehicleId:i.$vehicleId,tourId:i.$tourId,plan:n,legs:l,tourNumber:0,carrier:s.$resourceId}});return e.sort((i,r)=>v(i.vehicleId,r.vehicleId)),e.forEach((i,r)=>i.tourNumber=r),e}else return[]},processLogisticChains(s){this.lspShipmentHubChains=[],this.lspShipmentDirectChains=[];let t=this.lsps.find(r=>r.$id===this.selectedLsp);for(let r=0;r<t.LspPlans.LspPlan.length;r++)t.LspPlans.LspPlan[r].$selected=="true"&&(this.lspPlan=t.LspPlans.LspPlan[r]);let e=0;for(let r=0;r<this.lspPlan.shipmentPlans.shipmentPlan.length;r++){let n=s.find(o=>o.$id==this.lspPlan.shipmentPlans.shipmentPlan[r].$shipmentId);if(n)try{let o={isDirectChain:!0,hubs:[],from:n.$from,to:n.$to,fromX:.5*(this.links[n.$from][0]+this.links[n.$from][2]),fromY:.5*(this.links[n.$from][1]+this.links[n.$from][3]),toX:.5*(this.links[n.$to][0]+this.links[n.$to][2]),toY:.5*(this.links[n.$to][1]+this.links[n.$to][3]),chainId:this.lspPlan.shipmentPlans.shipmentPlan[r].$chainId,route:[],color:0,shipmentId:n.$id};if(o.chainId.includes("direct"))this.lspShipmentDirectChains.push(o);else if(o.chainId.includes("hub")){o.isDirectChain=!1;for(let l=0;l<this.lspPlan.shipmentPlans.shipmentPlan[r].element.length;l++){let a=t.resources.hub.find(c=>c.$id==this.lspPlan.shipmentPlans.shipmentPlan[r].element[l].$resourceId);if(a){let c={id:this.lspPlan.shipmentPlans.shipmentPlan[r].element[l].$resourceId,location:a.$location,locationX:.5*(this.links[a.$location][0]+this.links[a.$location][2]),locationY:.5*(this.links[a.$location][1]+this.links[a.$location][3])};o.hubs.push(c)}}o.route.push([o.fromX,o.fromY]),o.hubs.forEach(l=>{o.route.push([l.locationX,l.locationY])}),o.route.push([o.toX,o.toY]),o.color=this.rgb[(3+o.route.length)%this.rgb.length],this.lspShipmentHubChains.push(o)}}catch{console.log(n.$id+": can't be parsed: links missing, plan not parsed, etc"),e+=1}}return e&&this.$emit("error",`Warning: ${e} of ${this.lspPlan.shipmentPlans.shipmentPlan.length} shipments could not be parsed.`),{hubsChains:this.lspShipmentHubChains,directChains:this.lspShipmentDirectChains}},processShipments(s){this.shipmentLookup={};let t={};if(this.lsps.forEach(o=>{o.resources.carrier.find(l=>l.$id==s.$id)&&(t=o)}),!t.shipments?.shipment?.length)return[];this.carriers.forEach(o=>{o.$id==s.$id});const e=t.LspPlans.LspPlan.find(o=>o.$selected=="true"),i=[];e.shipmentPlans.shipmentPlan.forEach(o=>{o.element.forEach(l=>{l.$resourceId==s.$id&&i.push(o.$shipmentId)})});let r=[];[...new Set(i)].forEach(o=>{t.shipments.shipment.find(l=>{l.$id==o&&r.push(l)})}),r=r.sort((o,l)=>v(o.$id,l.$id));try{r.forEach(o=>{o.fromX=.5*(this.links[o.$from][0]+this.links[o.$from][2]),o.fromY=.5*(this.links[o.$from][1]+this.links[o.$from][3]),o.toX=.5*(this.links[o.$to][0]+this.links[o.$to][2]),o.toY=.5*(this.links[o.$to][1]+this.links[o.$to][3]),this.shipmentLookup[o.$id]=o})}catch{}return r},addToSet(s,t){Array.from(s).some(i=>JSON.stringify(i)===JSON.stringify(t))||s.add(t)},buildRouteFromUrl(){const s=this.$route.params;if(!s.project||!s.pathMatch){console.log("I CANT EVEN: NO PROJECT/PARHMATCH");return}const t=1+s.pathMatch.lastIndexOf("/"),e=s.pathMatch.substring(0,t),i=s.pathMatch.substring(t);this.myState.subfolder=e,this.myState.yamlConfig=i},async getVizDetails(){if(this.config){this.vizDetails=Object.assign({},this.config);return}if(this.yamlConfig?.endsWith("yaml")||this.yamlConfig?.endsWith("yml"))try{const i=this.yamlConfig.indexOf("/")>-1?this.yamlConfig:this.subfolder+"/"+this.yamlConfig,r=await this.fileApi.getFileText(i);this.vizDetails=D.parse(r);return}catch(i){console.log("failed"+i);const r=i;this.fileSystem.needPassword&&r.status===401?m.commit("requestLogin",this.fileSystem.slug):this.$emit("error",""+i);return}const s=this.myState.yamlConfig.substring(0,15+this.myState.yamlConfig.indexOf("carriers")),{files:t}=await this.fileApi.getDirectory(this.myState.subfolder);let e=this.myState.yamlConfig.replaceAll("carriers","network");if(t.indexOf(e)==-1){const i=t.filter(r=>r.indexOf("network")>-1);i.length?e=i[0]:(this.myState.statusMessage="No road network found.",e="")}this.vizDetails={lsps:this.yamlConfig,network:e,carriers:"",title:s,description:"",center:this.vizDetails.center,projection:"",thumbnail:"",colors:{}}},async setMapCenter(){let s=0,t=0,e=0;if(this.vizDetails.center)typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number)),t=this.vizDetails.center[0],e=this.vizDetails.center[1];else if(!this.vizDetails.center){if(this.data=Object.entries(this.links),!this.data.length)return;const i=this.data.length/2,r=4096;for(let n=0;n<i;n+=r)t+=this.data[n*2][1][0],e+=this.data[n*2+1][1][1],s++;t=t/s,e=e/s}t&&e&&this.$store.commit("setMapCamera",{longitude:t,latitude:e,zoom:9,bearing:0,pitch:0,jump:!1})},handleClick(s){console.log("CLICK!",s),s||this.clickedEmptyMap(),s?.type=="depot"&&this.clickedDepot(s),s?.type=="leg"&&this.clickedLeg(s)},clickedDepot(s){const t=Object.values(s.vehicles).map(e=>e.$id);this.selectedTours=[],this.shownShipments=[];for(const e of this.lspChainToursAll)t.includes(e.vehicleId)&&(this.handleSelectTour(e),this.shipmentIdsInTour.forEach(i=>{this.shownShipments.push(this.shipmentLookup[i])}))},clickedLeg(s){s?.tour&&this.handleSelectTour(s?.tour)},clickedEmptyMap(){},updateLegendColors(){},async loadLSPS(){const s=await this.loadFileOrGzippedFile(this.vizDetails.lsps);return s?(await P(s,{alwaysArray:["lsps.lsp","lsps.lsp.resources.carrier","lsps.lsp.resources.hub","lsps.lsp.shipments.shipment","lsps.lsp.LspPlans.LspPlan","lsps.lsp.LspPlans.LspPlan.logisticChains.logisticChain","lsps.lsp.LspPlans.LspPlan.logisticChains.logisticChain.logisticChainElement","lsps.lsp.LspPlans.LspPlan.shipmentPlans.shipmentPlan","lsps.lsp.LspPlans.LspPlan.shipmentPlans.shipmentPlan.element"]})).lsps.lsp.sort((i,r)=>v(i.$id,r.$id)):[]},async loadLinksCsv(){const s=await this.loadFileOrGzippedFile("output_links.csv.gz");return s&&[]},async loadCarriers(){var s=[];this.lsps.forEach(r=>{r.resources.carrier.forEach(n=>{s.includes(n)||s.push(n)})});const t=await this.loadFileOrGzippedFile("output_carriers.xml.gz");if(!t)return console.log("can't find carriers"),[];var i=(await P(t,{alwaysArray:["carriers.carrier","carriers.carrier.capabilities.vehicles.vehicle","carriers.carrier.plan.tour","carriers.carrier.shipments.shipment","carriers.carrier.services.service"]})).carriers.carrier.sort((r,n)=>v(r.$id,n.$id));return s.forEach(r=>{if(i.filter(o=>o.$id===r.$id).length==0){let o={$id:r.$id,attributes:{},capabilities:{},plans:{},services:{}};i.push(o)}}),i},async loadAvroRoadNetwork(){console.log("LOADING AVRO:",this.vizDetails.network);const s=`${this.subfolder}/${this.vizDetails.network}`,t=await this.fileApi.getFileBlob(s),e=await new Promise((i,r)=>{const n=[];B.createBlobDecoder(t).on("metadata",o=>{}).on("data",o=>{n.push(o)}).on("end",()=>{i(n)})});return console.log(e[0]),e[0]},async loadNetwork(){if(this.myState.statusMessage="Loading network...",this.vizDetails.network.indexOf(".xml.")>-1||this.vizDetails.network.endsWith(".avro")){const s=await this.myDataManager.getRoadNetwork(this.vizDetails.network,this.subfolder,this.vizDetails,null,!0);this.vizDetails.projection="EPSG:4326",this.myState.statusMessage="Building network link table";const t={};return s.linkId.forEach((e,i)=>{t[e]=[s.source[i*2],s.source[i*2+1],s.dest[i*2],s.dest[i*2+1]]}),t}else if(this.vizDetails.network.indexOf(".avro")>-1){this.avroNetwork=await this.loadAvroRoadNetwork();const s={};if(this.avroNetwork){const t=this.avroNetwork?.nodeCoordinates;this.avroNetwork.linkId.forEach((e,i)=>{const r=2*this.avroNetwork.from[i],n=2*this.avroNetwork.to[i];s[e]=[t[r],t[1+r],t[n],t[1+n]]})}return this.vizDetails.projection="EPSG:4326",console.log(s[6e3]),s}else return await this.fileApi.getFileJson(this.myState.subfolder+"/"+this.vizDetails.network)},async fetchNetwork(s,t){return new Promise((e,i)=>{const r=new R;try{r.postMessage({filePath:s,fileSystem:this.fileSystem,vizDetails:t}),r.onmessage=n=>{if(n.data.promptUserForCRS){let o=prompt("Enter the coordinate reference system, e.g. EPSG:25832")||"EPSG:31468";Number.isFinite(parseInt(o))&&(o=`EPSG:${o}`),r.postMessage({crs:o});return}if(n.data.status){this.myState.statusMessage=""+n.data.status;return}r.terminate(),n.data.error&&(console.error(n.data.error),m.commit("error",n.data.error),this.myState.statusMessage=n.data.error,i(n.data.error)),e(n.data.links)}}catch(n){r.terminate(),console.error(n),i(n)}})},toggleLoaded(s){this.isLoaded=s},rotateColors(){localStorage.setItem("plugin/agent-animation/colorscheme",this.globalState.isDarkMode?_.DarkMode:_.LightMode)},async loadFileOrGzippedFile(s){let t=`${this.subfolder}/${s}`;try{if(t.indexOf("*")>-1||t.indexOf("?")>-1){const r=t.substring(1+t.lastIndexOf("/")),n=t.substring(0,t.lastIndexOf("/")),{files:o}=await this.fileApi.getDirectory(n),l=x(o,r);if(l.length==0)throw Error(`No files matched "${r}"`);if(l.length>1)throw Error(`More than one file matched "${r}": ${l}`);t=`${n}/${l[0]}`}let i="";if(t.endsWith("xml")||t.endsWith("gz")){const n=await(await this.fileApi.getFileBlob(t)).arrayBuffer(),o=await z(n);return new TextDecoder("utf-8").decode(o)}}catch{}const e=`Error loading ${t}`;return m.commit("error",e),this.myState.statusMessage=e,""},selectDropdown(){this.dropdownIsActive=!this.dropdownIsActive},selectPlan(s){for(let t=0;t<this.plans.length;t++)this.plans[t].$selected="false";s.$selected="true",this.selectedPlanIndex=this.plans.indexOf(s),this.selectedTours=[],this.selectDropdown(),this.selectedPlan=s},getFirstCarrierFromSelectedLsp(s){return s.LspPlans.LspPlan.find(e=>e.$selected=="true").logisticChains.logisticChain[0].logisticChainElement[0].$resourceId}},async mounted(){if(m.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.subfolder=this.subfolder,this.yamlConfig||this.buildRouteFromUrl(),await this.getVizDetails(),this.thumbnail)return;this.showHelp=!1,this.updateLegendColors();let s=this.vizDetails.title||"Logistic Viewer";this.$emit("title",s),this.myState.statusMessage="Loading carriers...",await this.$nextTick();try{this.lsps=await this.loadLSPS(),this.carriers=await this.loadCarriers()}catch(t){this.lsps||this.$emit("error","Error loading LSP:"+t),this.carriers||this.$emit("error","Error loading carriers:"+t);return}await this.$nextTick();try{this.links=await this.loadNetwork()}catch(t){this.$emit("error","Error loading network: "+t);return}this.setMapCenter(),this.myState.statusMessage="",this.lsps.length&&this.handleSelectLsp(this.lsps[0],!1,null),this.lspShipmentHubChains.length>0?this.activeTab="lspShipmentChains":this.activeTab="shipments",this.lspChainTours.length&&this.selectAllTours(),this.selectedCarrier=this.getFirstCarrierFromSelectedLsp(this.lsps[0]);try{this.backgroundLayers=new Y({vizDetails:this.vizDetails,fileApi:this.fileApi,subfolder:this.subfolder}),await this.backgroundLayers.initialLoad()}catch{this.$emit("error","Error loading background layers")}},beforeDestroy(){this.myState.isRunning=!1,m.commit("setFullScreen",!1),this.$store.commit("setFullScreen",!1)}});var ot=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("div",{staticClass:"carrier-viewer",class:{"hide-thumbnail":!t.thumbnail},attrs:{oncontextmenu:"return false"}},[e("div",{staticClass:"container-1",on:{mousemove:t.dividerDragging,mouseup:t.dividerDragEnd}},[e("div",{staticClass:"main-panel"},[t.vizDetails.projection&&!t.thumbnail?e("deck-map",{staticClass:"anim",attrs:{activeTab:t.activeTab,bgLayers:t.backgroundLayers,carrierServices:t.carrierServicesAll,center:t.vizDetails.center,colors:t.vizDetails.colors||{},dark:t.globalState.isDarkMode,depots:t.shownDepots,hubLocation:t.hubLocation,hubName:t.hubName,legs:t.shownLegs,lspShipmentChains:t.lspShipmentChains,numSelectedTours:t.selectedTours.length,onClick:t.handleClick,projection:t.vizDetails.projection,settings:t.vizSettings,shipments:t.shownShipments,showCompleteHubChain:t.showCompleteHubChain,showHub:t.showHub,stopActivities:t.stopActivities,tourHubs:t.tourHubs,viewId:t.linkLayerId}}):t._e(),t.thumbnail?t._e():e("ZoomButtons",{attrs:{corner:"top-left"}}),t.myState.statusMessage?e("div",{staticClass:"xmessage"},[t._v(t._s(t.myState.statusMessage))]):t._e()],1),e("div",{staticClass:"dragger",on:{mousedown:t.dividerDragStart,mouseup:t.dividerDragEnd,mousemove:function(i){return i.stopPropagation(),t.dividerDragging.apply(null,arguments)}}}),e("div",{staticClass:"right-panel",style:{width:`${t.legendSectionWidth}px`},attrs:{darkMode:!0}},[t.lsps.length?e("h3",{staticStyle:{"margin-left":"0.25rem"}},[t._v(t._s("Service Providers"))]):t._e(),e("div",{staticClass:"lsp-list"},t._l(t.lsps,function(i){return e("div",{key:i.$id,staticClass:"lsp",class:{selected:i.$id===t.selectedLsp},on:{click:function(r){return t.handleSelectLspFromList(i)}}},[e("div",{staticClass:"lsp-title"},[t._v(t._s(i.$id))])])}),0),e("h4",[t._v(t._s(t.selectedLsp||"Details"))]),t.selectedLsp?e("b-field",{staticClass:"detail-buttons",attrs:{size:"is-small"}},[t.checkIfDirectChain()?e("b-radio-button",{attrs:{"native-value":"shipments",size:"is-small",type:"is-warning"},nativeOn:{click:function(i){return t.handleSelectCarrier(t.lspCarrier,!1,"")}},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("Shipment Chains")))])]):t._e(),t.checkIfHubChain()?e("b-radio-button",{attrs:{"native-value":"lspShipmentChains",size:"is-small",type:"is-warning"},nativeOn:{click:function(i){return t.handleSelectCarrier(t.lspCarrier,!1,"")}},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("Shipment Chains")))])]):t._e(),e("b-radio-button",{staticStyle:{},attrs:{"native-value":"lspTours",size:"is-small",type:"is-warning"},nativeOn:{click:function(i){return t.handleSelectLspButton(t.selectedLsp)}},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("LSP Tours")))])])],1):t._e(),e("br"),e("br"),t.activeTab=="lspTours"||t.activeTab=="tours"?e("h6",[e("b",[t._v("*All Carriers shown. Please select individual Carrier to view its specific tours.")])]):t._e(),e("br"),t.lsps.length?e("h3",{staticStyle:{"margin-left":"0.25rem"}},[t._v(t._s("Carriers"))]):t._e(),e("div",{staticClass:"carrier-list",attrs:{"data-testid":"carrier-list"}},[e("h5",{staticStyle:{"font-weight":"bold"}},[t._v(t._s("Direct Chain Carriers:"))]),t._l(t.lspCarriers,function(i){return e("div",{key:i,staticClass:"carrier",class:{selected:i==t.selectedCarrier},on:{click:function(r){return t.handleSelectCarrier(i,!0,"direct")}}},[e("div",{staticClass:"carrier-title"},[t._v(t._s(i))])])}),e("br"),e("h5",{staticStyle:{"font-weight":"bold"}},[t._v(t._s("Hub Chain Carriers:")),t._l(t.allHubChains,function(i){return e("div",{key:i.chainIndex,staticClass:"carrierHub"},[e("div",{staticClass:"carrierHubTitle",class:{selected:t.lspHubChainTours===t.selectedLspHubChainTours},staticStyle:{"font-weight":"bold"},attrs:{name:""},on:{click:function(r){return t.getCarrierServicesForHubChain(t.selectedLsp,i.chainIndex)}}},[t._v(t._s("Hub Chain "+i.chainIndex+":"))]),t._l(i.chainIds,function(r){return e("div",{key:r,staticClass:"carrier",class:{selected:r===t.selectedCarrier},on:{click:function(n){return t.handleSelectCarrier(r,!0,"")}}},[e("div",{staticClass:"carrier-title"},[t._v(t._s(r))])])})],2)})],2)],2),e("h4",[t._v(t._s(t.selectedCarrier||"Details"))]),e("div",{staticClass:"switchbox"},[e("div",{staticClass:"switches"},[(t.activeTab=="lspTours"||t.activeTab=="tours")&&t.selectedCarrier!=""?e("b-switch",{model:{value:t.vizSettings.showEachCarrierTour,callback:function(i){t.$set(t.vizSettings,"showEachCarrierTour",i)},expression:"vizSettings.showEachCarrierTour"}},[e("span",{domProps:{innerHTML:t._s(t.$t("Carrier Tours"))}})]):t._e()],1)]),e("div",{staticClass:"detail-area"},[t.activeTab=="lspShipmentChains"?e("div",{staticClass:"lspShipmentChains"},[e("span",[t._v(t._s(t.$t("Lsp Shipments"))+": "+t._s(t.lspShipmentHubChains.length))]),t._l(t.lspShipmentHubChains,function(i,r){return e("div",{key:`${r}-${i.shipmentId}`,staticClass:"leaf tour",class:{selected:i==t.selectedLSPChain},on:{click:function(n){return t.handleSelectShipmentChain(i)}}},[t._v(t._s(`${i.shipmentId}: ${i.chainId}`))])})],2):t._e(),t.activeTab=="shipments"?e("div",{staticClass:"lspShipmentChains"},[e("span",[t._v(t._s(t.$t("Shipments"))+": "+t._s(t.shipments.length))]),t._l(t.shipments,function(i,r){return e("div",{key:`${r}-${i.$id}`,staticClass:"leaf tour",class:{selected:i==t.selectedShipment},on:{click:function(n){return t.handleSelectShipment(i)}}},[t._v(t._s(`${i.$id}`))])})],2):t._e(),t.activeTab=="lspTours"&&t.selectedCarrier&&t.hubLocation.length==0?e("div",{staticClass:"tours"},[e("span",[t._v(t._s(t.$t("tours"))+": "+t._s(t.carrierTours[0].length))]),t._l(t.carrierTours[0],function(i,r){return e("div",{key:`${r}-${i.$id}`,staticClass:"leaf tour",class:{selected:t.selectedTours.includes(i)},on:{click:function(n){return t.handleSelectTour(i)}}},[i.tourId?e("div",{staticClass:"carrier-tours"},[i.tourId&&t.vizSettings.showEachCarrierTour?e("div",{style:{backgroundColor:t.getTourColor(i.tourId,i.tourNumber)},attrs:{id:"tourColor"}}):t._e(),i.tourId&&!t.vizSettings.showEachCarrierTour?e("div",{style:{backgroundColor:t.getLspTourColor(i)},attrs:{id:"tourColor"}}):t._e(),i.tourId?e("div",{attrs:{id:"tour"}},[t._v(t._s(i.tourId)+": "+t._s(`${i.vehicleId}`))]):e("div",[t._v(t._s(`${i.vehicleId}`))])]):t._e()])})],2):t._e(),t.activeTab=="lspTours"&&!t.selectedCarrier||t.globalHubChainBoolean?e("div",{staticClass:"lsptours"},[e("span",[t._v(t._s(t.$t("tours"))+": "+t._s(t.lspToursAll.length))]),t._l(t.lspToursAll,function(i,r){return e("div",{key:`${r}-${i.$id}`,staticClass:"leaf tour",class:{selected:t.selectedTours.includes(i)},on:{click:function(n){return t.handleSelectTour(i)}}},[i.tourId?e("div",{staticClass:"lsp-tours"},[i.tourId?e("div",{style:{backgroundColor:t.getLspTourColor(i)},attrs:{id:"tourColor"}}):t._e(),i.tourId?e("div",[t._v(t._s(i.tourId)+": "+t._s(`${i.vehicleId}`))]):e("div",[t._v(t._s(`${i.vehicleId}`))])]):t._e()])})],2):t._e()]),e("div",{staticClass:"switchbox"},[t.activeTab=="shipments"||t.activeTab=="lspShipmentChains"?e("div",{staticClass:"switches"},[e("p",[t._v(t._s(t.$t("scaleSize")))]),t.activeTab=="lspShipmentChains"?e("b-slider",{staticClass:"slider",attrs:{tooltip:!1,type:"is-link",size:"is-small"},model:{value:t.vizSettings.scaleFactor,callback:function(i){t.$set(t.vizSettings,"scaleFactor",i)},expression:"vizSettings.scaleFactor"}}):t._e(),t.activeTab=="shipments"?e("b-slider",{staticClass:"slider",attrs:{tooltip:!1,type:"is-link",size:"is-small"},model:{value:t.vizSettings.scaleFactorShipments,callback:function(i){t.$set(t.vizSettings,"scaleFactorShipments",i)},expression:"vizSettings.scaleFactorShipments"}}):t._e()],1):t._e(),t.activeTab=="tours"||t.activeTab=="lspTours"?e("div",{staticClass:"addedSpace"},[e("br")]):t._e(),t.activeTab=="tours"||t.activeTab=="lspTours"?e("div",{staticClass:"switches"},[e("b-switch",{model:{value:t.vizSettings.shipmentDotsOnTourMap,callback:function(i){t.$set(t.vizSettings,"shipmentDotsOnTourMap",i)},expression:"vizSettings.shipmentDotsOnTourMap"}},[e("span",{domProps:{innerHTML:t._s(t.$t("shipmentDots"))}})]),e("b-switch",{model:{value:t.vizSettings.simplifyTours,callback:function(i){t.$set(t.vizSettings,"simplifyTours",i)},expression:"vizSettings.simplifyTours"}},[e("span",{domProps:{innerHTML:t._s(t.$t("flatten"))}})])],1):t._e()])],1)])])},nt=[],lt=L(rt,ot,nt,!1,null,"312f1c2e");const Rt=lt.exports;export{Rt as default};
