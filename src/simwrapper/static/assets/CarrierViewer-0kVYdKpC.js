import{d as k,n as S,g as p,m as z,C as w,R as _}from"./index-BwIP81FD.js";import{d as A}from"./index-CVL_6l40.js";import{r as M}from"./index-BGlm3aec.js";import{Y as P}from"./index-DFKcNkqO.js";import{f as O,g as j,p as E,n as u,a as F,H as B}from"./HTTPFileSystem-DVIUrFO_.js";import{c as R}from"./index-CFPivVNZ.js";import{P as W,L as H}from"./LegendColors-C8n4a03Q.js";import{Z as N}from"./ZoomButtons-D_WYIzIx.js";import{W as U,D as X}from"./DashboardDataManager-BxmipbOK.js";import{P as C}from"./PathOffsetLayer-CfPE7UJb.js";import{M as Y}from"./mapbox-overlay-HS93bZkL.js";import{A as D}from"./arc-layer-utQsdbjp.js";import{T as I,S as f}from"./geojson-layer-DohWtVq3.js";import{B as q}from"./BackgroundLayers-DU3ROBLH.js";import"./fxp-DjoqftHf.js";import"./layer-extension-LbH36Bf-.js";import"./layer-T9N9JmIf.js";import"./group-hI8ly2Wr.js";import"./index-_doEQLKC.js";import"./Coords-C-Mhj230.js";import"./turf.es-BzqbG201.js";import"./ColorsAndWidths-CPY1BpxV.js";import"./cubehelix-BzW-tINw.js";import"./threshold-CrWFx_nu.js";import"./rainbow-DNS2KC2A.js";import"./geo-utils-B2AlDn9k.js";import"./sequential-pySAYR1V.js";import"./pow-RbZoge3Z.js";import"./precisionRound-CRsIqO1V.js";const G=k({name:"MapTooltip",components:{},props:{hoverInfo:{type:Object,required:!0}},data(){return{tooltipType:0,activity:"",stop:{}}},watch:{hoverInfo(){this.renderTooltip(this.hoverInfo)}},methods:{renderTooltip(s){console.log({hoverInfo:s}),this.tooltipType=0;const{object:t}=s;return t?t?.type=="pickup"?this.renderActivityTooltip(s,"pickup"):t?.type=="delivery"?this.renderActivityTooltip(s,"delivery"):t?.type=="service"?this.renderServicesTooltip(s,"service"):t?.color?this.renderLegTooltip(s):t?.type=="depot"?null:this.renderStopTooltip(s):null},renderActivityTooltip(s,t){this.tooltipType=1,this.activity=t},renderServicesTooltip(s,t){this.tooltipType=2},renderLegTooltip(s){this.tooltipType=3},renderStopTooltip(s){this.tooltipType=2;const{object:t,x:e,y:i}=s,o=t.visits.length,r=t.visits.reduce((h,a)=>h+a.pickup.length,0),n=t.visits.reduce((h,a)=>h+a.delivery.length,0);this.stop={numPickupsAndDeliveries:r+n,overview:{visits:o,pickups:r,deliveries:n}}}}});var V=function(){var t=this,e=t._self._c;return t._self._setupProxy,t.tooltipType?e("div",{staticClass:"flex-col"},[t.tooltipType==1?e("div",{staticClass:"tooltip"},[e("table",{staticStyle:{"max-width":"30rem","font-size":"0.8rem"}},[e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"right","padding-right":"0.5rem","padding-top":"0.2rem"}},[t._v(t._s(t.activity)+":")]),e("td",{staticStyle:{"padding-top":"0.2rem"}},[t._v(t._s(t.hoverInfo.object.shipmentIds.join(", ")))])])])])]):t._e(),t.tooltipType==2?e("div",{staticClass:"tooltip flex-col"},[e("b",[t._v(t._s(t.hoverInfo.object?.$id))]),e("h5",{staticStyle:{"padding-top":"0.2rem"}},[t._v("Capacity Demand: "+t._s(t.hoverInfo.object.$capacityDemand))])]):t._e(),t.tooltipType==3?e("div",{staticClass:"tooltip flex-col"},[e("b",[t._v(t._s(t.hoverInfo.object?.tour?.vehicleId))]),e("p",[t._v("Leg # "+t._s(1+t.hoverInfo.object?.count))]),e("p",[t._v("Shipments on board: "+t._s(t.hoverInfo.object?.shipmentsOnBoard?.length))]),e("p",[t._v("Total size: "+t._s(t.hoverInfo.object?.totalSize))])]):t._e(),t.tooltipType==4?e("div",{staticClass:"tooltip flex-col"},[e("table",{staticStyle:{"font-size":"0.8rem"}},[e("tbody",[t._l(Object.keys(t.stop.overview),function(i){return e("tr",{key:i},[e("td",{staticStyle:{"text-align":"right","padding-right":"0.5rem"}},[t._v(t._s(i)+":")]),e("td",[e("b",[t._v(t._s(t.stop.overview[i]))])])])}),t._l(Object.keys(t.stop.numPickupsAndDeliveries==1?t.hoverInfo.object.details:[]),function(i){return e("tr",{key:i},[e("td",{staticStyle:{"text-align":"right","padding-right":"0.5rem","padding-top":"0.2rem"}},[t._v(t._s(i.slice(1))+":")]),e("td",{staticStyle:{"padding-top":"0.2rem"}},[t._v(t._s(t.hoverInfo.object.details[t.a]))])])})],2)])]):t._e()]):t._e()},J=[],Z=S(G,V,J,!1,null,null);const K=Z.exports,x="/",y={pickup:[0,150,255],delivery:[240,0,60]},Q=k({name:"MyDeckComponent",components:{MapTooltip:K},props:{activeTab:{type:String,required:!0},bgLayers:{type:Object},dark:{type:Boolean,required:!0},depots:{type:Array},legs:{type:Array,required:!0},mapIsIndependent:{type:Boolean},numSelectedTours:{type:Number,required:!0},onClick:{type:Function},services:{type:Boolean,required:!0},settings:{type:Object,required:!0},shipments:{type:Array,required:!0},stopActivities:{type:Array,required:!0},viewId:{type:Number,required:!0}},data(){return{mymap:null,deckOverlay:null,globalState:p.state,tip:null,tooltipStyle:{position:"absolute",padding:"4px 8px",display:"block",top:0,left:0,color:this.dark?"#ccc":"#223",backgroundColor:this.dark?"#2a3c4f":"white",zIndex:2e4}}},watch:{layers(){this.deckOverlay?.setProps({layers:this.layers})},dark(){const s=`${x}map-styles/${this.globalState.isDarkMode?"dark":"positron"}.json`;this.mymap?.setStyle(s)},"globalState.viewState"(){if(this.mapIsIndependent)return;const s=this.globalState.viewState,t=this.mymap?.getCenter();(s.longitude!==t.lng||s.latitude!==t.lat||s.zoom!==this.mymap?.getZoom()||s.pitch!==this.mymap?.getPitch()||s.bearing!==this.mymap?.getBearing())&&this.mymap?.jumpTo(Object.assign({center:{lng:s.longitude,lat:s.latitude}},s))}},computed:{layers(){const s=[],t=this.bgLayers?.layers();if(t&&s.push(...t.layersBelow),this.activeTab=="tours"&&(s.push(new C({id:"shipmentLocationDashedLine",data:this.stopActivities,getPath:e=>[e.ptFrom,e.ptTo],getColor:[128,128,128],getOffset:2,opacity:1,getWidth:this.settings.scaleFactor/2,widthMinPixels:3,widthMaxPixels:200,jointRounded:!0,shadowEnabled:!1,pickable:!1,autoHighlight:!1,highlightColor:[255,255,255],parameters:{depthTest:!1},getDashArray:[3,2],dashJustified:!0,extensions:[new W({dash:!0})]})),this.settings.simplifyTours?s.push(new D({id:"leg-arcs",data:this.legs,getSourcePosition:e=>e.points[0],getTargetPosition:e=>e.points[e.points.length-1],getSourceColor:e=>e.color,getTargetColor:e=>e.color,getWidth:2+(this.settings.scaleFactor-0)*38/100,getHeight:.5,widthMinPixels:2,widthMaxPixels:40,widthUnits:"pixels",opacity:.9,parameters:{depthTest:!1},updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:150},pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],onHover:this.getTooltip})):s.push(new C({id:"deliveryroutes",data:this.legs,getPath:e=>e.points,getColor:e=>e.color,getWidth:3+(this.settings.scaleFactor-0)*37/100,getOffset:2,opacity:1,widthMinPixels:3,widthMaxPixels:40,widthUnits:"pixels",jointRounded:!0,shadowEnabled:!1,pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],parameters:{depthTest:!1},updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:150},onHover:this.getTooltip})),s.push(new I({id:"dest-labels",background:!0,data:this.stopActivities,backgroundPadding:this.numSelectedTours!==1?[2,1,2,1]:[3,2,3,1],getColor:[255,255,255],getBackgroundColor:e=>{const i=e.visits.reduce((r,n)=>r+n.pickup.length,0),o=e.visits.reduce((r,n)=>r+n.delivery.length,0);return i&&o?[0,0,255]:i?y.pickup:o?y.delivery:[240,130,0]},getPosition:e=>e.midpoint,getText:e=>e.label=="Depot"?e.label:this.numSelectedTours!==1?" ":`${e.label}`,getSize:e=>e.label=="Depot"?11:this.numSelectedTours!==1?4:11,getTextAnchor:"middle",getAlignmentBaseline:"center",opacity:1,noAlloc:!1,billboard:!0,sizeScale:1,pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],visible:this.settings.shipmentDotsOnTourMap,onHover:this.getTooltip}))),this.activeTab=="shipments"){s.push(new f({id:"deliveries",data:this.pickupsAndDeliveries.deliveries,getPosition:i=>i.coord,getFillColor:y.delivery,getRadius:3,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels",onHover:this.getTooltip})),s.push(new f({id:"pickups",data:this.pickupsAndDeliveries.pickups,getPosition:i=>i.coord,getFillColor:y.pickup,getRadius:2,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels",onHover:this.getTooltip}));const e=this.shipments.length>1?32:255;this.services?s.push(new f({id:"services",data:this.shipments,getPosition:i=>[i.toX,i.toY],getColor:[240,0,60,224],getRadius:4,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels",onHover:this.getTooltip})):s.push(new D({id:"shipments",data:this.shipments,getSourcePosition:i=>[i.fromX,i.fromY],getTargetPosition:i=>[i.toX,i.toY],getSourceColor:[0,228,255,e],getTargetColor:[240,0,60,224],getWidth:1+(this.settings.scaleFactor-0)*49/100,widthUnits:"pixels",getHeight:.5,opacity:.9,parameters:{depthTest:!1},widthMinPixels:1,widthMaxPixels:50,updateTriggers:{getWidth:[this.settings.scaleFactor]},transitions:{getWidth:200},onHover:this.getTooltip}))}return this.activeTab=="services"&&this.services&&s.push(new f({id:"services",data:this.shipments,getPosition:e=>[e.toX,e.toY],getColor:[240,0,60,224],getRadius:4,opacity:.9,parameters:{depthTest:!1},pickable:!0,radiusUnits:"pixels",onHover:this.getTooltip})),s.push(new I({id:"depots",data:this.depots,background:!0,backgroundPadding:[3,2,3,1],getColor:[255,255,255],getBackgroundColor:[0,150,240],getPosition:e=>e.midpoint,getText:e=>"Depot",getTextAnchor:"middle",getAlignmentBaseline:"center",getSize:11,opacity:1,noAlloc:!1,billboard:!0,sizeScale:1,pickable:!0,autoHighlight:!0,highlightColor:[255,255,255],onHover:this.getTooltip})),t&&s.push(...t.layersOnTop),s},pickupsAndDeliveries(){const s={},t={};return this.shipments.forEach(e=>{let i=`${e.fromX}-${e.fromY}`;s[i]||(s[i]={type:"pickup",shipmentIds:[],coord:[e.fromX,e.fromY]}),s[i].shipmentIds.push(e.$id),i=`${e.toX}-${e.toY}`,t[i]||(t[i]={type:"delivery",shipmentIds:[],coord:[e.toX,e.toY]}),t[i].shipmentIds.push(e.$id)}),{type:"activity",pickups:Object.values(s),deliveries:Object.values(t)}},widthScale(){let s=this.settings.scaleFactor;return s==0?1e-6:1/Math.pow(2,(100-s)/5-6)}},async mounted(){const s=`${x}map-styles/${this.globalState.isDarkMode?"dark":"positron"}.json`,t=`map-${this.viewId}`,e=this.globalState.viewState.center,i=this.globalState.viewState.zoom||8;this.mymap=new z.Map({center:e,zoom:i,container:t,style:s}),this.mymap.on("style.load",()=>{this.deckOverlay=new Y({layers:this.layers,interleaved:!0,onClick:this.handleClick}),this.mymap?.addControl(this.deckOverlay)}),this.mymap.on("move",this.handleMove)},beforeDestroy(){this.deckOverlay&&this.mymap?.removeControl(this.deckOverlay),this.mymap?.remove()},methods:{handleMove(){if(this.mapIsIndependent)return;const s=this.mymap?.getCenter(),t={latitude:s.lat,longitude:s.lng,center:s,zoom:this.mymap?.getZoom(),bearing:this.mymap?.getBearing(),pitch:this.mymap?.getPitch(),jump:!0};p.commit("setMapCamera",t)},getTooltip(s){const{x:t,y:e,object:i}=s;if(!i){this.tooltipStyle.display="none",this.tip=null;return}this.tip={...s},this.tooltipStyle.display="block",this.tooltipStyle.top=`${e+12}px`,this.tooltipStyle.left=`${t+12}px`},handleClick(s){this.onClick&&(s.object?this.onClick(s.object):this.onClick(null))}}});var tt=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("div",{staticClass:"deck-map flex-col"},[e("div",{staticClass:"map-container",attrs:{id:`map-${t.viewId}`}}),t.tip?e("MapTooltip",{staticClass:"deck-tooltip",style:t.tooltipStyle,attrs:{hoverInfo:t.tip}}):t._e()],1)},et=[],st=S(Q,tt,et,!1,null,null);const it=st.exports,ot={messages:{en:{carriers:"Carriers",vehicles:"VEHICLES",services:"SERVICES",shipments:"JOBS",jobs:"JOBS",tours:"TOURS",pickup:"Pickup",delivery:"Delivery",flatten:"Simple&nbsp;tours",shipmentDots:"Show shipments",scaleSize:"Widths",scaleFactor:"Width",service:"Service"},de:{carriers:"Unternehmen",vehicles:"FAHRZEUGE",services:"BETRIEBE",shipments:"AUFTRÄGE",jobs:"JOBS",tours:"TOUREN",pickup:"Abholung",delivery:"Lieferung",flatten:"Simple&nbsp;tours",shipmentDots:"Show shipments",scaleSize:"Widths",scaleFactor:"Width",service:"Betrieb"}}};u.insensitive=!0;const rt=k({name:"CarrierPlugin",i18n:ot,components:{DeckMapComponent:it,LegendColors:H,ToggleButton:A.ToggleButton,ZoomButtons:N},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){return{linkLayerId:Math.floor(1e12*Math.random()),vizSettings:{simplifyTours:!1,scaleShipmentSizes:!0,shipmentDotsOnTourMap:!0,scaleFactor:0},vizDetails:{network:"",carriers:"",projection:"",title:"",description:"",thumbnail:"",services:!1,center:null},myState:{statusMessage:"",isRunning:!1,subfolder:"",yamlConfig:"",thumbnail:!0,data:[]},isDraggingDivider:0,dragStartWidth:250,legendSectionWidth:275,myDataManager:this.datamanager||new X(this.root,this.subfolder),searchTerm:"",searchEnabled:!1,backgroundLayers:null,globalState:p.state,isLoaded:!0,showHelp:!1,activeTab:"shipments",speedStops:[-10,-5,-2,-1,-.5,-.25,0,.25,.5,1,2,5,10],speed:1,legendBits:[],links:null,toggleTours:!0,toggleVehicles:!0,toggleShipments:!0,toggleServices:!0,detailContent:"",data:null,carriers:[],vehicles:[],shipments:[],shipmentLookup:{},services:[],stopActivities:[],tours:[],plans:[],shownShipments:[],shipmentIdsInTour:[],depots:[],shownDepots:[],shownLegs:[],selectedCarrier:"",selectedTours:[],selectedPlan:null,selectedPlanIndex:null,selectedShipment:null,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",vehicleLookup:[],vehicleLookupString:{},rgb:R({colormap:"phase",nshades:9,format:"rba"}).map(s=>s.slice(0,3)).reverse(),dropdownIsActive:!1}},computed:{fileApi(){return new B(this.fileSystem,p)},fileSystem(){const s=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(s.length===0)throw console.log("no such project"),Error;return s[0]},urlThumbnail(){return this.thumbnailUrl},textColor(){const s={text:"#3498db",bg:"#eeeef480"},t={text:"white",bg:"#181518aa"};return this.globalState.isDarkMode?t:s}},watch:{"$store.state.viewState"(){_[this.linkLayerId]&&_[this.linkLayerId]()},"globalState.isDarkMode"(){this.updateLegendColors()},async"globalState.authAttempts"(){console.log("AUTH CHANGED - Reload"),this.yamlConfig||this.buildRouteFromUrl(),await this.getVizDetails()}},methods:{dividerDragStart(s){this.isDraggingDivider=s.clientX,this.dragStartWidth=this.legendSectionWidth},dividerDragEnd(s){this.isDraggingDivider=0},dividerDragging(s){if(!this.isDraggingDivider)return;const t=this.isDraggingDivider-s.clientX;this.legendSectionWidth=Math.max(0,this.dragStartWidth+t)},handleSelectShipment(s){if(this.selectedShipment===s){if(this.selectedShipment=null,this.shownShipments=[],!this.selectedTours.length||this.selectedShipment==null){const t=this.carriers.filter(e=>e.$id==this.selectedCarrier);this.selectedCarrier="",this.handleSelectCarrier(t[0])}return}this.shownShipments=this.shipments.filter(t=>t.$id===s.$id),this.selectedShipment=s},processActivitiesInTour(s){const t=[];let e=0;const i={};let o=this.vehicles.filter(l=>l.$id===s.vehicleId)[0];const r=this.links[o.$depotLinkId];let n=[.5*(r[0]+r[2]),.5*(r[1]+r[3])],h=o.$depotLinkId;i[`L${o.$depotLinkId}`]={link:o.$depotLinkId,midpoint:n,visits:[{pickup:[],delivery:[],service:[]}],label:"",tour:s,details:{},ptFrom:[r[0],r[1]],ptTo:[r[2],r[3]]};for(const l of s.plan){if(!l.$shipmentId&&!l.$serviceId)continue;var a;if(l.$serviceId?(t.push(l.$serviceId),a=this.shipmentLookup[l.$serviceId]):(t.push(l.$shipmentId),a=this.shipmentLookup[l.$shipmentId]),!a)continue;const c=l.$type==="pickup"?a.$from:a.$to,m=[this.links[c][0],this.links[c][1]],v=[this.links[c][2],this.links[c][3]],$=[.5*(m[0]+v[0]),.5*(m[1]+v[1])],L=this.$t(l.$type),{from:ct,fromX:ht,fromY:pt,to:dt,toX:ut,toY:mt,id:gt,...T}=a,b={id:a.$id,type:L,count:e++,link:c,midpoint:$,label:"",tour:s,details:T,ptFrom:m,ptTo:v};if(c==h)i[`L${c}`].visits[i[`L${c}`].visits.length-1][l.$type].push(b);else if(`L${c}`in i){const g={pickup:[],delivery:[],service:[]};g[l.$type].push(b),i[`L${c}`].visits.push(g)}else{const g={pickup:[],delivery:[],service:[]};g[l.$type].push(b),i[`L${c}`]={link:c,midpoint:$,label:"",tour:s,details:T,ptFrom:m,ptTo:v,visits:[g]}}h=c}const d=Object.values(i);for(let l=0;l<d.length;l++)d[l].label=`${l}`;return d[0].label="Depot",{shipmentIdsInTour:t,stopActivities:d}},setupDepots(){const s={};this.vehicles.forEach(t=>{const e=t.$depotLinkId;let i=this.links[e];i&&(s[e]||(s[e]={type:"depot",link:t.$depotLinkId,midpoint:[.5*(i[0]+i[2]),.5*(i[1]+i[3])],coords:this.links[t.$depotLinkId],vehicles:{}}),s[e].vehicles[t.$id]=t)}),this.depots=Object.values(s),this.shownDepots=this.depots.slice(0)},selectAllTours(){this.selectedTours=[],this.shownLegs=[],this.stopActivities=[],this.shownDepots=[],this.shownShipments=this.shipments.slice(0);for(const s of this.tours){s.legs.forEach((e,i)=>this.addRouteToMap(s,e,i++));const t=this.processActivitiesInTour(s);this.stopActivities=this.stopActivities.concat(t.stopActivities),this.setupDepots()}},async handleSelectTour(s){if(!s.legs.length){console.log("No Route.");for(let o=0;o<s.plan.length;o++)if(s.plan[o].$shipmentId){const r=s.plan[o].$shipmentId,n=[this.shipmentLookup[r].$from,this.shipmentLookup[r].$to];s.legs.push({links:n})}this.vizSettings.simplifyTours=!0}if(this.selectedTours.includes(s)){this.selectedTours=this.selectedTours.filter(o=>o!==s),this.shownLegs=this.shownLegs.filter(o=>o.tour!==s),this.stopActivities=this.stopActivities.filter(o=>o.tour!==s),this.selectedTours.length||this.selectAllTours();return}this.selectedTours.length||(this.selectedTours=[],this.shownLegs=[],this.stopActivities=[],this.shownDepots=[]),this.selectedTours.push(s);const{shipmentIdsInTour:t,stopActivities:e}=this.processActivitiesInTour(s);this.shipmentIdsInTour=t;let i=0;for(const o of s.legs)this.addRouteToMap(s,o,i++);this.stopActivities=this.stopActivities.concat(e)},addRouteToMap(s,t,e){const i=[[this.links[t.links[0]][0],this.links[t.links[0]][1]]];for(const o of t.links){const r=i[i.length-1],n=[this.links[o][0],this.links[o][1]];(n[0]!==r[0]||n[1]!==r[1])&&i.push(n),i.push([this.links[o][2],this.links[o][3]])}this.shownLegs=this.shownLegs.concat([{tour:s,shipmentsOnBoard:t.shipmentsOnBoard,totalSize:t.totalSize,count:e,points:i,color:this.rgb[(3+s.tourNumber)%this.rgb.length],type:"leg"}])},handleSelectCarrier(s){if(this.dropdownIsActive=!1,!this.links)return;const t=s.$id;if(this.vehicles=[],this.shipments=[],this.services=[],this.tours=[],this.plans=[],this.shownShipments=[],this.shownDepots=[],this.selectedShipment=null,this.shipmentIdsInTour=[],this.stopActivities=[],this.shownLegs=[],this.selectedCarrier===t){this.selectedCarrier="";return}this.selectedCarrier=t;let e=s.capabilities.vehicles.vehicle||[];this.vehicles=e.sort((i,o)=>u(i,o)),this.setupDepots(),this.shipments=this.processShipments(s),s.services?.service?.length&&(this.services=s.services.service.sort((i,o)=>u(i.$id,o.$id))),this.tours=this.processTours(s),this.shownShipments=this.shipments,this.selectAllTours()},getAllPlans(s){if(s.plan!=null){this.plans.push(s.plan),this.selectedPlan=s.plan;return}if(s.plans!=null){if(s.plans.plan.length==null){this.plans.push(s.plans.plan),this.selectedPlan=s.plans.plan;return}this.plans=s.plans.plan;for(let t=0;t<s.plans.plan.length;t++){if(s.plans.plan[t].selected=="true"){this.selectedPlan=s.plans.plan[t];break}this.selectedPlan=s.plans.plan[t]}}},processTours(s){if(this.getAllPlans(s),!this.selectPlan||!this.plans.length)return[];Array.isArray(this.selectedPlan.tour)||(this.selectedPlan.tour=[this.selectedPlan.tour]);const t=this.selectedPlan.tour.map((e,i)=>{const o=[e.act[0]],r=new Set;for(let a=1;a<e.act.length;a++)e.leg[a-1].shipmentsOnBoard=[...r],o.push(e.leg[a-1]),o.push(e.act[a]),e.act[a].$type=="pickup"&&e.act[a].$shipmentId&&r.add(e.act[a].$shipmentId),e.act[a].$type=="delivery"&&e.act[a].$shipmentId&&r.delete(e.act[a].$shipmentId);const n=e.leg.filter(a=>a.route&&a.route.length).map(a=>{const d=a.shipmentsOnBoard.map(c=>this.shipmentLookup[c]),l=d.reduce((c,m)=>c+parseFloat(m?.$size||0),0);return{shipmentsOnBoard:d,totalSize:l,links:a.route?a.route.split(" "):[]}});return{vehicleId:e.$vehicleId,tourId:e.$tourId,plan:o,legs:n,tourNumber:0}});return t.sort((e,i)=>u(e.vehicleId,i.vehicleId)),t.forEach((e,i)=>e.tourNumber=i),t},processShipments(s){this.shipmentLookup={};var t=[];if(s.shipments?.shipment?.length)t=s.shipments.shipment.sort((e,i)=>u(e.$id,i.$id));else if(s.services?.service?.length)t=s.services.service.sort((e,i)=>u(e.$id,i.$id)),this.processServices(s,t);else return[];try{for(const e of t)e.fromX=.5*(this.links[e.$from][0]+this.links[e.$from][2]),e.fromY=.5*(this.links[e.$from][1]+this.links[e.$from][3]),e.toX=.5*(this.links[e.$to][0]+this.links[e.$to][2]),e.toY=.5*(this.links[e.$to][1]+this.links[e.$to][3]),this.shipmentLookup[e.$id]=e}catch{}return t},processServices(s,t){this.vizDetails.services=!0;try{for(const e of t)e.toX=.5*(this.links[e.$to][0]+this.links[e.$to][2]),e.toY=.5*(this.links[e.$to][1]+this.links[e.$to][3]),e.type="service",this.shipmentLookup[e.$id]=e}catch{}},buildRouteFromUrl(){const s=this.$route.params;if(!s.project||!s.pathMatch){console.log("I CANT EVEN: NO PROJECT/PARHMATCH");return}const t=1+s.pathMatch.lastIndexOf("/"),e=s.pathMatch.substring(0,t),i=s.pathMatch.substring(t);this.myState.subfolder=e,this.myState.yamlConfig=i},async getVizDetails(){if(this.config){this.vizDetails=Object.assign({},this.config);return}if(this.yamlConfig?.endsWith("yaml")||this.yamlConfig?.endsWith("yml"))try{const o=this.yamlConfig.indexOf("/")>-1?this.yamlConfig:this.subfolder+"/"+this.yamlConfig,r=await this.fileApi.getFileText(o);this.vizDetails=P.parse(r),this.vizDetails.title&&this.$emit("title",this.vizDetails.title);return}catch(o){console.log("failed"+o);const r=o;this.fileSystem.needPassword&&r.status===401?p.commit("requestLogin",this.fileSystem.slug):this.$emit("error",""+o);return}const s=this.myState.yamlConfig.substring(0,15+this.myState.yamlConfig.indexOf("carriers")),{files:t}=await this.fileApi.getDirectory(this.myState.subfolder);let e=this.myState.yamlConfig.replaceAll("carriers","network");if(t.indexOf(e)==-1){const o=t.filter(r=>r.indexOf("network")>-1);o.length?e=o[0]:(this.myState.statusMessage="No road network found.",e="")}this.vizDetails={network:e,carriers:this.yamlConfig,title:s,description:"",center:this.vizDetails.center,projection:"",thumbnail:"",services:!1},this.$emit("title","Carrier Explorer"),this.buildThumbnail()},async setMapCenter(){let s=0,t=0,e=0;if(this.vizDetails.center)typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number)),t=this.vizDetails.center[0],e=this.vizDetails.center[1];else if(!this.vizDetails.center){if(this.data=Object.entries(this.links),!this.data.length)return;const i=this.data.length/2,o=4096;for(let r=0;r<i;r+=o)t+=this.data[r*2][1][0],e+=this.data[r*2+1][1][1],s++;t=t/s,e=e/s}t&&e&&this.$store.commit("setMapCamera",{longitude:t,latitude:e,zoom:9,bearing:0,pitch:0,jump:!1})},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const s=await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail),t=await M.arraybuffer(s),e=F(t);e&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${e})`)}catch(s){console.error(s)}},handleClick(s){console.log("CLICK!",s),s||this.clickedEmptyMap(),s?.type=="depot"&&this.clickedDepot(s),s?.type=="leg"&&this.clickedLeg(s)},clickedDepot(s){const t=Object.values(s.vehicles).map(e=>e.$id);this.selectedTours=[],this.shownShipments=[];for(const e of this.tours)t.includes(e.vehicleId)&&(this.handleSelectTour(e),this.shipmentIdsInTour.forEach(i=>{this.shownShipments.push(this.shipmentLookup[i])}))},clickedLeg(s){s?.tour&&this.handleSelectTour(s?.tour)},clickedEmptyMap(){this.selectAllTours()},updateLegendColors(){},async loadCarriers(){const s=await this.loadFileOrGzippedFile(this.vizDetails.carriers);return s?(await E(s,{alwaysArray:["carriers.carrier","carriers.carrier.capabilities.vehicles.vehicle","carriers.carrier.plan.tour","carriers.carrier.shipments.shipment","carriers.carrier.services.service"]})).carriers.carrier.sort((i,o)=>u(i.$id,o.$id)):[]},async loadNetwork(){if(this.myState.statusMessage="Loading network...",this.vizDetails.network.indexOf(".xml.")>-1||this.vizDetails.network.endsWith(".avro")){const s=await this.myDataManager.getRoadNetwork(this.vizDetails.network,this.subfolder,this.vizDetails,null,!0);this.vizDetails.projection=""+s.projection,this.myState.statusMessage="Building network link table";const t={};return s.linkId.forEach((e,i)=>{t[e]=[s.source[i*2],s.source[i*2+1],s.dest[i*2],s.dest[i*2+1]]}),t}else{const s=await this.fileApi.getFileJson(this.myState.subfolder+"/"+this.vizDetails.network);return this.vizDetails.projection="EPSG:4326",s}},async fetchNetwork(s,t){return new Promise((e,i)=>{const o=new U;try{o.postMessage({filePath:s,fileSystem:this.fileSystem,vizDetails:t}),o.onmessage=r=>{if(r.data.promptUserForCRS){let n=prompt("Enter the coordinate reference system, e.g. EPSG:25832")||"EPSG:31468";Number.isFinite(parseInt(n))&&(n=`EPSG:${n}`),o.postMessage({crs:n});return}if(r.data.status){this.myState.statusMessage=""+r.data.status;return}o.terminate(),r.data.error&&(console.error(r.data.error),p.commit("error",r.data.error),this.myState.statusMessage=r.data.error,i(r.data.error)),e(r.data.links)}}catch(r){o.terminate(),console.error(r),i(r)}})},toggleLoaded(s){this.isLoaded=s},rotateColors(){localStorage.setItem("plugin/agent-animation/colorscheme",this.globalState.isDarkMode?w.DarkMode:w.LightMode)},async loadFileOrGzippedFile(s){let t=`${this.subfolder}/${s}`;try{if(t.indexOf("*")>-1||t.indexOf("?")>-1){const o=t.substring(1+t.lastIndexOf("/")),r=t.substring(0,t.lastIndexOf("/")),{files:n}=await this.fileApi.getDirectory(r),h=O(n,o);if(h.length==0)throw Error(`No files matched "${o}"`);if(h.length>1)throw Error(`More than one file matched "${o}": ${h}`);t=`${r}/${h[0]}`}let i="";if(t.endsWith("xml")||t.endsWith("gz")){const r=await(await this.fileApi.getFileBlob(t)).arrayBuffer(),n=await j(r);return new TextDecoder("utf-8").decode(n)}}catch{}const e=`Error loading ${t}`;return p.commit("error",e),this.myState.statusMessage=e,""},selectDropdown(){this.dropdownIsActive=!this.dropdownIsActive},selectPlan(s){for(let t=0;t<this.plans.length;t++)this.plans[t].$selected="false";s.$selected="true",this.selectedPlanIndex=this.plans.indexOf(s),this.selectedTours=[],this.selectDropdown(),this.selectedPlan=s}},async mounted(){if(p.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.subfolder=this.subfolder,this.yamlConfig||this.buildRouteFromUrl(),await this.getVizDetails(),!this.thumbnail){this.showHelp=!1,this.updateLegendColors(),this.myState.statusMessage="Loading carriers...",this.carriers=await this.loadCarriers(),await this.$nextTick(),this.links=await this.loadNetwork(),this.setMapCenter(),this.myState.statusMessage="",this.carriers.length&&this.handleSelectCarrier(this.carriers[0]),this.tours.length&&this.handleSelectTour(this.tours[0]);try{this.backgroundLayers=new q({vizDetails:this.vizDetails,fileApi:this.fileApi,subfolder:this.subfolder}),await this.backgroundLayers.initialLoad()}catch{this.$emit("error","Error loading background layers")}}},beforeDestroy(){this.myState.isRunning=!1,p.commit("setFullScreen",!1),this.$store.commit("setFullScreen",!1)}});var at=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("div",{staticClass:"carrier-viewer",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[e("div",{staticClass:"container-1",on:{mousemove:t.dividerDragging,mouseup:t.dividerDragEnd}},[e("div",{staticClass:"main-panel"},[t.thumbnail?t._e():e("DeckMapComponent",{staticClass:"anim",attrs:{activeTab:t.activeTab,bgLayers:t.backgroundLayers,shipments:t.shownShipments,depots:t.shownDepots,legs:t.shownLegs,stopActivities:t.stopActivities,dark:t.globalState.isDarkMode,center:t.vizDetails.center,viewId:t.linkLayerId,settings:t.vizSettings,numSelectedTours:t.selectedTours.length,onClick:t.handleClick,projection:t.vizDetails.projection,services:t.vizDetails.services||!1}}),t.thumbnail?t._e():e("ZoomButtons",{attrs:{corner:"top-left"}}),t.myState.statusMessage?e("div",{staticClass:"xmessage"},[t._v(t._s(t.myState.statusMessage))]):t._e()],1),e("div",{staticClass:"dragger",on:{mousedown:t.dividerDragStart,mouseup:t.dividerDragEnd,mousemove:function(i){return i.stopPropagation(),t.dividerDragging.apply(null,arguments)}}}),e("div",{staticClass:"right-panel",style:{width:`${t.legendSectionWidth}px`},attrs:{darkMode:!0}},[t.carriers.length?e("h3",{staticStyle:{"margin-left":"0.25rem"}},[t._v(t._s(t.$t("carriers")))]):t._e(),e("div",{staticClass:"carrier-list",attrs:{"data-testid":"carrier-list"}},t._l(t.carriers,function(i){return e("div",{key:i.$id,staticClass:"carrier",class:{selected:i.$id===t.selectedCarrier},on:{click:function(o){return t.handleSelectCarrier(i)}}},[e("div",{staticClass:"carrier-title"},[t._v(t._s(i.$id))])])}),0),e("h4",[t._v(t._s(t.selectedCarrier||"Details"))]),t.selectedCarrier?e("b-field",{staticClass:"detail-buttons",attrs:{size:"is-small"}},[e("b-radio-button",{attrs:{"native-value":"shipments",size:"is-small",type:"is-warning"},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("jobs")))])]),e("b-radio-button",{attrs:{"native-value":"tours",size:"is-small",type:"is-warning"},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("tours")))])]),e("b-radio-button",{attrs:{"native-value":"vehicles",size:"is-small",type:"is-warning"},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("vehicles")))])]),t.services.length?e("b-radio-button",{attrs:{"native-value":"services",size:"is-small",type:"is-warning"},model:{value:t.activeTab,callback:function(i){t.activeTab=i},expression:"activeTab"}},[e("span",[t._v(t._s(t.$t("services")))])]):t._e()],1):t._e(),e("div",{staticClass:"detail-area"},[t.activeTab=="shipments"&&!t.vizDetails.services?e("div",{staticClass:"shipments"},[e("span",[t._v(t._s(t.$t("jobs"))+": "+t._s(t.shipments.length))]),t._l(t.shipments,function(i,o){return e("div",{key:`${o}-${i.$id}`,staticClass:"leaf tour",class:{selected:i==t.selectedShipment,"shipment-in-tour":t.shipmentIdsInTour.includes(i.$id)},on:{click:function(r){return t.handleSelectShipment(i)}}},[t._v(t._s(`${i.$id}: ${i.$from}-${i.$to}`))])})],2):t._e(),t.activeTab=="shipments"&&t.vizDetails.services?e("div",{staticClass:"shipments"},[e("span",[t._v(t._s(t.$t("jobs"))+": "+t._s(t.shipments.length))]),t._l(t.shipments,function(i,o){return e("div",{key:`${o}-${i.$id}`,staticClass:"leaf tour",class:{selected:i==t.selectedShipment,"shipment-in-tour":t.shipmentIdsInTour.includes(i.$id)},on:{click:function(r){return t.handleSelectShipment(i)}}},[t._v(t._s(`${i.$id}`))])})],2):t._e(),t.activeTab=="tours"?e("div",{staticClass:"tours"},[this.plans.length>1?e("div",{staticClass:"dropdown",class:{"is-active":t.dropdownIsActive},staticStyle:{width:"100%"}},[e("div",{staticClass:"dropdown-trigger",on:{click:function(i){return t.selectDropdown()}}},[e("button",[e("span",[t._v("Plan "+t._s(t.selectedPlanIndex+1))]),t._m(0)])]),e("div",{staticClass:"dropdown-menu"},[e("div",{staticClass:"dropdown-content"},t._l(this.plans,function(i,o){return e("a",{staticClass:"dropdown-item",class:{"is-active":i.$selected=="true"},on:{click:function(r){return t.selectPlan(i)}}},[t._v("Plan "+t._s(o+1))])}),0)])]):t._e(),e("span",[t._v(t._s(t.$t("tours"))+": "+t._s(t.tours.length))]),t._l(t.tours,function(i,o){return e("div",{key:`${o}-${i.$id}`,staticClass:"leaf tour",class:{selected:t.selectedTours.includes(i)},on:{click:function(r){return t.handleSelectTour(i)}}},[i.tourId?e("div",[t._v(t._s(i.tourId)+": "+t._s(`${i.vehicleId}`))]):e("div",[t._v(t._s(`${i.vehicleId}`))])])})],2):t._e(),t.activeTab=="vehicles"?e("div",{staticClass:"vehicles"},[e("span",[t._v(t._s(t.$t("vehicles"))+": "+t._s(t.vehicles.length))]),t._l(t.vehicles,function(i,o){return e("div",{key:`${o}-${i.$id}`,staticClass:"leaf tour"},[t._v(t._s(i.$id))])})],2):t._e(),t.activeTab=="services"?e("div",{staticClass:"services"},[e("span",[t._v(t._s(t.$t("services"))+": "+t._s(t.services.length))]),t._l(t.services,function(i,o){return e("div",{key:`${o}-${i.$id}`,staticClass:"leaf tour"},[t._v(t._s(`${i.$id}`))])})],2):t._e()]),e("div",{staticClass:"switchbox"},[e("div",{staticClass:"switches"},[e("p",[t._v(t._s(t.$t("scaleSize")))]),e("b-slider",{staticClass:"slider",attrs:{tooltip:!1,type:"is-link",size:"is-small"},model:{value:t.vizSettings.scaleFactor,callback:function(i){t.$set(t.vizSettings,"scaleFactor",i)},expression:"vizSettings.scaleFactor"}})],1),e("div",{staticClass:"switches"},[e("b-switch",{model:{value:t.vizSettings.shipmentDotsOnTourMap,callback:function(i){t.$set(t.vizSettings,"shipmentDotsOnTourMap",i)},expression:"vizSettings.shipmentDotsOnTourMap"}},[e("span",{domProps:{innerHTML:t._s(t.$t("shipmentDots"))}})]),e("b-switch",{model:{value:t.vizSettings.simplifyTours,callback:function(i){t.$set(t.vizSettings,"simplifyTours",i)},expression:"vizSettings.simplifyTours"}},[e("span",{domProps:{innerHTML:t._s(t.$t("flatten"))}})])],1)])],1)])])},nt=[function(){var s=this,t=s._self._c;return s._self._setupProxy,t("span",{staticClass:"icon is-small"},[t("i",{staticClass:"fas fa-angle-down"})])}],lt=S(rt,at,nt,!1,null,"72db1728");const Xt=lt.exports;export{Xt as default};
