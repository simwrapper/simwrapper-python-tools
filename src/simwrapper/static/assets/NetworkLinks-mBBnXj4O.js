import{d as y,n as w,i as v,g,m as _,S as k,C as S}from"./index-BX7jQcoh.js";import{d as F}from"./index-CVL_6l40.js";import{r as $}from"./index-DvTjB8jE.js";import{Y as M}from"./index-DFKcNkqO.js";import{d as L}from"./index-lhh_utkZ.js";import{L as W,O}from"./LineOffsetLayer-BT_eFkEQ.js";import{M as j}from"./mapbox-overlay-HS93bZkL.js";import{K as N}from"./layer-T9N9JmIf.js";import{h as A,a as x,H as B}from"./HTTPFileSystem-D9FfZC5j.js";import{D as I}from"./DrawingTool-DQR36Aq1.js";import{V}from"./VizConfigurator-C_37ptpH.js";import{Z as q}from"./ZoomButtons-PxSjzru1.js";import{L as K}from"./LegendStore-CGgeb9zL.js";import{D as P}from"./DashboardDataManager-DOwC_6nC.js";import{B as E}from"./BackgroundLayers-CUd5LA7y.js";import{r as U}from"./cubehelix-BzW-tINw.js";import{o as Y,t as H}from"./threshold-CrWFx_nu.js";import"./line-layer-BJTc6V-8.js";import"./fxp-DjoqftHf.js";import"./geojson-layer-uU2lasyR.js";import"./lodash-CH54M7xw.js";import"./FileSelector-ByvkpmD-.js";import"./ColorsAndWidths-CaSMrknU.js";import"./rainbow-DNS2KC2A.js";import"./LegendBox-D8mLazfP.js";import"./group-hI8ly2Wr.js";import"./index-_doEQLKC.js";import"./Coords-C-Mhj230.js";import"./turf.es-BzqbG201.js";import"./geo-utils-CCVst3B0.js";import"./sequential-pySAYR1V.js";import"./pow-RbZoge3Z.js";import"./precisionRound-CRsIqO1V.js";function G(e,t){if(e===t)return!0;if(!e||!t)return!1;var s=Object.keys(e),a=Object.keys(t),i=s.length;if(a.length!==i)return!1;for(var o=0;o<i;o++){var n=s[o];if(e[n]!==t[n]||!Object.prototype.hasOwnProperty.call(t,n))return!1}return!0}const Z=y({name:"TimeSliderLinksGl",props:{useRange:Boolean,stops:{type:Array,required:!0},dropdownValue:String},data(){return{sliderValue:0}},watch:{useRange(e){e?this.sliderValue=[this.stops[0],this.stops[this.stops.length-1]]:this.sliderValue=[this.stops[0]],console.log("changed to: "+this.sliderValue)},sliderValue(e){this.$emit("change",e)}},mounted(){}});var J=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"time-slider-main-content"},[s("b-slider",{attrs:{max:t.stops.length-1,tooltip:!1},model:{value:t.sliderValue,callback:function(a){t.sliderValue=a},expression:"sliderValue"}},t._l(t.stops,function(a,i){return s("b-slider-tick",{key:i,attrs:{value:i}})}),1)],1)},Q=[],X=w(Z,J,Q,!1,null,"e30c6c5e");const tt=X.exports,et={messages:{en:{selectColumn:"Data:",loading:"Loading...",bandwidths:"Widths: 1 pixel =:",timeOfDay:"",colors:"Colors"},de:{selectColumn:"Datenmengen:",loading:"Laden...",bandwidths:"Linienbreiten: 1 pixel =:",timeOfDay:"",colors:"Farben"}}},st=y({name:"SelectorPanel",i18n:et,components:{TimeSlider:tt},props:{csvData:{type:Object,required:!0},scaleWidth:{type:Number,required:!0},showDiffs:{type:Boolean,required:!0},vizDetails:{type:Object,required:!0}},data(){return{isButtonActive:!1,isColorButtonActive:!1,scaleWidthValue:"",debounceScale:{},handleTimeSliderChanged:{}}},computed:{activeColumn(){return this.csvData.activeColumn},buttonTitle(){return this.activeColumn?this.activeColumn:""+this.$i18n.t("loading")}},watch:{scaleWidth(){this.scaleWidthValue=""+this.scaleWidth},scaleWidthValue(){isNaN(parseFloat(this.scaleWidthValue))||this.debounceScale()}},methods:{getColumns(){return Object.values(this.csvData.dataTable).slice(1).filter(t=>t.name&&t.type!==v.LOOKUP).map(t=>t.name)},gotNewScale(){this.$emit("scale",parseFloat(this.scaleWidthValue))},changeTimeSlider(e){e.length&&e.length===1&&(e=e[0]),this.$emit("slider",{dataset:this.csvData,column:this.getColumns()[e]})},handleClickDropdown(){this.isButtonActive=!this.isButtonActive},handleColorRamp(e){console.log(e),this.isColorButtonActive=!1,this.$emit("colors",e)},clearDropdown(){console.log("boop"),this.isButtonActive=!1},async handleSelectColumn(e){console.log("panel: selected",e),this.isButtonActive=!1,this.$emit("column",{dataset:this.csvData,column:e})}},mounted(){this.debounceScale=L.debounce(this.gotNewScale,500),this.handleTimeSliderChanged=L.debounce(this.changeTimeSlider,250),this.scaleWidthValue=""+this.scaleWidth}});var it=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"config-panel"},[t.vizDetails.useSlider&&t.activeColumn?s("div",{staticClass:"panel-item expand"},[s("p",[s("b",[t._v(t._s(t.activeColumn))])]),s("time-slider",{staticClass:"time-slider",attrs:{useRange:!1,stops:t.getColumns(),dropdownValue:t.activeColumn},on:{change:t.handleTimeSliderChanged}})],1):t._e(),t.vizDetails.useSlider?t._e():s("div",{staticClass:"panel-item selector-column-picker"},[s("p",[s("b",[t._v(t._s(t.$t("selectColumn")))])]),s("div",{staticClass:"dropdown is-up full-width",class:{"is-active":t.isButtonActive}},[s("div",{staticClass:"dropdown-trigger"},[s("button",{staticClass:"full-width is-warning button",class:{"is-loading":!t.activeColumn},attrs:{"aria-haspopup":"true","aria-controls":"dropdown-menu-column-selector"},on:{click:t.handleClickDropdown}},[s("b",[t._v(t._s(t.buttonTitle))]),t._m(0)])]),s("div",{staticClass:"dropdown-menu",style:{"max-height":"24rem","overflow-y":"auto",border:"1px solid #ccc"},attrs:{id:"dropdown-menu-column-selector",role:"menu"}},[s("div",{staticClass:"dropdown-content"},t._l(t.getColumns(),function(a){return s("a",{staticClass:"dropdown-item",on:{click:function(i){return t.handleSelectColumn(a)}}},[t._v(t._s(a))])}),0)])])])])},at=[function(){var e=this,t=e._self._c;return e._self._setupProxy,t("span",{staticClass:"icon is-small"},[t("i",{staticClass:"fas fa-angle-down",attrs:{"aria-hidden":"true"}})])}],ot=w(st,it,at,!1,null,"4f60e25c");const nt=ot.exports,z="/",lt=y({name:"LinksglDeckMapComponent",props:{viewId:{type:Number,required:!0},dark:{type:Boolean,required:!0},mapIsIndependent:{type:Boolean,required:!0},links:{type:Object,required:!0},colorRampType:{type:Number,required:!0},build:{type:Object,required:!0},base:{type:Object,required:!0},widths:{type:Object},widthsBase:{type:Object,required:!0},newColors:{type:Uint8Array,required:!0},newWidths:{type:Float32Array,required:!0},projection:{type:String},scaleWidth:{type:Number,required:!0},bgLayers:{type:Object}},data(){return{mymap:null,deckOverlay:null,globalState:g.state,tooltipHTML:"",tooltipStyle:{position:"absolute",padding:"4px 8px",display:"block",top:0,left:0,color:this.dark?"#ccc":"#223",backgroundColor:this.dark?"#2a3c4f":"white",zIndex:2e4}}},watch:{layers(){this.deckOverlay?.setProps({layers:this.layers})},dark(){const e=`${z}map-styles/${this.globalState.isDarkMode?"dark":"positron"}.json`;this.mymap?.setStyle(e)},"globalState.viewState"(){if(this.mapIsIndependent)return;const e=this.globalState.viewState,t=this.mymap?.getCenter();(e.longitude!==t.lng||e.latitude!==t.lat||e.zoom!==this.mymap?.getZoom()||e.pitch!==this.mymap?.getPitch()||e.bearing!==this.mymap?.getBearing())&&this.mymap?.jumpTo(Object.assign({center:{lng:e.longitude,lat:e.latitude}},e))}},computed:{widthDivisor(){return this.scaleWidth?1/this.scaleWidth:0},buildColumn(){return this.build?.dataTable[this.build.activeColumn]},baseColumn(){return this.base?.dataTable[this.base.activeColumn]},widthColumn(){return this.widths?.dataTable[this.widths.activeColumn]},isCategorical(){return this.colorRampType===0||this.buildColumn?.type==v.STRING},layers(){const e=N.DEFAULT,t=[],s=this.bgLayers?.layers();return s&&t.push(...s.layersBelow),t.push(new W({id:"linkLayer",data:{length:this.links.source.length/2,attributes:{getSourcePosition:{value:this.links.source,size:2},getTargetPosition:{value:this.links.dest,size:2},getColor:{value:this.newColors,size:4},getWidth:{value:this.newWidths,size:1}}},widthUnits:"pixels",widthScale:this.widthDivisor,widthMinPixels:.25,widthMaxPixels:50,pickable:!0,coordinateSystem:e,opacity:1,autoHighlight:!0,highlightColor:[255,0,224],offsetDirection:O.RIGHT,onHover:this.getTooltip,updateTriggers:{getSourcePosition:[this.links.source],getTargetPosition:[this.links.dest],getColor:[this.newColors,this.dark],getWidth:[this.newWidths]},transitions:{getColor:250,getWidth:250,widthScale:250},parameters:{depthTest:!1}})),s&&t.push(...s.layersOnTop),t}},async mounted(){const e=`${z}map-styles/${this.globalState.isDarkMode?"dark":"positron"}.json`,t=`map-${this.viewId}`,s=this.globalState.viewState.center;this.mymap=new _.Map({center:s,zoom:7,container:t,style:e}),this.mymap.on("move",this.handleMove),this.mymap.on("style.load",()=>{this.deckOverlay=new j({interleaved:!0,layers:this.layers,onClick:this.handleClick}),this.mymap?.addControl(this.deckOverlay)})},beforeDestroy(){this.deckOverlay&&this.mymap?.removeControl(this.deckOverlay),this.mymap?.remove()},methods:{buildTooltipHtml(e,t,s){try{if(!e)return null;const a=this.build.csvRowFromLinkRow[s];let i=e.values[a];if(this.isCategorical)return Number.isFinite(i)?`<b>${e.name}</b><p>${this.precise(i)}</p>`:null;let o=null;Number.isFinite(i)&&(o=`<b>${e.name}</b><p>Value: ${this.precise(i)}</p>`);const n=this.base?.csvRowFromLinkRow[s];if(n){let l=this.base?this.base.dataTable[t.name].values[n]:null,c=i-l;Number.isFinite(l)&&(o+=`<p>Base: ${this.precise(l)}</p>`,o+=`<p>+/- Base: ${this.precise(c)}</p>`)}return o}catch{return null}},getTooltip({x:e,y:t,object:s,index:a}){try{let i=this.buildTooltipHtml(this.buildColumn,this.baseColumn,a);if(this.widthColumn&&this.widthColumn.name!==this.buildColumn.name){const o=this.buildTooltipHtml(this.widthColumn,this.widthsBase.dataTable[this.widthsBase.activeColumn],a);o&&(i=i?i+o:o)}this.tooltipHTML=i||"",this.tooltipStyle={top:`${t+12}px`,left:`${e+12}px`}}catch(i){return console.warn(i),null}},precise(e){return A(e,{lowerExp:-6,upperExp:6,precision:5})},handleMove(){if(this.mapIsIndependent)return;const e=this.mymap?.getCenter(),t={latitude:e.lat,longitude:e.lng,zoom:this.mymap?.getZoom(),bearing:this.mymap?.getBearing(),pitch:this.mymap?.getPitch(),jump:!0};g.commit("setMapCamera",t)},handleClick(e,t){this.tooltipStyle.display="none"}}});var rt=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"deck-map flex-col"},[s("div",{staticClass:"map-container",attrs:{id:`map-${t.viewId}`}}),s("div",{staticClass:"deck-tooltip",style:t.tooltipStyle,domProps:{innerHTML:t._s(t.tooltipHTML)}})])},ct=[],ht=w(lt,rt,ct,!1,null,null);const dt=ht.exports,mt={messages:{en:{all:"All",colors:"Colors",loading:"Loading",selectColumn:"Select data column",timeOfDay:"Time of day",bandwidths:"Widths: 1 pixel =",showDiffs:"Show Differences"},de:{all:"Alle",colors:"Farben",loading:"Wird geladen",selectColumn:"Datenspalte wählen",timeOfDay:"Uhrzeit",bandwidths:"Linienbreiten: 1 pixel =",showDiffs:"Differenzen"}}},p="_LINK_OFFSET_",ut=y({name:"NetworkLinksPlugin",i18n:mt,components:{SelectorPanel:nt,DrawingTool:I,LinkGlLayer:dt,ToggleButton:F.ToggleButton,VizConfigurator:V,ZoomButtons:q},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){return{standaloneYAMLconfig:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},backgroundLayers:null,YAMLrequirementsLinks:{},vizDetails:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},currentUIFilterDefinitions:{},datasets:{},isButtonActiveColumn:!1,linkLayerId:Math.floor(1e12*Math.random()),scaleWidth:0,numLinks:0,showTimeRange:!1,legendStore:new K,geojsonData:{source:new Float32Array,dest:new Float32Array,linkId:[],projection:""},fixedColors:["#4e79a7"],myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},csvData:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidth:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidthBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},isDarkMode:this.$store.state.colorScheme===S.DarkMode,isDataLoaded:!1,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",currentWidthDefinition:{columnName:""},myDataManager:this.datamanager||new P(this.root,this.subfolder),resizer:void 0,dataLoaderWorkers:[],csvRowLookupFromLinkRow:{},colorArray:new Uint8Array,widthArray:new Float32Array}},computed:{fileApi(){return new B(this.fileSystem,g)},fileSystem(){const e=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(e.length===0)throw console.log("no such project"),Error;return e[0]},urlThumbnail(){return this.thumbnailUrl},colorRampType(){const e=this.vizDetails.display.color?.colorRamp?.style;return e===void 0?-1:e},buttonTitle(){return this.csvData.activeColumn||"Loading..."}},watch:{"$store.state.viewState"(){this.vizDetails.mapIsIndependent},"$store.state.colorScheme"(){setTimeout(()=>this.isDarkMode=this.$store.state.colorScheme===S.DarkMode,100)},"vizDetails.showDifferences"(){this.generateWidthArray(),this.generateColorArray()}},methods:{setDataIsLoaded(){this.isDataLoaded=!0},async getVizDetails(){const e=this.myState.yamlConfig,t={showDifferences:!1,datasets:{},display:{color:{},width:{}}};if(this.config){this.validateYAML(),this.vizDetails=Object.assign({},t,this.config);return}if((e?.endsWith("yaml")||e?.endsWith("yml"))&&await this.loadStandaloneYamlConfig(),/(shp|xml|geojson|geo\.json)(|\.gz)$/.test(e)){const a="Network: "+this.myState.yamlConfig;this.vizDetails=Object.assign({},this.vizDetails,{network:this.myState.yamlConfig,title:a,description:this.myState.subfolder})}const s=this.vizDetails.title?this.vizDetails.title:e||"Network Links";this.$emit("title",s)},async loadStandaloneYamlConfig(){try{const e=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,t=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=Object.assign({},M.parse(t)),this.validateYAML(),this.setVizDetails()}catch(e){console.error("failed");const t=e;this.fileSystem.needPassword&&t.status===401?this.$store.commit("requestLogin",this.fileSystem.slug):this.$emit("error",""+t)}},async validateYAML(){const e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let t;e?(console.log("--has viz-*.yaml"),t=this.standaloneYAMLconfig):(console.log("--no yaml, config came from dashboard"),t=this.config);for(const a in this.YAMLrequirementsLinks)a in t||this.$emit("error",{type:k.ERROR,msg:`YAML file missing required key: ${a}`,desc:"Check this.YAMLrequirementsLinks for required keys"});!t.network&&!t.geojsonFile&&this.$emit("error","Network file not specified")},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const e=await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail),t=await $.arraybuffer(e),s=x(t);s&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${s})`)}catch(e){console.error(e)}},toggleShowDiffs(){this.vizDetails.showDifferences=!this.vizDetails.showDifferences},changeConfiguration(e){e.color&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.color=e.color,this.handleNewColor(e.color)),e.width&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.width=e.width,this.handleNewWidth(e.width)),e.dataset&&this.handleNewDataset(e.dataset)},handleNewFilter(e){this.csvData=Object.assign({},this.csvData,{activeColumn:e[0]}),this.csvWidth=Object.assign({},this.csvWidth,{activeColumn:e[0]})},handleNewWidth(e){if(G(e,this.currentWidthDefinition))return;const{columnName:t,dataset:s,scaleFactor:a}=e;if(!s){this.scaleWidth=0;return}a!==void 0&&(this.scaleWidth=a);let i=!0;if(t||(i=!1),e.columnName===this.currentWidthDefinition.columnName&&e.dataset===this.currentWidthDefinition.dataset&&(i=!1),this.currentWidthDefinition=e,!i)return;const o=s?this.datasets[s]:this.csvWidth.dataTable;if(!o)return;if(this.csvWidth.dataTable!==o&&(this.csvWidth.dataTable=o,this.csvWidth.activeColumn=t||"",this.csvWidthBase.activeColumn=t||""),!o[t||""]){const l=`Width: column "${t}" not found in dataset "${this.csvData.datasetKey}"`;console.error(l),this.$emit("error",{type:k.ERROR,msg:l});return}this.csvWidth={datasetKey:s||this.csvWidth.datasetKey,dataTable:o,activeColumn:t||"",csvRowFromLinkRow:s?this.csvRowLookupFromLinkRow[s]:[]},this.generateWidthArray()},handleNewColor(e){this.fixedColors=e.fixedColors;const t=e.columnName;if(!t){this.generateColorArray();return}const s=e.dataset,a=this.datasets[s];if(!a)return;this.csvData.dataTable!==a&&(this.csvData={datasetKey:s,dataTable:a,activeColumn:"",csvRowFromLinkRow:this.csvRowLookupFromLinkRow[s]});const i=this.csvData.dataTable[t];if(!i){const o=`Color: Column "${t}" not found in dataset "${this.csvData.datasetKey}"`;console.error(o),this.$emit("error",{type:k.ERROR,msg:o});return}this.csvData.activeColumn=i.name,this.csvBase.activeColumn=i.name,this.isButtonActiveColumn=!1,this.generateColorArray()},setMapCenterFromVizDetails(){typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number)),this.vizDetails.zoom||(this.vizDetails.zoom=9),this.$store.commit("setMapCamera",{longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom,jump:!1}),this.vizDetails.center[0],this.vizDetails.center[1],this.vizDetails.zoom},async setMapCenter(){if(this.vizDetails.center)return this.setMapCenterFromVizDetails();const e=this.geojsonData;if(!e.source.length)return;let t=0,s=0,a=0;if(this.geojsonData.projection!=="Atlantis"){const i=e.source.length/2,o=i<4096?2:1024;for(let n=0;n<i;n+=o)s+=e.source[n*2],a+=e.source[n*2+1],t++;s=s/t,a=a/t}console.log("center",s,a),this.$store.commit("setMapCamera",{longitude:s,latitude:a,bearing:0,pitch:0,zoom:8,jump:!1})},async updateStatus(e){this.myState.statusMessage=e},async loadNetwork(){if(!this.myDataManager)throw Error("links: no datamanager");this.myState.statusMessage="Loading network...";const e=this.vizDetails.network||this.vizDetails.geojsonFile;if(!e){this.myState.statusMessage="",this.$emit("isLoaded");return}try{const t=await this.myDataManager.getRoadNetwork(e,this.myState.subfolder,this.vizDetails,this.updateStatus);this.numLinks=t.linkId.length,this.geojsonData=t,t.projection&&(this.vizDetails.projection=""+t.projection),this.setMapCenter(),this.myState.statusMessage="",this.$emit("isLoaded",!0),this.loadCSVFiles()}catch(t){this.myState.statusMessage="",this.$emit("error",""+t),this.$emit("isLoaded")}},generateUniqueDatasetKeyFromFilename(e){if(!(e in this.datasets))return e;console.log(e,"not unique");for(let t=2;t<100;t++){let s=`${e}_${t}`;if(!(s in this.datasets))return s}return`${e}__${Math.floor(100+1e5*Math.random())}`},handleNewDataset(e){const{key:t,dataTable:s,filename:a}=e,i=this.generateUniqueDatasetKeyFromFilename(t),n=Object.keys(s)[0],l=s[n];let c={};for(let r=0;r<l.values.length;r++)c[l.values[r]]=r;const d=[];for(let r=0;r<this.geojsonData.linkId.length;r++){const b=this.geojsonData.linkId[r],u=c[b];u!==void 0&&(d[r]=u)}this.csvRowLookupFromLinkRow[i]=d,c={},a&&(this.vizDetails.datasets[i]=a),this.datasets=Object.assign({...this.datasets},{[i]:s}),this.handleDatasetisLoaded(i)},generateWidthArray(){const e=this.geojsonData.linkId.length,t=new Float32Array(e),s=this.csvWidth?.dataTable[this.csvWidth.activeColumn]?.values,a=this.csvBase?.dataTable[this.csvBase.activeColumn]?.values,i=o=>{const n=this.csvWidth.csvRowFromLinkRow[o],l=s[n];if(this.vizDetails.showDifferences){const c=this.csvBase.csvRowFromLinkRow[o],d=a[c];return Math.abs(l-d)}else return l};for(let o=0;o<e;o++)t[o]=i(o);this.widthArray=t},generateColorArray(){const e=this.fixedColors.map(h=>{const m=U(h);return[m.r,m.g,m.b,255]}),t=4,s=new Array(this.fixedColors.length-1).fill(0).map((h,m)=>Math.pow(1/this.fixedColors.length*(m+1),t)),a=this.csvData.dataTable,i=this.csvBase.dataTable,o=this.csvData.activeColumn,n=a[o]||{};i[o];const l=this.colorRampType===0||n.type==v.STRING,c=l?Y().range(e):H().range(e).domain(s),d=this.geojsonData.linkId.length,r=new Uint8Array(4*d),b=g.state.isDarkMode?[80,80,80,96]:[212,212,212,40],u=[0,0,0,0],R=h=>{const m=this.csvData.csvRowFromLinkRow[h];let f=a[this.csvData.activeColumn]?.values[m];if(this.fixedColors.length===1)return e[0];if(!f&&!this.vizDetails.showDifferences)return u;if(l)return c(f);if(this.vizDetails.showDifferences){const D=this.csvBase.csvRowFromLinkRow[h],T=i[o].values[D],C=f-T;return C===0?b:this.isDarkMode?C>0?[255,64,64,255]:[64,96,255,255]:C>0?[255,0,0,255]:[32,64,255,255]}else{let D=f/(n.max||1);return c(D)}};for(let h=0;h<d;h++)r.set(R(h),h*4);this.colorArray=r},loadCSVFiles(){this.myState.statusMessage="Loading datasets...",this.vizDetails.datasets||(this.vizDetails.datasets={}),this.vizDetails.csvFile&&(this.vizDetails.datasets.csvFile=this.vizDetails.csvFile),this.vizDetails.csvBase&&(this.vizDetails.datasets.csvBase=this.vizDetails.csvBase);const e=Object.entries(this.vizDetails.datasets);if(e.length)for(const[t,s]of e)this.loadOneCSVFile(t,s);else this.showSimpleNetworkWithNoDatasets()},showSimpleNetworkWithNoDatasets(){this.csvData={datasetKey:"",dataTable:{[p]:{name:p,type:v.LOOKUP,values:[]}},activeColumn:p,csvRowFromLinkRow:[]};const e=this.geojsonData.source.length/2,t=[...Array(e).keys()];this.csvData.dataTable[p].values=t,this.myState.statusMessage="",this.setDataIsLoaded();const s={fixedColors:this.fixedColors,dataset:"",columnName:"",normalize:""};this.changeConfiguration({color:s})},handleDatasetisLoaded(e){const t=Object.keys(this.datasets);if(e==="csvBase"||e==="base")this.csvBase={datasetKey:e,dataTable:this.datasets[e],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[e],activeColumn:""},this.csvWidthBase={datasetKey:e,dataTable:this.datasets[e],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[e],activeColumn:""};else if(this.csvData.activeColumn===""&&!this.vizDetails.display.color&&!this.vizDetails.display.width){const s=Object.values(this.datasets[e])[0].name;this.csvData={datasetKey:e,dataTable:this.datasets[e],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[e],activeColumn:s}}t.length===Object.keys(this.vizDetails.datasets).length&&(this.setDataIsLoaded(),this.myState.statusMessage="")},async loadOneCSVFile(e,t){try{const a=(await this.myDataManager.getDataset({dataset:t},{subfolder:this.subfolder})).allRows;console.log("loaded",e),this.myState.statusMessage="Analyzing...";const i={};for(const o of Object.keys(a))o&&(i[o]=a[o]);this.handleNewDataset({key:e,dataTable:i})}catch{this.$emit("error","Could not load "+t),this.$emit("isLoaded")}},handleNewDataColumn(e){const{dataset:t,column:s}=e,a={};if(t.datasetKey===this.csvWidth.datasetKey){const i={...this.vizDetails.display.width};i.columnName=s,a.width=i}if(t.datasetKey===this.csvData.datasetKey){const i={...this.vizDetails.display.color};i.columnName=s,a.color=i}this.changeConfiguration(a)}},async mounted(){if(this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig??"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),this.scaleWidth=this.vizDetails.display?.width?.widthFactor||250,this.thumbnail){this.buildThumbnail();return}this.loadNetwork();try{this.backgroundLayers=new E({vizDetails:this.vizDetails,fileApi:this.fileApi,subfolder:this.subfolder}),await this.backgroundLayers.initialLoad()}catch{this.$emit("error","Error loading background layers")}},beforeDestroy(){this.resizer?.disconnect();try{for(const e of this.dataLoaderWorkers)e.terminate()}catch{}this.$store.commit("setFullScreen",!1)}});var ft=function(){var t=this,s=t._self._c;return t._self._setupProxy,s("div",{staticClass:"link-volume-plot",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[t.thumbnail?t._e():s("div",{staticClass:"plot-container"},[s("link-gl-layer",{staticClass:"map-area",attrs:{viewId:t.linkLayerId,links:t.geojsonData,colorRampType:t.colorRampType,build:t.csvData,base:t.csvBase,widths:t.csvWidth,widthsBase:t.csvWidthBase,dark:t.isDarkMode,newColors:t.colorArray,newWidths:t.widthArray,scaleWidth:t.scaleWidth,projection:t.vizDetails.projection,mapIsIndependent:t.vizDetails.mapIsIndependent,bgLayers:t.backgroundLayers}}),t.thumbnail?t._e():s("zoom-buttons"),!t.thumbnail&&t.isDataLoaded?s("viz-configurator",{attrs:{vizDetails:t.vizDetails,datasets:t.datasets,fileSystem:t.fileSystem,subfolder:t.myState.subfolder,yamlConfig:t.config,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration}}):t._e(),t.thumbnail?t._e():s("div",{staticClass:"bottom-panel"},[s("div",{directives:[{name:"show",rawName:"v-show",value:t.csvWidth.activeColumn,expression:"csvWidth.activeColumn"}],staticClass:"panel-items"},[s("div",{staticClass:"panel-item config-section"},[s("selector-panel",{attrs:{vizDetails:t.vizDetails,csvData:t.csvWidth,scaleWidth:t.scaleWidth,showDiffs:t.vizDetails.showDifferences},on:{column:t.handleNewDataColumn,slider:t.handleNewDataColumn}})],1),t.vizDetails.datasets.csvBase?s("div",{staticClass:"panel-item diff-section"},[s("toggle-button",{staticClass:"toggle",attrs:{width:40,value:t.vizDetails.showDifferences,sync:!0,labels:!1,color:{checked:"#4b7cc4",unchecked:"#222"}},on:{change:t.toggleShowDiffs}}),s("p",[s("b",[t._v(t._s(t.$t("showDiffs")))])])],1):t._e()]),t.myState.statusMessage?s("div",{staticClass:"status-message"},[s("p",[t._v(t._s(t.myState.statusMessage))])]):t._e()])],1)])},pt=[],vt=w(ut,ft,pt,!1,null,"e3bc29da");const Zt=vt.exports;export{Zt as default};
