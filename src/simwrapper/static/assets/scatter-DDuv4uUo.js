import{d as u,S as m,B as c,U as f,g,n as p}from"./index-BX7jQcoh.js";import{V as y}from"./VuePlotly-CfpY3a51.js";import{b}from"./ErrorPanel-Bv11F2tj.js";import{a as S}from"./ColorsAndWidths-CaSMrknU.js";import"./HTTPFileSystem-D9FfZC5j.js";import"./fxp-DjoqftHf.js";import"./index-DFKcNkqO.js";import"./index-lhh_utkZ.js";import"./SW_logo_white-Db4Yi2rP.js";import"./TopSheet-BbB-TdnX.js";import"./DashboardDataManager-DOwC_6nC.js";import"./group-hI8ly2Wr.js";import"./index-_doEQLKC.js";import"./cubehelix-BzW-tINw.js";import"./threshold-CrWFx_nu.js";import"./rainbow-DNS2KC2A.js";const x=u({name:"BarChartPanel",components:{VuePlotly:y},props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},files:{type:Array,required:!0},config:{type:Object,required:!0},cardTitle:{type:String,required:!0},cardId:String,datamanager:{type:Object,required:!0}},data:()=>({globalState:g.state,dataSet:{},colorMap:{},id:"scatter-"+Math.floor(1e12*Math.random()),layout:{height:300,margin:{t:8,b:0,l:0,r:0,pad:2},font:{color:"#444444",family:f},xaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:16},animate:!0},legend:{orientation:"v",x:1,y:1}},data:[],options:{displaylogo:!1,responsive:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"scatter-plot",width:null,height:null}}}),async mounted(){this.updateTheme(),this.options.toImageButtonOptions.filename=b(this.cardTitle,this.subfolder),this.dataSet=await this.loadData(),this.updateChart(),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions}),this.$emit("isLoaded")},beforeDestroy(){this.datamanager?.removeFilterListener({...this.config,subfolder:this.subfolder},this.handleFilterChanged)},watch:{"globalState.isDarkMode"(){this.updateTheme()}},methods:{changeDimensions(t){this.layout=Object.assign({},this.layout,t)},handleFilterChanged(){if(!this.datamanager)return;const{filteredRows:t}=this.datamanager.getFilteredDataset(this.config);if(!t||!t.length)this.dataSet={allRows:{}};else{const e={},i=Object.keys(t[0]);i.forEach(a=>e[a]={name:a,values:[]}),t.forEach(a=>{i.forEach(s=>e[s].values.push(a[s]))}),this.dataSet={allRows:e}}this.updateChart()},updateTheme(){const t={paper_bgcolor:c[this.globalState.colorScheme],plot_bgcolor:c[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},async loadData(){try{let t=await this.datamanager.getDataset(this.config,{subfolder:this.subfolder});if(!this.config.filters)return t;this.datamanager.addFilterListener({...this.config,subfolder:this.subfolder},this.handleFilterChanged);for(const[e,i]of Object.entries(this.config.filters)){const a={dataset:this.config.dataset,column:e,value:i,range:Array.isArray(i)};this.datamanager.setFilter(a)}return{allRows:{}}}catch(t){this.$emit("error",`Error loading: ${this.subfolder}/${this.config.dataset}`),console.error(""+t)}return{allRows:{}}},updateChart(){this.layout.xaxis.title.text=this.config.xAxisTitle||this.config.xAxisName||"",this.layout.yaxis.title.text=this.config.yAxisTitle||this.config.yAxisName||"";try{this.config.groupBy?this.updateChartWithGroupBy():this.updateChartSimple()}catch(t){const e=""+t;this.$emit("error",{type:m.ERROR,msg:e,desc:"Add a desription..."})}},updateChartWithGroupBy(){},updateChartSimple(){const t=this.dataSet.allRows||{};if(!Object.keys(t).length)return;this.config.factor;const i=this.config.columns||this.config.usedCol||[this.config.y];this.config.legendName&&this.config.legendName,this.config.legendTitle&&this.config.legendTitle;let a=!0;const s=["x"];for(const o of s)t[this.config[o]]||(this.$emit("error",`${this.cardTitle}: "${this.config.dataset}" ${s} column "${o}" missing`),a=!1);if(!a)return;let r=t[this.config.x].values||[];this.config.skipFirstRow&&(r=r.slice(1));const h=this.config.markerSize||3;this.colorMap=S(i,this.config.colorRamp);for(let o=0;o<i.length;o++){const l=i[o],d=l;let n=t[l].values;this.config.skipFirstRow&&(n=n.slice(1)),this.data.push({x:r,y:n,name:d,mode:"markers",type:"scatter",textinfo:"label+percent",textposition:"inside",automargin:!0,showlegend:!0,marker:{size:h,color:this.colorMap[o]}})}}}});var C=function(){var e=this,i=e._self._c;return e._self._setupProxy,i("VuePlotly",{staticClass:"myplot",attrs:{data:e.data,layout:e.layout,options:e.options}})},v=[],R=p(x,C,v,!1,null,"915efa2e");const E=R.exports;export{E as default};
